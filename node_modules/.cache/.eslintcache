[{"/home/kali/Desktop/c++/proshop/src/index.js":"1","/home/kali/Desktop/c++/proshop/src/App.js":"2","/home/kali/Desktop/c++/proshop/src/components/Footer.js":"3","/home/kali/Desktop/c++/proshop/src/components/Header.js":"4","/home/kali/Desktop/c++/proshop/src/screens/Homescreens.js":"5","/home/kali/Desktop/c++/proshop/src/products.js":"6","/home/kali/Desktop/c++/proshop/src/components/Product.js":"7","/home/kali/Desktop/c++/proshop/src/components/Rating.js":"8","/home/kali/Desktop/c++/proshop/src/screens/Productscreens.js":"9","/home/kali/Desktop/c++/proshop/src/store.js":"10","/home/kali/Desktop/c++/proshop/src/reducers/productReducers.js":"11","/home/kali/Desktop/c++/proshop/src/constants/productConstants.js":"12","/home/kali/Desktop/c++/proshop/src/actions/productActions.js":"13","/home/kali/Desktop/c++/proshop/src/components/Message.js":"14","/home/kali/Desktop/c++/proshop/src/components/Loader.js":"15","/home/kali/Desktop/c++/proshop/src/screens/Cart.js":"16","/home/kali/Desktop/c++/proshop/src/reducers/cartReducers.js":"17","/home/kali/Desktop/c++/proshop/src/constants/cartConstants.js":"18","/home/kali/Desktop/c++/proshop/src/actions/cartActions.js":"19","/home/kali/Desktop/c++/proshop/src/reducers/userReducers.js":"20","/home/kali/Desktop/c++/proshop/src/constants/userConstansts.js":"21","/home/kali/Desktop/c++/proshop/src/screens/LoginScreen.js":"22","/home/kali/Desktop/c++/proshop/src/components/FormContainer.js":"23","/home/kali/Desktop/c++/proshop/src/actions/userActions.js":"24","/home/kali/Desktop/c++/proshop/src/screens/RegisterScreen.js":"25","/home/kali/Desktop/c++/proshop/src/screens/ProfileScreen.js":"26","/home/kali/Desktop/c++/proshop/src/screens/ShippingScreens.js":"27","/home/kali/Desktop/c++/proshop/src/components/CheckoutSteps.js":"28","/home/kali/Desktop/c++/proshop/src/screens/PaymentScreens.js":"29","/home/kali/Desktop/c++/proshop/src/screens/PlaceOrderScreen.js":"30","/home/kali/Desktop/c++/proshop/src/reducers/orderReducer.js":"31","/home/kali/Desktop/c++/proshop/src/constants/orderConstansts.js":"32","/home/kali/Desktop/c++/proshop/src/actions/orderActions.js":"33","/home/kali/Desktop/c++/proshop/src/screens/OrderScreen.js":"34","/home/kali/Desktop/c++/proshop/src/screens/UserListScreen.js":"35","/home/kali/Desktop/c++/proshop/src/screens/UserEditScreen.js":"36","/home/kali/Desktop/c++/proshop/src/screens/ProductListScreen.js":"37","/home/kali/Desktop/c++/proshop/src/screens/ProductEditScreen.js":"38","/home/kali/Desktop/c++/proshop/src/screens/OrderListScreen.js":"39","/home/kali/Desktop/c++/proshop/src/components/SearchBox.js":"40","/home/kali/Desktop/c++/proshop/src/components/ProductCarousel.js":"41"},{"size":565,"mtime":1682346352198,"results":"42","hashOfConfig":"43"},{"size":2405,"mtime":1687414309902,"results":"44","hashOfConfig":"43"},{"size":356,"mtime":1674566162131,"results":"45","hashOfConfig":"43"},{"size":3050,"mtime":1687445442214,"results":"46","hashOfConfig":"43"},{"size":1299,"mtime":1687374578025,"results":"47","hashOfConfig":"43"},{"size":2486,"mtime":1674570940609,"results":"48","hashOfConfig":"43"},{"size":885,"mtime":1701513376213,"results":"49","hashOfConfig":"43"},{"size":1440,"mtime":1674576648632,"results":"50","hashOfConfig":"43"},{"size":7053,"mtime":1687414381636,"results":"51","hashOfConfig":"43"},{"size":2214,"mtime":1687358130996,"results":"52","hashOfConfig":"43"},{"size":3740,"mtime":1687358107816,"results":"53","hashOfConfig":"43"},{"size":1451,"mtime":1687357962295,"results":"54","hashOfConfig":"43"},{"size":5252,"mtime":1701513569590,"results":"55","hashOfConfig":"43"},{"size":254,"mtime":1682406656320,"results":"56","hashOfConfig":"43"},{"size":357,"mtime":1682406634875,"results":"57","hashOfConfig":"43"},{"size":3354,"mtime":1687414151647,"results":"58","hashOfConfig":"43"},{"size":1322,"mtime":1684086214576,"results":"59","hashOfConfig":"43"},{"size":233,"mtime":1684059822300,"results":"60","hashOfConfig":"43"},{"size":1339,"mtime":1701513623815,"results":"61","hashOfConfig":"43"},{"size":3042,"mtime":1687419193276,"results":"62","hashOfConfig":"43"},{"size":1167,"mtime":1687118410049,"results":"63","hashOfConfig":"43"},{"size":2261,"mtime":1683962749308,"results":"64","hashOfConfig":"43"},{"size":365,"mtime":1683310836577,"results":"65","hashOfConfig":"43"},{"size":5109,"mtime":1701513586514,"results":"66","hashOfConfig":"43"},{"size":3217,"mtime":1687415400291,"results":"67","hashOfConfig":"43"},{"size":5519,"mtime":1687099696643,"results":"68","hashOfConfig":"43"},{"size":2555,"mtime":1684088183460,"results":"69","hashOfConfig":"43"},{"size":1288,"mtime":1684058842196,"results":"70","hashOfConfig":"43"},{"size":2106,"mtime":1684086710184,"results":"71","hashOfConfig":"43"},{"size":7169,"mtime":1687412375256,"results":"72","hashOfConfig":"43"},{"size":3718,"mtime":1687414626068,"results":"73","hashOfConfig":"43"},{"size":1262,"mtime":1687267574721,"results":"74","hashOfConfig":"43"},{"size":5719,"mtime":1701513605474,"results":"75","hashOfConfig":"43"},{"size":7381,"mtime":1687270517709,"results":"76","hashOfConfig":"43"},{"size":2868,"mtime":1687163181323,"results":"77","hashOfConfig":"43"},{"size":2473,"mtime":1687419312037,"results":"78","hashOfConfig":"43"},{"size":4060,"mtime":1687415945790,"results":"79","hashOfConfig":"43"},{"size":6082,"mtime":1687442661373,"results":"80","hashOfConfig":"43"},{"size":2950,"mtime":1687269803490,"results":"81","hashOfConfig":"43"},{"size":868,"mtime":1701507826804,"results":"82","hashOfConfig":"43"},{"size":1486,"mtime":1701507809046,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},"negfd5",{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"87"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"87"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"87"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"87"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"87"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"87"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"87"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"87"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"87"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"87"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"87"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"87"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"87"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"87"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"87"},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"87"},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"87"},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"87"},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"87"},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"87"},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/kali/Desktop/c++/proshop/src/index.js",[],[],[],"/home/kali/Desktop/c++/proshop/src/App.js",[],[],"/home/kali/Desktop/c++/proshop/src/components/Footer.js",[],[],"/home/kali/Desktop/c++/proshop/src/components/Header.js",["229","230","231","232"],[],"import React from 'react'\n\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport {useDispatch,useSelector} from 'react-redux'\n\nimport {Container,Nav,Navbar, NavDropdown} from 'react-bootstrap'\nimport {\n  Route,\n  Lin,BrowserRouter,Routes\n} from 'react-router-dom'\nimport {LinkContainer} from 'react-router-bootstrap'\nimport { logout } from '../actions/userActions';\nimport SearchBox from '../components/SearchBox';\nimport { Link } from 'react-router-dom';\nconst Header = () => {\n  // const navigate=useNavigate()\n  const  dispath=useDispatch()\n  const userLogin=useSelector(state=>state.userLogin)\n  const {userInfo}=userLogin\n  \n  const logoutHandler=()=>{\n  dispath(logout())\n  \n  }\n  return (\n    <header>\n     <Navbar bg=\"dark\" variant='dark' expand=\"lg\" collapseOnSelect>\n      <Container>\n        <Navbar.Brand href=\"/\">proshop</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n         \n          <BrowserRouter>\n           <Routes>\n              {/* <SearchBox/> */}\n          <Route path='/search/:keyword' element={<SearchBox/>} />\n          {/* <SearchBox/> */}\n          </Routes>\n          </BrowserRouter>\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"/cart\"><i className='fas fa-shopping-cart'></i>Cart</Nav.Link>\n            {userInfo?(\n              <DropdownButton id=\"dropdown-basic-button\" title={userInfo.name}>\n              <Dropdown.Item href=\"/profile\">Profile</Dropdown.Item>\n              <Dropdown.Item onClick={logoutHandler}>Logout</Dropdown.Item>\n              \n             </DropdownButton>\n\n                // <NavDropdown title={userInfo.name}id='username'>\n                //   <LinkContainer to='/profile'>\n                //     <NavDropdown title=\"profile\">\n                //       <NavDropdown.Item>Profile</NavDropdown.Item>\n                //     </NavDropdown>\n                //     <LinkContainer to='/' onClick={logoutHandler}>\n                //       <NavDropdown.Item>Logout</NavDropdown.Item>\n                //     </LinkContainer>\n                //   </LinkContainer>\n                  \n                // </NavDropdown>\n\n            ):\n            // <a href='/login'>  \n            <Nav.Link href='/login'><i className='fas fa-user'></i>Sigin In</Nav.Link>\n               \n              \n               }\n               \n               \n               {userInfo && userInfo.name===\"Admin User\" && (\n               \n                  <DropdownButton id=\"adminmenu\" title='Admin'>\n                  <Dropdown.Item href=\"/admin/userlist\">Users</Dropdown.Item>\n                  <Dropdown.Item href=\"/admin/productlist\">Product</Dropdown.Item>\n                  <Dropdown.Item href=\"/admin/orderlist\">Orders</Dropdown.Item>\n                \n                  \n                </DropdownButton>\n\n               )}\n               </Nav>\n        </Navbar.Collapse>\n      \n      </Container>\n    </Navbar>\n    </header>\n  )\n}\n\nexport default Header\n","/home/kali/Desktop/c++/proshop/src/screens/Homescreens.js",["233","234","235"],[],"import React ,{useState,useEffect} from 'react'\nimport products from '../products'\nimport {Row,Col} from 'react-bootstrap'\nimport Product from '../components/Product'\nimport { useDispatch,useSelector } from 'react-redux'\nimport Message from  '../components/Message'\nimport LOader  from '../components/Loader'\n\n// import axios from 'axios'\nimport { listProduct } from '../actions/productActions'\nimport ProductCarousel from '../components/ProductCarousel'\nconst Homescreens = () => {\n  const dispatch=useDispatch()\n  // const [product,setproduct]=useState([])\n  const productList=useSelector(state=> state.productList)\n  const {loading,error,products}=productList\n  useEffect(()=>{\n    dispatch(listProduct())\n\n    // const fetchProducts=async()=>{\n    //   const {data}=await axios.get('/api/products')\n    //   setproduct(data)\n    // }\n    // fetchProducts()\n  },[dispatch])\n  // const products=[]\n  return (\n    <>\n    <ProductCarousel/>\n      <h1>Latest Products</h1>\n      {loading ? <h2>Loading...</h2>:error?(<Message variant='danger'></Message>):\n      <Row>\n        {products.map(products=>(\n            <Col key={products._id}sm={12} md={6} lg={4} xl={3}>\n               <Product product={products}/>\n            </Col>\n\n        ))}\n      </Row>}\n    </>\n  )\n}\n\nexport default Homescreens\n","/home/kali/Desktop/c++/proshop/src/products.js",[],[],"/home/kali/Desktop/c++/proshop/src/components/Product.js",[],[],"/home/kali/Desktop/c++/proshop/src/components/Rating.js",["236","237"],[],"import React,{Component} from 'react'\nimport PropTypes from 'prop-types'\n\nconst Rating = ({value,text,color}) => {\n  return (\n    <div className='rating'>\n        <span>\n            <i style={{color}}\n            className={value>=1?'fas fa-star':value>=0.5?'fa-regular fa-star-sharp-half-stroke':'far fa-star'}>\n\n            </i>\n        </span> \n        <span>\n            <i style={{color}}\n            className={value>=2?'fas fa-star':value>=1.5?'fa-regular fa-star-sharp-half-stroke':'far fa-star'}>\n                \n            </i>\n        </span>\n        <span>\n            <i style={{color}}\n             className={value>=3?'fas fa-star':value>=2.5?'fa-regular fa-star-sharp-half-stroke':'far fa-star'}>\n                \n            </i>\n        </span>\n        <span>\n            <i style={{color}}\n            className={value>=4?'fas fa-star':value>=3.5?'fa-regular fa-star-sharp-half-stroke':'far fa-star'}>\n                \n            </i>\n        </span>\n        <span>\n            <i style={{color}}\n            className={value>=5?'fas fa-star':value>=4.5?'fa-regular fa-star-sharp-half-stroke':'far fa-star'}>\n                \n            </i>\n        </span>\n      <span >{text && text}</span>\n    </div>\n  )\n}\nRating.defaultProps={\n    color:'#f8e825'\n}\n// Rating.propTypes={\n//     value:PropTypes.number.isRequired,\n//     text:PropTypes.string.isRequired,\n//     color:propTypes.string,\n// }\nexport default Rating\n","/home/kali/Desktop/c++/proshop/src/screens/Productscreens.js",["238","239","240"],[],"import React,{useEffect,useState} from 'react'\nimport { Col, ListGroup,Image, Row,Card,Button, ListGroupItem ,Form} from 'react-bootstrap'\nimport {useNavigate,Link, useMatch, useParams } from 'react-router-dom'\nimport Rating from '../components/Rating' \nimport Message from '../components/Message'\nimport { useDispatch,useSelector } from 'react-redux'\nimport { listProductDetails,createProductReview} from '../actions/productActions'\n\n// import { useHistory } from \"react-router-dom\";\nimport Loader from '../components/Loader'\nimport axios from 'axios'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\nconst Productscreens = ({}) => {\n  const [qty,setqty]=useState(1);\n  const[rating,setRating]=useState('')\n  const[comment,setComment]=useState('')\n\n  //  match = useMatch();\n  const {id} = useParams();\n  const navigate = useNavigate();\n    // const [product,setprodu-ct]=useState({});\n    // console.log(id)\n    const dispatch=useDispatch()\n    const pr=useSelector(state=>state.productDetails)\n      const {loading,error,product}=pr\n     \n      const userLogin=useSelector(state=>state.userLogin)\n      const {userInfo}=userLogin\n       \n      const productReviewCreate=useSelector(state=>state.productReviewCreate)\n      const{success:successProductReview,error:errorProductReview}=productReviewCreate\n      \n     \n      useEffect(()=>{\n\n        if(successProductReview){\n          alert('Review Submitted!')\n          setRating(0)\n          setComment('')\n          dispatch({type:PRODUCT_CREATE_REVIEW_RESET})\n        }\n      dispatch(listProductDetails(id))\n      \n\n      // const fetchProducts=async ()=>{\n        // const {data}=await axios.get(`/api/products/${match.id}`);\n        // setproduct(data);\n        // console.log(id._id)\n          \n      // }\n      // fetchProducts()\n// console.log('this is id',id)\n     },[dispatch,id,successProductReview])\n     const addToCartHandler =()=>{\n     \n        navigate(`/cart/${id}/${qty}`)\n \n      }\n      const submitHandler=(e)=>{\n        e.preventDefault()\n        dispatch(createProductReview(id,{rating,comment}))\n      }\n\n// product={}\n      \n  return ( \n    <>\n        <Link className='btn btn-dark my-3' to=\"/\">Go back</Link>\n       {loading?<Loader/>:error?<Message variant='danger'> {error}</Message>:(\n        <>\n        <Row>\n        <Col md={6}>\n          {/* {product.image} */}\n          <Image src ={product.image} alt={product.name} fluid/>\n        </Col>\n        <Col md={3}>\n           <ListGroup variant='flush'>\n               <ListGroup.Item>\n                   <h2>{product.name}</h2>\n               </ListGroup.Item>\n               <ListGroup.Item>\n                   <Rating value={product.rating} text={`${product.numReviews} reviews`}/>\n               </ListGroup.Item>\n               <ListGroup.Item>\n                Price:${product.price}\n               </ListGroup.Item>\n               <ListGroup.Item>\n                Description:${product.description}\n               </ListGroup.Item>\n               \n           </ListGroup>\n\n        </Col>\n            <Col md={3}>\n              <Card>\n                <ListGroup variant='flush'>\n                  <ListGroupItem>\n                    <Row>\n                      <Col>\n                        Price:\n                      </Col>\n                      <Col>\n                      <strong>${product.price}</strong>\n                      </Col>\n                    </Row>\n                  </ListGroupItem>\n\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>\n                        Status:\n                      </Col>\n                      <Col>\n                      {product.countInStock>0?'In Stock':'Out of Stock'}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                  {product.countInStock > 0 && (\n                      <ListGroup.Item>\n                        <Row>\n                          <Col>Qty</Col>\n                          <Col>\n                            <Form.Control as='select' value={qty} onChange={(e)=>\n                            setqty(e.target.value)}>\n                              {\n                              [...Array(product.countInStock).keys()].map((x)=>(\n                                <option key={x+1} value={x+1}>\n                                  {x+1}\n                                </option>\n                              ))}\n                            </Form.Control>\n                          </Col>\n                        </Row>\n                      </ListGroup.Item>\n                  )}\n\n\n\n                  <ListGroup.Item>\n                    <Button className='btn-block' type='button'\n                      onClick={addToCartHandler}\n                      disabled={product.countInStock===0}>\n                      Add to Cart\n                    </Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n     </Row> \n    <Row>\n      <Col md={6}>\n       <h2>Reviews</h2>\n       {product.reviews.length===0 &&<Message>No Reviews</Message>}\n       <ListGroup variant='flush'>\n              {product.reviews.map(review=>(\n                <ListGroup.Item key={review._id}>\n                    <strong>{review.name}</strong>\n                    <Rating value={review.rating}/>\n                    <p>{review.createdAt.substring(0,10)}</p>\n                    <p>{review.comment}</p>\n                </ListGroup.Item>\n              ))}\n              <h2>Write a Customer Review</h2>\n              {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\n              {userInfo?(\n              <Form onSubmit={submitHandler}>\n                <Form.Group controlId='rating'>\n                  <Form.Label>Rating</Form.Label>\n                    <Form.Control as='select' value={rating} onChange={(e)=>\n                      setRating(e.target.value)}>\n                        <option value=''>Select...</option>\n                        <option value='1'>1 - Poor</option>\n                        <option value='2'>2 - Fair</option>\n                        <option value='3'>3 - Good</option>\n                        <option value='4'>4 - Very good</option>\n                        <option value='5'>5 - Excellent</option>\n                      </Form.Control>\n                  </Form.Group>  \n                <Form.Group controlId='comment'>\n                  <Form.Label>Comment</Form.Label>\n                  <Form.Control as='textarea' rows='3'\n                    value={comment} onChange={(e)=>setComment(e.target.value)}>\n                  </Form.Control>\n\n                </Form.Group>\n                <Button type='submit' variant='primary'>\n                  Submit\n                </Button>\n              </Form>):(<Message>\n              Please <Link to='/login' >sign in</Link>to write a review\n              {' '}</Message>)}\n       </ListGroup>\n      </Col>\n    </Row>\n    \n     </>\n      )}\n      \n    </>\n\n  )\n}\n\n\nexport default Productscreens\n","/home/kali/Desktop/c++/proshop/src/store.js",[],[],"/home/kali/Desktop/c++/proshop/src/reducers/productReducers.js",[],[],"/home/kali/Desktop/c++/proshop/src/constants/productConstants.js",[],[],"/home/kali/Desktop/c++/proshop/src/actions/productActions.js",[],[],"/home/kali/Desktop/c++/proshop/src/components/Message.js",[],[],"/home/kali/Desktop/c++/proshop/src/components/Loader.js",[],[],"/home/kali/Desktop/c++/proshop/src/screens/Cart.js",["241","242"],[],"import React,{useEffect}from 'react'\nimport { useDispatch,useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport { Link,useNavigate } from 'react-router-dom'\nimport {Row,Col,ListGroup,Image,Form,Button,Card, ListGroupItem} from 'react-bootstrap'\nimport { addToCart, removefromcart } from '../actions/cartActions'\nimport { useParams } from 'react-router'\nimport { CART_ADD_ITEMS } from '../constants/cartConstants'\n\nconst Cart = ({}) => {\n    \n    const {id,qty} = useParams()\n      const dispatch=useDispatch()\n      const cart=useSelector((state)=>state.cart)\n      const {cartItems}=cart\n      console.log(id)\n      // console.log(qty)\n      const navigate=useNavigate()\n      useEffect(()=>{\n        \n        if(id &&qty!==undefined){\n          dispatch(addToCart(id,qty))\n        }\n        if(id){\n          dispatch(addToCart(id))\n        }\n      },[dispatch,id,qty])\n\nconst removecartHandler =(id)=>{\n  dispatch(removefromcart(id))\n  console.log(id)\n}\nconst checkouthandler=()=>{\n  console.log('checkout')\n  navigate(`/shipping `)\n}\n    return (\n    <Row>\n      <Col md={8}>\n        <h1>Shopping cart</h1>\n        {cartItems.length===0?<Message>Your cart is empty <Link to ='/'>Go back</Link></Message>\n        :(<ListGroup variant='flush'>\n          {cartItems.map(item=>(\n            <ListGroupItem key={item.product}>\n              <Row>\n                <Col md={2}>\n                  <Image src={item.image} alt={item.name} fluid rounder />\n                </Col>\n                <Col md={3}>\n                  <Link to={`/product/${item.product}`}>{item.name}</Link>\n                </Col>\n                <Col md={2}>${item.price}</Col>\n                <Col md={2}>\n                  <Form.Control as='select' value={qty} onChange={(e)=>\n                              dispatch(addToCart(item.product,Number(e.target.value)))}>\n                                {\n                                [...Array(item.countInStock).keys()].map((x)=>(\n                                  <option key={x+1} value={x+1}>\n                                    {x+1}\n                                  </option>\n                                ))}\n                              </Form.Control>\n                </Col>\n                <Col md={2}>\n                  <Button type='button' variant='light' onClick={()=>\n                    removecartHandler(item.product)}>\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                </Col>\n              </Row>\n\n            </ListGroupItem>\n          ))}\n        </ListGroup>)}\n\n\n\n      </Col>\n      <Col md={4}>\n        <Card>\n          <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Subtotal \n                   ({cartItems.reduce((acc, item)  => Number( acc + item.qty), 0)})\n                 items</h2>\n                <h2>\n                  ({cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)})\n                </h2>\n              </ListGroup.Item>\n              <ListGroupItem>\n                <Button type='button' className='btn-block' disabled={cartItems.length===0}\n                onClick={checkouthandler}>Proceed to Cart</Button>\n              </ListGroupItem>\n          </ListGroup>\n        </Card>\n      </Col>\n      <Col md={2}></Col>\n    </Row>\n  )\n}\n\nexport default Cart","/home/kali/Desktop/c++/proshop/src/reducers/cartReducers.js",["243"],[],"import { CART_ADD_ITEMS, CART_REMOVE_ITEMS, CART_SAVE_SHIPPING_ADDRESS, CART_SAVING_PAYMENT_METHOD } from \"../constants/cartConstants\";\n\nexport const cartReducers= (state ={cartItems:[],shippingAddress:{}},action)=>{\n    switch(action.type){\n        case CART_ADD_ITEMS:\n            const item=action.payload\n\n            const existItem=state.cartItems.find(x => x.product===item.product)\n            if(existItem){\n                return {\n                    ...state,\n                    cartItems:state.cartItems.map(x=>x.product===existItem\n                        .product ? item : x)\n                }\n            }else{\n                return {...state,\n                        cartItems:[...state.cartItems, item]}\n            }\n            case CART_REMOVE_ITEMS:\n                return {\n                    ...state,\n                    cartItems:state.cartItems.filter(x =>x.product!=action.payload),\n                }\n            case CART_SAVE_SHIPPING_ADDRESS:\n                return {...state,\n                    shippingAddress:action.payload,\n                }\n            case CART_SAVING_PAYMENT_METHOD:\n                return {\n                    ...state,\n                    paymentMethod:action.payload,\n                    \n                }\n        default:\n            return state\n    }\n}\n\n","/home/kali/Desktop/c++/proshop/src/constants/cartConstants.js",[],[],"/home/kali/Desktop/c++/proshop/src/actions/cartActions.js",["244"],[],"import axios from \"axios\";\nimport { useState } from \"react\";\nimport {\n  CART_ADD_ITEMS,\n  CART_REMOVE_ITEMS,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVING_PAYMENT_METHOD,\n} from \"../constants/cartConstants\";\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/products/${id}`);\n  console.log(data);\n  dispatch({\n    type: CART_ADD_ITEMS,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty,\n    },\n  });\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n};\nexport const removefromcart = (id) => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEMS,\n    payload: id,\n  });\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n};\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data,\n  });\n  localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\n};\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVING_PAYMENT_METHOD,\n    payload: data,\n  });\n  localStorage.setItem(\"paymentMethod\", JSON.stringify(data));\n  // localStorage.setItem('paymentMethod',JSON.stringify(data))\n};\n","/home/kali/Desktop/c++/proshop/src/reducers/userReducers.js",["245"],[],"import { USER_DELETE_FAIL, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_RESET, USER_LIST_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_RESET, USER_UPDATE_PROFILE_SUCCESS } from \"../constants/userConstansts\";\n\nexport const userLoginReducers = (state={ },action)=>{\n    switch(action.type){\n        case USER_LOGIN_REQUEST:\n            return {loading:true};\n        case USER_LOGIN_SUCCESS:\n            return {loading:false,userInfo:action.payload};\n        case USER_LOGIN_FAIL:\n            return {loading:false,error:action.payload};\n        case USER_LOGIN_FAIL:\n            return {};\n        default:\n            return state\n    }\n}\n\n\nexport const userRegisterReducers = (state={ },action)=>{\n    switch(action.type){\n        case USER_REGISTER_REQUEST:\n            return {loading:true};\n        case USER_REGISTER_SUCCESS:\n            return {loading:false,userInfo:action.payload};\n        case USER_REGISTER_FAIL:\n            return {loading:false,error:action.payload};\n        default:\n            return state\n    }\n}\n\nexport const userDetailsReducers = (state={loading:true,user:{} },action)=>{\n    switch(action.type){\n        case USER_DETAILS_REQUEST:\n            return {...state,loading:true};\n        case USER_DETAILS_SUCCESS:\n            return {loading:false,user:action.payload};\n        case USER_DETAILS_FAIL:\n            return {loading:false,error:action.payload};\n        case USER_UPDATE_PROFILE_RESET:\n            return {user :{}}\n        default:\n            return state\n    }\n}\n\nexport const userUpdateProfileReducers = (state={},action)=>{\n    switch(action.type){\n        case USER_UPDATE_PROFILE_REQUEST:\n            return {loading:true};\n        case USER_UPDATE_PROFILE_SUCCESS:\n            return {loading:false,success:true,userInfo:action.payload};\n        case USER_UPDATE_PROFILE_FAIL:\n            return {loading:false,error:action.payload};\n        default:\n            return state\n    }\n}\n\n\nexport const userListReducer = (state={loading:true,users:[]},action)=>{\n    switch(action.type){\n        case USER_LIST_REQUEST:\n            return {loading:true};\n        case USER_LIST_SUCCESS:\n            return {loading:false,users:action.payload};\n        case USER_LIST_FAIL:\n            return {loading:false,error:action.payload};\n        case USER_LIST_RESET:\n            return {loading:false,users:[]};\n        default:\n            return state\n    }\n}\n\nexport const userDeleteReducer = (state={},action)=>{\n    switch(action.type){\n        case USER_DELETE_REQUEST:\n            return {loading:true};\n        case USER_DELETE_SUCCESS:\n            return {loading:false,success:true};\n        case USER_DELETE_FAIL:\n            return {loading:false,error:action.payload};\n        default:\n            return state\n    }\n}","/home/kali/Desktop/c++/proshop/src/constants/userConstansts.js",[],[],"/home/kali/Desktop/c++/proshop/src/screens/LoginScreen.js",["246","247","248","249"],[],"import React,{useState,useEffect} from 'react'\nimport {Link, redirect,useNavigate} from 'react-router-dom'\nimport { ReactLocation, Router } from 'react-location'\nimport {Form,Row,Col,Button} from 'react-bootstrap'\nimport {useDispatch,useSelector} from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { login } from '../actions/userActions'\nimport FormContainer from '../components/FormContainer'\nconst LoginScreen = ({}) => {\n    const navigate=useNavigate()\n\n    const [email,setEmail]=useState('')\n    const [password,setpassword]=useState('')\n    const userLogin=useSelector(state=>state.userLogin)\n    const {loading,error,userInfo}=userLogin\n\n    const location = new ReactLocation()\n    const redirect=location.search?location.search.split('=')[1]:'/'\n    useEffect(()=>{\n      if(userInfo){\n        navigate(redirect)\n      }\n    },[navigate,userInfo,redirect])\n    const dispatch=useDispatch()\n    \n    const submitHandler =(e)=>{\n      e.preventDefault()\n      dispatch(login(email,password))\n    }\n    const setPassword=()=>{\n      console.log('set password')\n    }\n\n  return (\n    <FormContainer>\n      <h1>Sign In</h1>\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading &&<Loader/>}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='email'>\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control type='email' placeholder='Enter email'\n            value={email}\n            onChange={(e)=>setEmail(e.target.value)}\n            \n            ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n            <Form.Label>Password Address</Form.Label>\n            <Form.Control type='password' placeholder='Enter password'\n            value={password}\n            onChange={(e)=>setpassword(e.target.value)}\n            \n            ></Form.Control>\n        </Form.Group>\n        <Button type='submit' variant='primary'>\n            Sign In\n        </Button>\n      </Form>\n\n      <Row className='py-3'>\n        <Col>\n        New Customer?{' '}\n        <Link to={'/register'}>\n          Register\n        </Link>\n        </Col>\n      </Row>\n      \n    </FormContainer>\n  )\n}\n\nexport default LoginScreen\n","/home/kali/Desktop/c++/proshop/src/components/FormContainer.js",["250"],[],"import React, { Children } from 'react'\nimport { Container,Row,Col } from 'react-bootstrap'\nconst FormContainer = ({children}) => {\n  return (\n    <Container>\n        <Row className='justify-content-md-center'>\n            <Col xs={12} md={6}>\n                {children}\n            </Col>\n        </Row>\n      \n    </Container>\n  )\n}\n\nexport default FormContainer\n","/home/kali/Desktop/c++/proshop/src/actions/userActions.js",[],[],"/home/kali/Desktop/c++/proshop/src/screens/RegisterScreen.js",["251","252","253","254","255"],[],"import React,{useState,useEffect} from 'react'\nimport {Link, redirect,useNavigate} from 'react-router-dom'\nimport { ReactLocation, Router } from 'react-location'\nimport {Form,Row,Col,Button} from 'react-bootstrap'\nimport {useDispatch,useSelector} from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { register} from '../actions/userActions'\nimport FormContainer from '../components/FormContainer'\nconst RegisterScreen = ({}) => {\n    const navigate=useNavigate()\n    const [name,setName]=useState('')\n    const [email,setEmail]=useState('')\n    const [password,setpassword]=useState('')\n    const [confirmpassword,setConfirmpassword]=useState('')\n    const [message,setMessage]=useState(null)\n     \n    \n    const userLogin=useSelector(state=>state.userLogin)\n    const {loading,error,userInfo}=userLogin\n\n    const location = new ReactLocation()\n    const redirect=location.search?location.search.split('=')[1]:'/'\n    console.log(redirect)\n    useEffect(()=>{\n      if(userInfo){\n        navigate(redirect)\n      }\n    },[navigate,userInfo,redirect])\n    const dispatch=useDispatch()\n    \n    const submitHandler =(e)=>{\n      e.preventDefault()\n        if(password!==confirmpassword){\n            setMessage('Password do not match')\n        }else dispatch(register(name,email,password))\n    }\n    const setPassword=()=>{\n      console.log('set password')\n    }\n\n  return (\n    <FormContainer>\n      <h1>Sign In</h1>\n      {message && <Message variant='danger'>{message}</Message>}\n      {loading &&<Loader/>}\n      <Form onSubmit={submitHandler}>\n\n      <Form.Group controlId='name'>\n            <Form.Label>Name</Form.Label>\n            <Form.Control type='name' placeholder='Enter name'\n            value={name}\n            onChange={(e)=>setName(e.target.value)}\n            \n            ></Form.Control>\n        </Form.Group>\n\n        \n        <Form.Group controlId='email'>\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control type='email' placeholder='Enter email'\n            value={email}\n            onChange={(e)=>setEmail(e.target.value)}\n            \n            ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n            <Form.Label>Password </Form.Label>\n            <Form.Control type='password' placeholder='Enter password'\n            value={password}\n            onChange={(e)=>setpassword(e.target.value)}\n            \n            ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='confirmpassword'>\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control type='password' placeholder='Enter password'\n            value={confirmpassword}\n            onChange={(e)=>setConfirmpassword(e.target.value)}\n            \n            ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n            Regiter\n        </Button>\n      </Form>\n\n      <Row className='py-3'>\n        <Col>\n        Have an Account?{' '}\n        <Link to={redirect?`login?redirect=${redirect}`:'/login'}>\n          Login\n        </Link>\n        </Col>\n      </Row>\n      \n    </FormContainer>\n  )\n}\n\nexport default RegisterScreen\n","/home/kali/Desktop/c++/proshop/src/screens/ProfileScreen.js",["256","257","258","259","260","261","262"],[],"import React,{useState,useEffect} from 'react'\nimport {Link, redirect,useNavigate} from 'react-router-dom'\nimport { ReactLocation, Router } from 'react-location'\nimport {Form,Row,Col,Button, Table} from 'react-bootstrap'\nimport {useDispatch,useSelector} from 'react-redux'\nimport Loader from '../components/Loader'\nimport {LinkContainer} from 'react-router-bootstrap'\nimport Message from '../components/Message'\nimport { getUserDetails,updateUserProfile} from '../actions/userActions'\nimport { listMyOrders } from '../actions/orderActions'\nconst ProfileScreen = ({}) => {\n    const navigate=useNavigate()\n    const [name,setName]=useState('')\n    const [email,setEmail]=useState('')\n    const [password,setpassword]=useState('')\n    const [confirmpassword,setConfirmpassword]=useState('')\n    const [message,setMessage]=useState(null)\n     \n    const userDetails=useSelector(state=>state.userDetails)\n    const {loading,error,user}=userDetails\n    const userLogin=useSelector(state=>state.userLogin)\n    \n    const userUpdateProfile=useSelector(state=>state.userUpdateProfile)\n    const {success}=userUpdateProfile\n\n\n    const orderListMy=useSelector(state=>state.orderListMy)\n    const {loading:loadingOrders,error:errorOrders,orders}=orderListMy\n\n    \n    const {userInfo}=userLogin\n    const dispatch=useDispatch()\n\n    \n\n    const location = new ReactLocation()\n    useEffect(()=>{\n      if(!userInfo){\n        navigate('/login')\n      }else{\n        if(!user.name){\n            dispatch(getUserDetails('profile'))\n            dispatch(listMyOrders())\n        }else{\n            setName(user.name)\n            setEmail(user.email)\n            \n\n        }\n      }\n    },[dispatch,userInfo,user])\n  \n    \n    const submitHandler =(e)=>{\n      e.preventDefault()\n        if(password!==confirmpassword){\n            setMessage('Password do not match')\n        }else {\n            dispatch(updateUserProfile({id:user._id,name,email,password}))\n        }\n        // dispatch(register(name,email,password))\n    }\n    const setPassword=()=>{\n      console.log('set password')\n    }\n\n  return <Row>\n        <Col md={3}>\n        \n      <h2>User Profile</h2>\n      {message && <Message variant='danger'>{message}</Message>}\n      {error &&<Message variant='danger'>{error}</Message>}\n      {success &&<Message variant='success'>Profile Updated</Message>}\n      {loading &&<Loader/>}\n      <Form onSubmit={submitHandler}>\n\n      <Form.Group controlId='name'>\n            <Form.Label>Name</Form.Label>\n            <Form.Control type='name' placeholder='Enter name'\n            value={name}\n            onChange={(e)=>setName(e.target.value)}\n            \n            ></Form.Control>\n        </Form.Group>\n\n        \n        <Form.Group controlId='email'>\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control type='email' placeholder='Enter email'\n            value={email}\n            onChange={(e)=>setEmail(e.target.value)}\n            \n            ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n            <Form.Label>Password </Form.Label>\n            <Form.Control type='password' placeholder='Enter password'\n            value={password}\n            onChange={(e)=>setpassword(e.target.value)}\n            \n            ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='confirmpassword'>\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control type='password' placeholder='Enter password'\n            value={confirmpassword}\n            onChange={(e)=>setConfirmpassword(e.target.value)}\n            \n            ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n            Update\n        </Button>\n      </Form>\n\n        </Col>\n        <Col md={9}>\n            <h2>My Orders</h2>\n            {loadingOrders?<Loader/>:errorOrders?<Message variant='danger'>{errorOrders}</Message>\n              :(\n                <Table striped bordered hover responsive className='table-sm'>\n                  <thead>\n                    <tr>\n                      <th>ID</th>\n                      <th>DATE</th>\n                      <th>TOTAL</th>\n                      <th>PAID</th>\n                      <th>DELIVERED</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {orders.map(order=>(\n                      <tr key={order._id}>\n                        <td>{order._id}</td>\n                        <td>{order.createdAt.substr(0,10)}</td>\n                        <td>{order.totalPrice}</td>\n                        <td>{order.isPaid?(\n                          order.paidAt.substr(0,10)\n                        ):(<i className='fas fa-times' style={{color:'red'}}></i>)\n                        }\n                        </td>\n                        <td>{order.isDelivered ?(\n                          order.deliveredAt.substr(0,10)\n                        ):(<i className='fas fa-times' style={{color:'red'}}></i>)\n                        }\n                        </td>\n                        <td>\n                          <LinkContainer to={`/order/${order._id}`}>\n                            <Button  className='btn-sm'variant='light'>Details</Button>\n                          </LinkContainer>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n\n              )  \n          \n          }\n\n        </Col>\n  </Row>\n}\n\nexport default ProfileScreen\n","/home/kali/Desktop/c++/proshop/src/screens/ShippingScreens.js",["263","264","265","266","267"],[],"import React,{useState,useEffect} from 'react'\nimport { ReactLocation, Router } from 'react-location'\nimport {useNavigate} from 'react-router-dom'\nimport {Form,Row,Col,Button} from 'react-bootstrap'\nimport {useDispatch,useSelector} from 'react-redux'\nimport { saveShippingAddress } from '../actions/cartActions'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nconst ShippingScreens = () => {\n  const navigate=useNavigate()\n  const cart=useSelector(state=>state.cart)\n  const {shippingAddress}=cart\n\n  const [city,setCity]=useState(shippingAddress.address)\n  const [postalCode,setPostalcode]=useState(shippingAddress.postalCode)\n  const [address,setAddress]=useState(shippingAddress.address)\n  const [country,setCountry]=useState(shippingAddress.country)\n\n  const dispatch=useDispatch()\n  const submitHandler=(e)=>{\n    e.preventDefault();\n    dispatch(saveShippingAddress({address,city,postalCode,country}))\n    navigate('/payment')\n    console.log('submit')\n  }\n\n  return (\n      <FormContainer>\n        <CheckoutSteps step1 step2 />\n        <h1>Shipping</h1>\n        <Form onSubmit={submitHandler}>\n        <Form.Group controlId='address'>\n            <Form.Label>Address</Form.Label>\n            <Form.Control type='text' placeholder='Enter address'\n            value={address} required\n            onChange={(e)=>setAddress(e.target.value)}\n            \n            ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='city'>\n            <Form.Label>City</Form.Label>\n            <Form.Control type='text' placeholder='Enter city'\n            value={city}\n            onChange={(e)=>setCity(e.target.value)}\n            \n            ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='postalCode'>\n            <Form.Label>postal Code</Form.Label>\n            <Form.Control type='text' placeholder='Enter postalCode'\n            value={postalCode}\n            onChange={(e)=>setPostalcode(e.target.value)}\n            \n            ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='country'>\n            <Form.Label>Country</Form.Label>\n            <Form.Control type='country' placeholder='Enter country'\n            value={country}\n            onChange={(e)=>setCountry(e.target.value)}\n            \n            ></Form.Control>\n        </Form.Group>\n\n          <Button type='submit' variant='primary'>\n            Continue\n          </Button>\n\n        </Form>\n      </FormContainer>\n      \n  )\n}\n\nexport default ShippingScreens\n","/home/kali/Desktop/c++/proshop/src/components/CheckoutSteps.js",[],[],"/home/kali/Desktop/c++/proshop/src/screens/PaymentScreens.js",["268","269","270","271","272"],[],"import React,{useState,useEffect} from 'react'\nimport { ReactLocation, Router } from 'react-location'\nimport {useNavigate} from 'react-router-dom'\nimport {Form,Row,Col,Button} from 'react-bootstrap'\nimport {useDispatch,useSelector} from 'react-redux'\nimport { saveShippingAddress } from '../actions/cartActions'\nimport FormContainer from '../components/FormContainer'\nimport savePaymentMethod from '../components/CheckoutSteps'\nimport CheckoutSteps from '../components/CheckoutSteps'\nconst PaymentScreens = () => {\n  const navigate=useNavigate()\n  const cart=useSelector(state=>state.cart)\n  const {shippingAddress}=cart\n\n  if(!shippingAddress){\n    navigate('/shipping')\n  }\n\n  const [paymentMethod, setPaymentMethod] = useState('PayPal')\n  const dispatch=useDispatch()\n  const submitHandler=(e)=>{\n    e.preventDefault();\n    dispatch(savePaymentMethod(paymentMethod))\n    console.log(paymentMethod)\n    navigate('/placeorder')\n    // console.log('submit')\n  }\n\n  return (\n      <FormContainer>\n        <CheckoutSteps step1 step2 step3/>\n        <h1>Payment Method</h1>\n        <Form onSubmit={submitHandler}>\n            <Form.Group>\n                <Form.Label as='legend'>Select Method</Form.Label>\n            \n            <Col>\n            <Form.Check \n                type='radio'\n                label='paypal or Credit card'\n                id='paypal'\n                name='paymentMethod'\n                value='Paypal'\n                // checked\n                onChanged={(e)=>setPaymentMethod(e.target.value)}>\n\n                </Form.Check>\n\n                {/* <Form.Check \n                type='radio'\n                label='Stripe'\n                id='Stripe'\n                name='paymentMethod'\n                value='Stripe'\n                \n                onChanged={(e)=>setPaymentMethod(e.target.value)}>\n                    \n                </Form.Check> */}\n            </Col>\n            </Form.Group>\n          <Button type='submit' variant='primary'>\n            Continue\n          </Button>\n\n        </Form>\n      </FormContainer>\n      \n  )\n}\n\nexport default PaymentScreens\n","/home/kali/Desktop/c++/proshop/src/screens/PlaceOrderScreen.js",["273","274","275","276","277","278"],["279"],"import React,{useState,useEffect} from 'react'\nimport axios from 'axios'\nimport { ReactLocation, Router } from 'react-location'\nimport {useNavigate,Link} from 'react-router-dom'\nimport {Form,Row,Col,Button,ListGroup,Image,Card} from 'react-bootstrap'\nimport {useDispatch,useSelector} from 'react-redux'\nimport { createOrder } from '../actions/orderActions'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport Message from '../components/Message'\nconst PlaceOrderScreen = () => {\n    const navigate=useNavigate()\n    const dispatch=useDispatch()\n    const cart=useSelector(state=>state.cart)\n    console.log(cart)\n    const adddecimals=(num)=>{\n        return (Math.round(num*100)/100).toFixed\n    }\n    cart.itemsPrice=(cart.cartItems.reduce((acc,item)=>acc+item.price*item.qty,0))\n    cart.shippingPrice=(cart.itemsPrice > 100 ? 0 : 100);\n    cart.taxPrice=Number((0.15 * cart.itemsPrice).toFixed(2))\n    \n    \n    cart.totalPrice=(cart.itemsPrice +\n        cart.shippingPrice +\n        cart.taxPrice).toFixed(2)\n    \n    \n    const orderCreate=useSelector(state=>state.orderCreate)\n    const {order,success,error}=orderCreate\nconsole.log(orderCreate)\n\n    // let content = order.children[0]\n        \n\n\n    useEffect(()=>{\n        if(order=== undefined)return;\n\n        if(success ){\n            navigate(`/orders/${order.createOrder._id}`)\n            \n\n        }\n        // eslint-disable-next-line \n    },[navigate,success])\n\n    const placeholderHandler=()=>{\n        dispatch(createOrder({orderItems:cart.cartItems,\n        shippingAddress:cart.shippingAddress,\n        paymentMethod:'paypal',\n        itemsPrice:cart.itemsPrice,\n        shippingPrice:cart.shippingPrice,\n        postalcode:cart.postalcode,\n        taxPrice:cart.taxPrice,\n        totalPrice:cart.totalPrice,\n        \n        }))\n    }\n  return (\n    <>\n        <CheckoutSteps step1 step2 step3 step4 />\n        <Row>\n            <Col md={8}>\n                <ListGroup variant='flush'>\n                    <ListGroup.Item>\n                        <h2>Shipping</h2>\n                        <p>\n                            <strong>Address:</strong>\n                            {cart.shippingAddress.address},{cart.shippingAddress.city}{' '}\n                            {cart.shippingAddress.postalcode},{' '}\n                            {cart.shippingAddress.country}\n                        </p>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                        <h2>Payment Method</h2>\n                        <strong>Method:</strong>\n                        {cart.paymentMethod}\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                        <h2>Order Items</h2>\n                        {cart.cartItems.length === 0 ?<Message>Your cart is empty</Message>\n                        :(<ListGroup variant='flush'>\n                            {cart.cartItems.map((item,index)=>(\n                                <ListGroup.Item key={index}>\n                                    <Row>\n                                        <Col md={1}>\n                                            <Image src={item.image} alt={item.name}\n                                             fluid rounded/>\n                                        </Col>\n                                        <Col>\n                                        <Link to={`/product/${item.product}`}>\n                                            {item.name}\n                                        </Link>\n                                        </Col>\n                                        <Col md={4}>\n                                            {item.qty} x ${item.price} =${item.price}\n                                        </Col>\n                                        </Row>\n                                </ListGroup.Item>\n                            ))}\n                        </ListGroup>)}\n                    </ListGroup.Item>\n                </ListGroup>\n            </Col> \n                                        <Col md={4}>\n                                            <Card>\n                                                <ListGroup variant='flush'>\n                                                    <ListGroup.Item>\n                                                        <h2>Order Summary</h2>\n\n                                                    </ListGroup.Item>\n                                                    <ListGroup.Item>\n                                                        <Row>\n                                                            <Col>Items</Col>\n                                                            <Col>${cart.itemsPrice}</Col>\n                                                        </Row>\n                                                    </ListGroup.Item>\n                                                    <ListGroup.Item>\n                                                        <Row>\n                                                            <Col>Shipping</Col>\n                                                            <Col>${cart.shippingPrice}</Col>\n                                                        </Row>\n                                                    </ListGroup.Item>\n\n                                                    <ListGroup.Item>\n                                                        <Row>\n                                                            <Col>Tax</Col>\n                                                            <Col>${cart.taxPrice}</Col>\n                                                        </Row>\n                                                    </ListGroup.Item>\n\n                                                    <ListGroup.Item>\n                                                        <Row>\n                                                            <Col>Total</Col>\n                                                            <Col>${cart.totalPrice}</Col>\n                                                        </Row>\n                                                    </ListGroup.Item>\n                                                    <ListGroup.Item>\n                                                        {error && <Message variant='danger'>{error}</Message>}\n                                                    </ListGroup.Item>\n                                                    <ListGroup.Item>\n                                                        <Button className='btn-block'\n                                                        disabled={cart.cartItems.length===0}\n                                                        onClick={placeholderHandler}>\n                                                            Place Order\n                                                        </Button>\n                                                    </ListGroup.Item>\n                                                </ListGroup>\n                                            </Card>\n                                        </Col>\n                             \n        </Row>\n      \n    </>\n  )\n}\n\nexport default PlaceOrderScreen","/home/kali/Desktop/c++/proshop/src/reducers/orderReducer.js",[],[],"/home/kali/Desktop/c++/proshop/src/constants/orderConstansts.js",[],[],"/home/kali/Desktop/c++/proshop/src/actions/orderActions.js",[],[],"/home/kali/Desktop/c++/proshop/src/screens/OrderScreen.js",["280"],[]," import React,{useEffect} from 'react'\n\n\nimport {Link} from 'react-router-dom'\nimport {Row,Col,ListGroup,Image,Card,Button} from 'react-bootstrap'\nimport {useDispatch,useSelector} from 'react-redux'\nimport { getOrderDetails,deliverOrder} from '../actions/orderActions'\n\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { useParams } from 'react-router-dom'\nimport { ORDER_DELIVERED_RESET } from '../constants/orderConstansts'\n\nconst OrderScreen = ({}) => {\n    \n    const dispatch=useDispatch()\n   const {id}=useParams()\n   console.log('this is id')\n    console.log(id);\n\n    const orderDetail=useSelector((state)=>state.orderDetail)\n    const {order,loading,error}=orderDetail\n    const orderDeliver=useSelector(state=>state.orderDeliver)\n    const {loading:loadingDeliver,success:successDeliver}=orderDeliver\n    console.log(successDeliver)\n    const userLogin=useSelector(state=>state.userLogin)\n    const {userInfo}=userLogin\n    console.log(userInfo)\n    useEffect(()=>{\n    \n        if(!order ||successDeliver){\n            dispatch({type:ORDER_DELIVERED_RESET})\n            dispatch(getOrderDetails(id))}\n            \n        },[dispatch,id,successDeliver,order])\n    console.log(orderDetail)\n    // if(loading===false){\n        // order.itemsPrice=(order.orderItems.reduce((acc,item)=>acc+item.price*item.qty,0))\n        // }\n// console.log(order)\n        const deliveredHandler=()=>{\n            dispatch(deliverOrder(order))\n        }\n\n\n  return loading?<Loader/>:error?<Message variant='danger'>{error}</Message>\n  :<><h1>Order {order._id}</h1>\n  <Row>\n            <Col md={8}>\n                <ListGroup variant='flush'>\n                    <ListGroup.Item>\n                        <h2>Shipping</h2>\n                        <p>\n                        <strong>Name: </strong>{order.user.name}\n                        </p>\n                        <p>\n                        <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n                        </p>\n                        <p>\n                            <strong>Address:</strong>\n                            {order.shippingAddress.address},{order.shippingAddress.city}{' '}\n                            {order.shippingAddress.postalcode},{' '}\n                            {order.shippingAddress.country}\n                        </p>\n                        {order.isDelivered ? <Message variant='success'>Delivered on {order.deliveredAt}</Message>:\n                        <Message variant='danger'>Not Delivered</Message>\n                        }\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                        <h2>Payment Method</h2>\n                        <p>\n                        <strong>Method:</strong>\n                        {order.paymentMethod}\n                        </p>\n                        {order.isPaid ? <Message variant='success'>Paid on {order.paidAt}</Message>:\n                        <Message variant='danger'>Not paid</Message>\n                        }\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                        <h2>Order Items</h2>\n                        {order.orderItems.length === 0 ?<Message>Order is empty</Message>\n                        :(<ListGroup variant='flush'>\n                            {order.orderItems.map((item,index)=>(\n                                <ListGroup.Item key={index}>\n                                    <Row>\n                                        <Col md={1}>\n                                            <Image src={item.image} alt={item.name}\n                                             fluid rounded/>\n                                        </Col>\n                                        <Col>\n                                        <Link to={`/product/${item.product}`}>\n                                            {item.name}\n                                        </Link>\n                                        </Col>\n                                        <Col md={4}>\n                                            {item.qty} x ${item.price} =${item.qty*item.price}\n                                        </Col>\n                                        </Row>\n                                </ListGroup.Item>\n                            ))}\n                        </ListGroup>)}\n                    </ListGroup.Item>\n                </ListGroup>\n            </Col> \n                                        <Col md={4}>\n                                            <Card>\n                                                <ListGroup variant='flush'>\n                                                    <ListGroup.Item>\n                                                        <h2>Order Summary</h2>\n\n                                                    </ListGroup.Item>\n                                                    <ListGroup.Item>\n                                                        <Row>\n                                                            <Col>Items</Col>\n                                                            {/* <Col>${order.itemsPrice}</Col> */}\n                                                        </Row>\n                                                    </ListGroup.Item>\n                                                    <ListGroup.Item>\n                                                        <Row>\n                                                            <Col>Shipping</Col>\n                                                            <Col>${order.shippingPrice}</Col>\n                                                        </Row>\n                                                    </ListGroup.Item>\n\n                                                    <ListGroup.Item>\n                                                        <Row>\n                                                            <Col>Tax</Col>\n                                                            <Col>${order.taxPrice}</Col>\n                                                        </Row>\n                                                    </ListGroup.Item>\n\n                                                    <ListGroup.Item>\n                                                        <Row>\n                                                            <Col>Total</Col>\n                                                            <Col>${order.totalPrice}</Col>\n                                                        </Row>\n                                                    </ListGroup.Item>\n                                                    {loadingDeliver && <Loader/>}\n                                                   {userInfo.name===\"Admin User\" && order.isPaid && !order.isDelivered &&\n                                                   (<ListGroup.Item>\n                                                    <Button type='button' className='btn btn-block'\n                                                     onClick={deliveredHandler}>Mark as Delivered</Button>\n                                                   </ListGroup.Item>)} \n                                                </ListGroup>\n                                            </Card>\n                                        </Col>\n                             \n        </Row>\n  \n  </>\n  }\nexport default OrderScreen","/home/kali/Desktop/c++/proshop/src/screens/UserListScreen.js",["281","282","283","284"],[],"import React,{useState,useEffect} from 'react'\nimport {LinkContainer} from 'react-router-bootstrap'\nimport { ReactLocation, Router } from 'react-location'\nimport {useNavigate} from \"react-router-dom\"\n  \nimport {Table,Button} from 'react-bootstrap'\nimport {useDispatch,useSelector} from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { deleteUsers, listUsers } from '../actions/userActions'\n\nconst UserListScreen = () => {\n    const dispatch=useDispatch()\n    const navigate=useNavigate()\n    const userList=useSelector(state=>state.userList)\n    const{loading,error,users}=userList\n    \n    const userLogin=useSelector((state)=>state.userLogin)\n    const {userInfo}=userLogin\n     \n    const userDelete=useSelector(state=>state.userDelete)\n    const{success:successDelete}=userDelete\n    useEffect(()=>{\n        if(userInfo!==null && userInfo.name===\"Admin User\"){\n        dispatch(listUsers())}\n        else{\n            navigate('/login')\n        }\n    },[dispatch,navigate,successDelete])\n  \n    // console.log(users)\n\n    const deleteHandler=(id)=>{\n        if(window.confirm('Are you sure')){\n        dispatch(deleteUsers(id))}\n    }\n    return (\n    <>\n        <h1>Users</h1>\n    {loading?<Loader/>:error?<Message variant='danger'>{error}</Message>\n    :(\n        <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n                <tr>\n                    <th>ID</th>\n                    <th>NAME</th>\n                    <th>EMAIL</th>\n                    <th>ADMIN</th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n               \n                {users.map(user=>(\n                    <tr key={user._id}>\n                        <td>{user._id}</td>\n                        <td>{user.name}</td>\n                        <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\n                        <td>{user.isAdmin ?(<i className='fas fa-check' style={{color:'green'}}></i>):\n                        (<i className='fas fa-times' style={{color:'red'}}></i>)}</td>\n                        <td>\n                            \n                            <LinkContainer to={`/user/${user._id}/edit`}>\n                                <Button variant='light' className='btn-sm'>\n                                    <i className='fas fa-edit'></i>\n                                </Button>\n                            </LinkContainer>\n                            <Button variant='danger' className='btn-sm' onClick={()=>deleteHandler(user._id)}>\n                                <i className='fas fa-trash'></i>\n                            </Button>\n                        </td>\n                    </tr>\n                ))}\n            </tbody>\n\n        </Table>\n    )}\n\n      \n    </>\n  )\n}\n\nexport default UserListScreen\n","/home/kali/Desktop/c++/proshop/src/screens/UserEditScreen.js",["285","286","287","288","289","290","291"],[],"import React,{useState,useEffect} from 'react'\nimport {Link, redirect,useNavigate} from 'react-router-dom'\nimport {Form,Row,Col,Button} from 'react-bootstrap'\nimport {useDispatch,useSelector} from 'react-redux'\nimport { useParams} from 'react-router'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails } from '../actions/userActions'\nconst UserEditScreen = ({}) => {\n    const navigate=useNavigate()\n    const dispatch=useDispatch()\n    const {id}=useParams()\n    console.log(id)\n    const [name,setName]=useState('')\n    const [email,setEmail]=useState('')\n    const [admin,setIsAdmin]=useState(false)\n    \n    \n    const userDetails=useSelector((state)=>state.userDetails)\n    const {loading,error,user}=userDetails\n    console.log(userDetails)\n    useEffect(()=>{\n   dispatch(getUserDetails(id))\n   if(user!==null){\n    setName(user.name)\n   }\n    },[dispatch])\n    \n    \n    const submitHandler =(e)=>{\n      e.preventDefault()\n\n    }\n    const setPassword=()=>{\n      console.log('set password')\n    }\n\n  return (\n    <>\n    <Link to='/admin/userlist' className='btn btn-light my-3'>Go back</Link>\n    \n    <FormContainer>\n      <h1>Edit user</h1>\n\n      {loading?<Loader/>:error?<Message variant='danger'>{error}</Message>:\n      (\n        <Form onSubmit={submitHandler}>\n\n      <Form.Group controlId='name'>\n            <Form.Label>Name</Form.Label>\n            <Form.Control type='name' placeholder='Enter name'\n            value={name}\n            onChange={(e)=>setName(e.target.value)}\n            \n            ></Form.Control>\n        </Form.Group>\n\n        \n        <Form.Group controlId='email'>\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control type='email' placeholder='Enter email'\n            value={email}\n            onChange={(e)=>setEmail(e.target.value)}\n            \n            ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='isadmin'>\n            <Form.Label>Password </Form.Label>\n            <Form.Control type='checkbox'label='Is Admin'\n            checked={admin}\n            onChange={(e)=>setIsAdmin(e.target.checked)}\n            \n            ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n            Regiter\n        </Button>\n      </Form>\n\n\n      )}\n      \n      \n    </FormContainer>\n    </>\n  )\n}\n\nexport default UserEditScreen\n","/home/kali/Desktop/c++/proshop/src/screens/ProductListScreen.js",["292","293","294","295"],[],"\nimport React,{useState,useEffect} from 'react'\nimport {LinkContainer} from 'react-router-bootstrap'\nimport { ReactLocation, Router } from 'react-location'\nimport {useNavigate} from \"react-router-dom\"\n  \nimport {Table,Button,Col,Row} from 'react-bootstrap'\nimport {useDispatch,useSelector} from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listProduct,deleteProduct,createProduct } from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nconst ProductListScreen = () => {\n    const dispatch=useDispatch()\n    const navigate=useNavigate()\n    const productList=useSelector(state=>state.productList)\n    const{loading,error,products}=productList\n    \n    const productDelete=useSelector(state=>state.productDelete)\n    const{loading:loadingDelete,error:errorDelete,success:successDelete}=productDelete\n    \n    const productCreate=useSelector(state=>state.productCreate)\n    const{loading:loadingCreate,error:errorCreate,success:successCreate,product:createdProduct}=productCreate\n    // console.log(createProduct)\n    const userLogin=useSelector((state)=>state.userLogin)\n    const {userInfo}=userLogin\n     \n    useEffect(()=>{\n        dispatch({type:PRODUCT_CREATE_RESET})\n\n        if(userInfo.name!==\"Admin User\"){\n        // dispatch(listProduct())}\n            navigate('/login')\n    }\n        if(successCreate){  dispatch(listProduct())\n            navigate(`/admin/product/${createdProduct._id}/edit`)\n        }else{\n            dispatch(listProduct())\n        }\n\n    },[dispatch,navigate,userInfo,successDelete,successCreate,createdProduct])\n  \n    // console.log(users)\n\n    const DeleteListHandler=(id)=>{\n        if(window.confirm('Are you sure')){\n        dispatch(deleteProduct(id))}\n    }\n    const createProductHandler=()=>{\n        dispatch(createProduct())\n    }\n    return (\n    <> \n    <Row className='align-items-center'>\n        <Col>\n            <h1>Products</h1>\n        </Col>\n        <Col className='text-right'>\n            <Button className='my-3' onClick={createProductHandler}>\n                <i className='fas fa-plus'></i>\n            </Button>\n        </Col>\n    </Row>\n\n        {/* {loadingDelete && <Loader/>} */}\n        {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n\n          {loadingCreate && <Loader/>} \n         {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n    {loading?<Loader/>:error?<Message variant='danger'>{error}</Message>\n    :(\n        <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n                <tr>\n                    <th></th>\n                    <th>ID</th>\n                    <th>NAME</th>\n                    <th>PRICE</th>\n                    <th>CATEGORY</th>\n                    <th>BRAND</th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n               \n                {products.map(product=>(\n                    <tr key={product._id}>\n                        <td>{product._id}</td>\n                        <td>{product.name}</td>\n                        <td>${product.price}</td>\n                        <td>{product.category}</td>\n                        <td>{product.brand}</td>\n                        <td>\n                            \n                            <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                                <Button variant='light' className='btn-sm'>\n                                    <i className='fas fa-edit'></i>\n                                </Button>\n                            </LinkContainer>\n                            <Button variant='danger' className='btn-sm' onClick={()=>DeleteListHandler(product._id)}>\n                                <i className='fas fa-trash'></i>\n                            </Button>\n                        </td>\n                    </tr>\n                ))}\n            </tbody>\n\n        </Table>\n    )}\n\n      \n    </>\n  )\n}\n\nexport default ProductListScreen\n","/home/kali/Desktop/c++/proshop/src/screens/ProductEditScreen.js",["296","297","298","299","300","301","302","303","304"],[],"import axios from 'axios'\nimport React,{useState,useEffect} from 'react'\nimport {Link, redirect,useNavigate} from 'react-router-dom'\nimport {Form,Row,Col,Button, NavItem,File} from 'react-bootstrap'\nimport {useDispatch,useSelector} from 'react-redux'\nimport { useParams} from 'react-router'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport {listProductDetails,updateProduct} from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\nconst ProductEditScreen = ({}) => {\n    const navigate=useNavigate()\n    const dispatch=useDispatch()\n    const {id}=useParams()\n    // console.log(id)\n    const [name,setName]=useState('')\n    const [price,setPrice]=useState('')\n    const [image,setImage]=useState('')\n    const [brand,setBrand]=useState('')\n    const [category,setCategory]=useState('')\n    const [countInStock,setCountInStock]=useState('')\n    const [description,setDescription]=useState('')\n    const [uploading,setUploading]=useState(false)\n    \n    \n    const productDetails=useSelector((state)=>state.productDetails)\n    const {loading,error,product}=productDetails\n    \n\n    const productUpdate=useSelector((state)=>state.productUpdate)\n    const {loading:loadingUpdate,error:errorUpdate,success:successUpdate}=productUpdate\n    // console.log(successUpdate)\n    useEffect(()=>{\n      if(successUpdate){\n        console.log('called')\n        dispatch({type:PRODUCT_UPDATE_RESET});\n        navigate('/admin/productlist');\n      }else{\n    if(!product.name || product._id!==id){\n      dispatch(listProductDetails(id))\n    }else\n    {\n\n      // console.log('this is st data')\n      // console.log(product.name)\n      setName(product.name)\n      setPrice(product.price)\n      setDescription(product.description)\n      setBrand(product.brand)\n      setCategory(product.category)\n      setCountInStock(product.countInStock)\n      setImage(product.image)  \n    }}\n    }\n    ,[dispatch,id,navigate,product,successUpdate])\n    \n    const handleChange=async (e)=>{\n      const file=e.target.files[0];\n      // setImage(e.target.files[0])\n      const formData=new FormData();\n      formData.append('image',file)\n      console.log(formData)\n      setUploading(true)\n      try{\n        const config={\n          headers:{\n            'Content-Type':'mutipart/form-data'\n          }\n        }\n        const {data}=await axios.post('/api/upload',formData,config)\n        setImage(data)\n        setUploading(false)\n      }catch(err){\n        console.log(err)\n         setUploading(false);\n\n      }\n    }\n    const submitHandler =(e)=>{\n      e.preventDefault()\n      dispatch(\n      updateProduct({\n        _id:id,\n        name,\n        price,\n        description,\n        image,\n        brand,\n        category,\n        countInStock,\n\n      })\n    )\n\n    }\n    const setPassword=()=>{\n      console.log('set password')\n    }\n  //   function handleChange(e) {\n  //     console.log(e.target.files);\n  //     setImage(URL.createObjectURL(e.target.files[0]));\n  // }\n  return (\n    <>\n    <Link to='/admin/productlist' className='btn btn-light my-3'>Go back</Link>\n    \n    <FormContainer>\n      <h1>Edit Product</h1>\n      {/* {loadingUpdate &&<Loader/>} */}\n      {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n      {loading?<Loader/>:error?<Message variant='danger'>{error}</Message>:\n      (\n        <Form onSubmit={submitHandler}>\n\n      <Form.Group controlId='name'>\n            <Form.Label>Name</Form.Label>\n            <Form.Control type='name' placeholder='Enter name'\n            value={name}\n            onChange={(e)=>setName(e.target.value)}\n            \n            ></Form.Control>\n        </Form.Group>\n\n        \n        <Form.Group controlId='price'>\n            <Form.Label>Price</Form.Label>\n            <Form.Control type='number' placeholder='Enter Price'\n            value={price}\n            onChange={(e)=>setPrice(e.target.value)}\n            \n            ></Form.Control>\n        </Form.Group>\n\n        {/* <Form.Group controlId='image'>\n            <Form.Control type='text'\n            placeholder='enter image url'\n            value={image}\n            onChange={(e)=>setImage(e.target.value)}\n            ></Form.Control>\n            <Form.File  id='image-file'label='choose file'\n            custom onChange={handleChange}>\n\n            </Form.File>\n            {uploading &&<Loader/>}\n      </Form.Group> */}\n\n\n        \n           <input type=\"file\" onChange={handleChange}  />\n            <img src={image} />\n             \n\n         \n        {uploading &&<Loader/>}\n        <Form.Group controlId='brand'>\n            <Form.Label>Brand </Form.Label>\n            <Form.Control type='text'label='Enter brand'\n            value={brand}\n            onChange={(e)=>setBrand(e.target.value)}\n            \n            ></Form.Control>\n\n        </Form.Group>\n\n        <Form.Group controlId='countInStock'>\n            <Form.Label>Count In Stock</Form.Label>\n            <Form.Control type='number' placeholder='Enter countInStock'\n            value={countInStock}\n            onChange={(e)=>setCountInStock(e.target.value)}\n            \n            ></Form.Control>\n        </Form.Group>\n\n\n        <Form.Group controlId='category'>\n            <Form.Label>Category </Form.Label>\n            <Form.Control type='text'label='Enter category'\n            value={category}    \n            onChange={(e)=>setCategory(e.target.value)}\n            \n            ></Form.Control>\n\n        </Form.Group>\n\n\n        <Form.Group controlId='description'>\n            <Form.Label>Description </Form.Label>\n            <Form.Control type='text'label='Enter description'\n            value={description}\n            onChange={(e)=>setDescription(e.target.value)}\n            \n            ></Form.Control>\n\n        </Form.Group>\n\n\n        <Button type='submit' variant='primary'>\n            submit\n        </Button>\n      </Form>\n\n\n      )}\n      \n      \n    </FormContainer>\n    </>\n  )\n}\n\nexport default ProductEditScreen\n","/home/kali/Desktop/c++/proshop/src/screens/OrderListScreen.js",["305","306","307"],[],"import React,{useState,useEffect} from 'react'\nimport {LinkContainer} from 'react-router-bootstrap'\nimport { ReactLocation, Router } from 'react-location'\nimport {useNavigate} from \"react-router-dom\"\n  \nimport {Table,Button} from 'react-bootstrap'\nimport {useDispatch,useSelector} from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listOrders } from '../actions/orderActions'\n\nconst OrderListScreen = () => {\n    const dispatch=useDispatch()\n    const navigate=useNavigate()\n    const orderList=useSelector(state=>state.orderList)\n    const{loading,error,orders}=orderList\n    \n    const userLogin=useSelector((state)=>state.userLogin)\n    const {userInfo}=userLogin\n      \n    useEffect(()=>{\n        if(userInfo!==null && userInfo.name===\"Admin User\"){\n        dispatch(listOrders())}\n        else{\n            navigate('/login')\n        }\n    },[dispatch,navigate,userInfo])\n  \n    // console.log(users)\nconst deleteHandler=()=>{\n\n}\n\n    return (\n    <>\n        <h1>Orders</h1>\n    {loading?<Loader/>:error?<Message variant='danger'>{error}</Message>\n    :(\n        <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n                <tr>\n                    <th>ID</th>\n                    <th>USER</th>\n                    <th>DATE</th>\n                    <th>TOTAL</th>\n                    <th>PAID</th>\n                    <th>DELIVERED</th>\n                </tr>\n            </thead>\n            <tbody>\n               \n                {orders.map(order=>(\n                    <tr key={order._id}>\n                        <td>{order._id}</td>\n                        <td>{order.user && order.user.name}</td>\n                        <td>{order.createdAt.substr(0,10)}</td>\n                        <td>{order.totalPrice}</td>\n                        <td>{order.isPaid ?(order.paidAt.substring(0,10)):\n                        (<i className='fas fa-times' style={{color:'red'}}></i>)}</td>\n                        <td>{order.isDelivered ?(order.deliveredAt.substring(0,10)):\n                        (<i className='fas fa-times' style={{color:'red'}}></i>)}</td>\n                        \n                        <td>\n                            \n                            <LinkContainer to={`/orders/${order._id}`}>\n                                <Button variant='light' className='btn-sm'>\n                                    Details\n                                   \n                                </Button>\n                            </LinkContainer>\n                            <Button variant='danger' className='btn-sm' onClick={()=>deleteHandler(order._id)}>\n                                <i className='fas fa-trash'></i>\n                            </Button>\n                        </td>\n                    </tr>\n                ))}\n            </tbody>\n\n        </Table>\n    )}\n\n      \n    </>\n  )\n}\n\nexport default OrderListScreen\n","/home/kali/Desktop/c++/proshop/src/components/SearchBox.js",[],[],"/home/kali/Desktop/c++/proshop/src/components/ProductCarousel.js",[],[],{"ruleId":"308","severity":1,"message":"309","line":7,"column":31,"nodeType":"310","messageId":"311","endLine":7,"endColumn":42},{"ruleId":"308","severity":1,"message":"312","line":10,"column":3,"nodeType":"310","messageId":"311","endLine":10,"endColumn":6},{"ruleId":"308","severity":1,"message":"313","line":12,"column":9,"nodeType":"310","messageId":"311","endLine":12,"endColumn":22},{"ruleId":"308","severity":1,"message":"314","line":15,"column":10,"nodeType":"310","messageId":"311","endLine":15,"endColumn":14},{"ruleId":"308","severity":1,"message":"315","line":1,"column":16,"nodeType":"310","messageId":"311","endLine":1,"endColumn":24},{"ruleId":"308","severity":1,"message":"316","line":2,"column":8,"nodeType":"310","messageId":"311","endLine":2,"endColumn":16},{"ruleId":"308","severity":1,"message":"317","line":7,"column":8,"nodeType":"310","messageId":"311","endLine":7,"endColumn":14},{"ruleId":"308","severity":1,"message":"318","line":1,"column":15,"nodeType":"310","messageId":"311","endLine":1,"endColumn":24},{"ruleId":"308","severity":1,"message":"319","line":2,"column":8,"nodeType":"310","messageId":"311","endLine":2,"endColumn":17},{"ruleId":"308","severity":1,"message":"320","line":3,"column":27,"nodeType":"310","messageId":"311","endLine":3,"endColumn":35},{"ruleId":"308","severity":1,"message":"321","line":11,"column":8,"nodeType":"310","messageId":"311","endLine":11,"endColumn":13},{"ruleId":"322","severity":1,"message":"323","line":13,"column":25,"nodeType":"324","messageId":"325","endLine":13,"endColumn":27},{"ruleId":"308","severity":1,"message":"326","line":8,"column":10,"nodeType":"310","messageId":"311","endLine":8,"endColumn":24},{"ruleId":"322","severity":1,"message":"323","line":10,"column":15,"nodeType":"324","messageId":"325","endLine":10,"endColumn":17},{"ruleId":"327","severity":1,"message":"328","line":22,"column":67,"nodeType":"329","messageId":"325","endLine":22,"endColumn":69},{"ruleId":"308","severity":1,"message":"315","line":2,"column":10,"nodeType":"310","messageId":"311","endLine":2,"endColumn":18},{"ruleId":"330","severity":1,"message":"331","line":11,"column":9,"nodeType":"332","messageId":"325","endLine":12,"endColumn":23},{"ruleId":"308","severity":1,"message":"333","line":2,"column":15,"nodeType":"310","messageId":"311","endLine":2,"endColumn":23},{"ruleId":"308","severity":1,"message":"334","line":3,"column":25,"nodeType":"310","messageId":"311","endLine":3,"endColumn":31},{"ruleId":"322","severity":1,"message":"323","line":10,"column":22,"nodeType":"324","messageId":"325","endLine":10,"endColumn":24},{"ruleId":"308","severity":1,"message":"335","line":31,"column":11,"nodeType":"310","messageId":"311","endLine":31,"endColumn":22},{"ruleId":"308","severity":1,"message":"336","line":1,"column":17,"nodeType":"310","messageId":"311","endLine":1,"endColumn":25},{"ruleId":"308","severity":1,"message":"333","line":2,"column":15,"nodeType":"310","messageId":"311","endLine":2,"endColumn":23},{"ruleId":"308","severity":1,"message":"334","line":3,"column":25,"nodeType":"310","messageId":"311","endLine":3,"endColumn":31},{"ruleId":"322","severity":1,"message":"323","line":10,"column":25,"nodeType":"324","messageId":"325","endLine":10,"endColumn":27},{"ruleId":"308","severity":1,"message":"337","line":20,"column":20,"nodeType":"310","messageId":"311","endLine":20,"endColumn":25},{"ruleId":"308","severity":1,"message":"335","line":38,"column":11,"nodeType":"310","messageId":"311","endLine":38,"endColumn":22},{"ruleId":"308","severity":1,"message":"314","line":2,"column":9,"nodeType":"310","messageId":"311","endLine":2,"endColumn":13},{"ruleId":"308","severity":1,"message":"333","line":2,"column":15,"nodeType":"310","messageId":"311","endLine":2,"endColumn":23},{"ruleId":"308","severity":1,"message":"334","line":3,"column":25,"nodeType":"310","messageId":"311","endLine":3,"endColumn":31},{"ruleId":"322","severity":1,"message":"323","line":11,"column":24,"nodeType":"324","messageId":"325","endLine":11,"endColumn":26},{"ruleId":"308","severity":1,"message":"338","line":36,"column":11,"nodeType":"310","messageId":"311","endLine":36,"endColumn":19},{"ruleId":"339","severity":1,"message":"340","line":51,"column":7,"nodeType":"341","endLine":51,"endColumn":31,"suggestions":"342"},{"ruleId":"308","severity":1,"message":"335","line":63,"column":11,"nodeType":"310","messageId":"311","endLine":63,"endColumn":22},{"ruleId":"308","severity":1,"message":"343","line":1,"column":24,"nodeType":"310","messageId":"311","endLine":1,"endColumn":33},{"ruleId":"308","severity":1,"message":"344","line":2,"column":10,"nodeType":"310","messageId":"311","endLine":2,"endColumn":23},{"ruleId":"308","severity":1,"message":"334","line":2,"column":25,"nodeType":"310","messageId":"311","endLine":2,"endColumn":31},{"ruleId":"308","severity":1,"message":"345","line":4,"column":14,"nodeType":"310","messageId":"311","endLine":4,"endColumn":17},{"ruleId":"308","severity":1,"message":"346","line":4,"column":18,"nodeType":"310","messageId":"311","endLine":4,"endColumn":21},{"ruleId":"308","severity":1,"message":"343","line":1,"column":24,"nodeType":"310","messageId":"311","endLine":1,"endColumn":33},{"ruleId":"308","severity":1,"message":"344","line":2,"column":10,"nodeType":"310","messageId":"311","endLine":2,"endColumn":23},{"ruleId":"308","severity":1,"message":"334","line":2,"column":25,"nodeType":"310","messageId":"311","endLine":2,"endColumn":31},{"ruleId":"308","severity":1,"message":"345","line":4,"column":14,"nodeType":"310","messageId":"311","endLine":4,"endColumn":17},{"ruleId":"308","severity":1,"message":"347","line":6,"column":10,"nodeType":"310","messageId":"311","endLine":6,"endColumn":29},{"ruleId":"308","severity":1,"message":"315","line":1,"column":15,"nodeType":"310","messageId":"311","endLine":1,"endColumn":23},{"ruleId":"308","severity":1,"message":"321","line":2,"column":8,"nodeType":"310","messageId":"311","endLine":2,"endColumn":13},{"ruleId":"308","severity":1,"message":"344","line":3,"column":10,"nodeType":"310","messageId":"311","endLine":3,"endColumn":23},{"ruleId":"308","severity":1,"message":"334","line":3,"column":25,"nodeType":"310","messageId":"311","endLine":3,"endColumn":31},{"ruleId":"308","severity":1,"message":"348","line":5,"column":9,"nodeType":"310","messageId":"311","endLine":5,"endColumn":13},{"ruleId":"308","severity":1,"message":"349","line":15,"column":11,"nodeType":"310","messageId":"311","endLine":15,"endColumn":22},{"ruleId":"339","severity":1,"message":"350","line":45,"column":7,"nodeType":"341","endLine":45,"endColumn":25,"suggestions":"351","suppressions":"352"},{"ruleId":"322","severity":1,"message":"323","line":14,"column":22,"nodeType":"324","messageId":"325","endLine":14,"endColumn":24},{"ruleId":"308","severity":1,"message":"315","line":1,"column":15,"nodeType":"310","messageId":"311","endLine":1,"endColumn":23},{"ruleId":"308","severity":1,"message":"344","line":3,"column":10,"nodeType":"310","messageId":"311","endLine":3,"endColumn":23},{"ruleId":"308","severity":1,"message":"334","line":3,"column":25,"nodeType":"310","messageId":"311","endLine":3,"endColumn":31},{"ruleId":"339","severity":1,"message":"353","line":29,"column":7,"nodeType":"341","endLine":29,"endColumn":40,"suggestions":"354"},{"ruleId":"308","severity":1,"message":"333","line":2,"column":15,"nodeType":"310","messageId":"311","endLine":2,"endColumn":23},{"ruleId":"308","severity":1,"message":"345","line":3,"column":14,"nodeType":"310","messageId":"311","endLine":3,"endColumn":17},{"ruleId":"308","severity":1,"message":"346","line":3,"column":18,"nodeType":"310","messageId":"311","endLine":3,"endColumn":21},{"ruleId":"322","severity":1,"message":"323","line":10,"column":25,"nodeType":"324","messageId":"325","endLine":10,"endColumn":27},{"ruleId":"308","severity":1,"message":"355","line":11,"column":11,"nodeType":"310","messageId":"311","endLine":11,"endColumn":19},{"ruleId":"339","severity":1,"message":"356","line":28,"column":7,"nodeType":"341","endLine":28,"endColumn":17,"suggestions":"357"},{"ruleId":"308","severity":1,"message":"335","line":35,"column":11,"nodeType":"310","messageId":"311","endLine":35,"endColumn":22},{"ruleId":"308","severity":1,"message":"315","line":2,"column":15,"nodeType":"310","messageId":"311","endLine":2,"endColumn":23},{"ruleId":"308","severity":1,"message":"344","line":4,"column":10,"nodeType":"310","messageId":"311","endLine":4,"endColumn":23},{"ruleId":"308","severity":1,"message":"334","line":4,"column":25,"nodeType":"310","messageId":"311","endLine":4,"endColumn":31},{"ruleId":"308","severity":1,"message":"358","line":21,"column":19,"nodeType":"310","messageId":"311","endLine":21,"endColumn":32},{"ruleId":"308","severity":1,"message":"333","line":3,"column":15,"nodeType":"310","messageId":"311","endLine":3,"endColumn":23},{"ruleId":"308","severity":1,"message":"345","line":4,"column":14,"nodeType":"310","messageId":"311","endLine":4,"endColumn":17},{"ruleId":"308","severity":1,"message":"346","line":4,"column":18,"nodeType":"310","messageId":"311","endLine":4,"endColumn":21},{"ruleId":"308","severity":1,"message":"359","line":4,"column":30,"nodeType":"310","messageId":"311","endLine":4,"endColumn":37},{"ruleId":"308","severity":1,"message":"360","line":4,"column":38,"nodeType":"310","messageId":"311","endLine":4,"endColumn":42},{"ruleId":"322","severity":1,"message":"323","line":12,"column":28,"nodeType":"324","messageId":"325","endLine":12,"endColumn":30},{"ruleId":"308","severity":1,"message":"361","line":32,"column":20,"nodeType":"310","messageId":"311","endLine":32,"endColumn":33},{"ruleId":"308","severity":1,"message":"335","line":97,"column":11,"nodeType":"310","messageId":"311","endLine":97,"endColumn":22},{"ruleId":"362","severity":1,"message":"363","line":151,"column":13,"nodeType":"364","endLine":151,"endColumn":32},{"ruleId":"308","severity":1,"message":"315","line":1,"column":15,"nodeType":"310","messageId":"311","endLine":1,"endColumn":23},{"ruleId":"308","severity":1,"message":"344","line":3,"column":10,"nodeType":"310","messageId":"311","endLine":3,"endColumn":23},{"ruleId":"308","severity":1,"message":"334","line":3,"column":25,"nodeType":"310","messageId":"311","endLine":3,"endColumn":31},"no-unused-vars","'NavDropdown' is defined but never used.","Identifier","unusedVar","'Lin' is defined but never used.","'LinkContainer' is defined but never used.","'Link' is defined but never used.","'useState' is defined but never used.","'products' is defined but never used.","'LOader' is defined but never used.","'Component' is defined but never used.","'PropTypes' is defined but never used.","'useMatch' is defined but never used.","'axios' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'CART_ADD_ITEMS' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","no-duplicate-case","Duplicate case label.","SwitchCase","'redirect' is defined but never used.","'Router' is defined but never used.","'setPassword' is assigned a value but never used.","'Children' is defined but never used.","'error' is assigned a value but never used.","'location' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["365"],"'useEffect' is defined but never used.","'ReactLocation' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'saveShippingAddress' is defined but never used.","'Form' is defined but never used.","'adddecimals' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'order'. Either include it or remove the dependency array.",["366"],["367"],"React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.",["368"],"'navigate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'user'. Either include them or remove the dependency array.",["369"],"'loadingDelete' is assigned a value but never used.","'NavItem' is defined but never used.","'File' is defined but never used.","'loadingUpdate' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"370","fix":"371"},{"desc":"372","fix":"373"},{"kind":"374","justification":"375"},{"desc":"376","fix":"377"},{"desc":"378","fix":"379"},"Update the dependencies array to be: [dispatch, userInfo, user, navigate]",{"range":"380","text":"381"},"Update the dependencies array to be: [navigate, order, success]",{"range":"382","text":"383"},"directive","","Update the dependencies array to be: [dispatch, navigate, successDelete, userInfo]",{"range":"384","text":"385"},"Update the dependencies array to be: [dispatch, id, user]",{"range":"386","text":"387"},[1673,1697],"[dispatch, userInfo, user, navigate]",[1420,1438],"[navigate, order, success]",[1017,1050],"[dispatch, navigate, successDelete, userInfo]",[968,978],"[dispatch, id, user]"]