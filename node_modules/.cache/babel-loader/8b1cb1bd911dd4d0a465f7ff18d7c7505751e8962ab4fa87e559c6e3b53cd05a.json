{"ast":null,"code":"import{ORDER_CREATE_FAIL,ORDER_CREATE_REQUEST,ORDER_CREATE_SUCCESS,ORDER_DELIVERED_FAIL,ORDER_DELIVERED_REQUEST,ORDER_DELIVERED_SUCCESS,ORDER_DETAILS_FAIL,ORDER_DETAILS_REQUEST,ORDER_DETAILS_SUCCESS,ORDER_LIST_FAIL,ORDER_LIST_MY_FAIL,ORDER_LIST_MY_REQUEST,ORDER_LIST_MY_SUCCESS,ORDER_LIST_REQUEST,ORDER_LIST_SUCCESS,ORDER_PAY_FAIL,ORDER_PAY_REQUEST,ORDER_PAY_SUCCESS}from\"../constants/orderConstansts\";import axios from\"axios\";export const createOrder=order=>async(dispatch,getState)=>{try{dispatch({type:ORDER_CREATE_REQUEST});const{userLogin:{userInfo}}=getState();const config={headers:{'Content-type':'application/json',Authorization:\"Bearer \".concat(userInfo.token)}};const{data}=await axios.post(\"/api/orders\",order,config);dispatch({type:ORDER_CREATE_SUCCESS,payload:data});}catch(error){dispatch({type:ORDER_CREATE_FAIL,payload:error.response&&error.response.data.message?error.response.data.message:error.message});}};export const getOrderDetails=id=>async(dispatch,getState)=>{console.log('is');try{dispatch({type:ORDER_DETAILS_REQUEST});const{userLogin:{userInfo}}=getState();const config={headers:{Authorization:\"Bearer \".concat(userInfo.token)}};const{data}=await axios.get(\"/api/orders/\".concat(id),config);console.log('this is data ');console.log(data);dispatch({type:ORDER_DETAILS_SUCCESS,payload:data});}catch(error){dispatch({type:ORDER_DETAILS_FAIL,payload:error.response&&error.response.data.message?error.response.data.message:error.message});}};// export const getOrderDetails = (orderId) => async (dispatch, getState) => {\n//     try {\n//       dispatch({ type: ORDER_DETAILS_REQUEST });\n//       const { userLogin: { userInfo },} = getState();\n//       const {data} = await axios.get(`/api/orders/${orderId}`, {\n//         headers:\n//           { Authorization: 'Bearer ' + userInfo.token }\n//       });\n//       dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data })\n//     } catch (error) {\n//       dispatch({ type: ORDER_DETAILS_FAIL, payload: error.message });\n//     }\n//   }\nexport const payOrder=(orderId,paymentResult)=>async(dispatch,getState)=>{console.log('is');try{dispatch({type:ORDER_PAY_REQUEST});const{userLogin:{userInfo}}=getState();const config={headers:{'Content-Type':'application/json',Authorization:\"Bearer \".concat(userInfo.token)}};const{data}=await axios.put(\"/api/orders/\".concat(orderId,\"/pay\"),paymentResult,config);console.log('this is data ');console.log(data);dispatch({type:ORDER_PAY_SUCCESS,payload:data});}catch(error){dispatch({type:ORDER_PAY_FAIL,payload:error.response&&error.response.data.message?error.response.data.message:error.message});}};export const listMyOrders=()=>async(dispatch,getState)=>{// console.log('is')\ntry{dispatch({type:ORDER_LIST_MY_REQUEST});const{userLogin:{userInfo}}=getState();const config={headers:{Authorization:\"Bearer \".concat(userInfo.token)}};const{data}=await axios.get(\"/api/orders/myorders\",config);console.log('this is data ');console.log(data);dispatch({type:ORDER_LIST_MY_SUCCESS,payload:data});}catch(error){dispatch({type:ORDER_LIST_MY_FAIL,payload:error.response&&error.response.data.message?error.response.data.message:error.message});}};export const listOrders=()=>async(dispatch,getState)=>{// console.log('is')\ntry{dispatch({type:ORDER_LIST_REQUEST});const{userLogin:{userInfo}}=getState();const config={headers:{Authorization:\"Bearer \".concat(userInfo.token)}};const{data}=await axios.get(\"/api/orders\",config);console.log('this is data ');console.log(data);dispatch({type:ORDER_LIST_SUCCESS,payload:data});}catch(error){dispatch({type:ORDER_LIST_FAIL,payload:error.response&&error.response.data.message?error.response.data.message:error.message});}};export const deliverOrder=order=>async(dispatch,getState)=>{console.log('after actions');console.log(order._id);try{dispatch({type:ORDER_DELIVERED_REQUEST});const{userLogin:{userInfo}}=getState();const config={headers:{Authorization:\"Bearer \".concat(userInfo.token)}};const{data}=await axios.put(\"/api/orders/\".concat(order._id,\"/deliver\"),{},config);console.log('this is data ');console.log(data);dispatch({type:ORDER_DELIVERED_SUCCESS,payload:data});}catch(error){dispatch({type:ORDER_DELIVERED_FAIL,payload:error.response&&error.response.data.message?error.response.data.message:error.message});}};","map":{"version":3,"names":["ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_DELIVERED_FAIL","ORDER_DELIVERED_REQUEST","ORDER_DELIVERED_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_LIST_FAIL","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","axios","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","error","response","message","getOrderDetails","id","console","log","get","payOrder","orderId","paymentResult","put","listMyOrders","listOrders","deliverOrder","_id"],"sources":["/home/kali/Desktop/c++/proshop/src/actions/orderActions.js"],"sourcesContent":["import { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DELIVERED_FAIL, ORDER_DELIVERED_REQUEST, ORDER_DELIVERED_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_LIST_FAIL, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS } from \"../constants/orderConstansts\";\nimport axios from \"axios\";\n\nexport const createOrder =(order)=>async(dispatch,getState)=>{\n    try{\n        dispatch({\n            type:ORDER_CREATE_REQUEST\n        })\n        const {userLogin:{userInfo}}=getState()\n        const config={\n            headers:{\n                'Content-type':'application/json',\n                Authorization:`Bearer ${userInfo.token}`\n\n            }\n        }\n        const {data}=await axios.post(`/api/orders`,order,config)\n        dispatch({\n            type:ORDER_CREATE_SUCCESS,\n            payload:data\n        })\n       \n    }catch(error){\n        dispatch({\n            type:ORDER_CREATE_FAIL,\n            payload:\n            error.response && error.response.data.message?\n            error.response.data.message:\n            error.message,\n        })\n    }\n}\n\nexport const getOrderDetails =(id)=>async(dispatch,getState)=>{\n    console.log('is')\n    try{\n        dispatch({\n            type:ORDER_DETAILS_REQUEST\n        })\n        const {userLogin:{userInfo},}=getState()\n        const config={\n            headers:{\n               \n                Authorization:`Bearer ${userInfo.token}`,\n\n            },\n        }\n        const {data}=await axios.get(`/api/orders/${id}`,config)\n        console.log('this is data ')\n      console.log(data)\n       \n        dispatch({\n            type:ORDER_DETAILS_SUCCESS,\n            payload:data    \n        })\n       \n    }catch(error){\n        dispatch({\n            type:ORDER_DETAILS_FAIL,\n            payload:\n            error.response && error.response.data.message?\n            error.response.data.message:\n            error.message,\n        })\n    }\n}\n\n\n// export const getOrderDetails = (orderId) => async (dispatch, getState) => {\n//     try {\n//       dispatch({ type: ORDER_DETAILS_REQUEST });\n//       const { userLogin: { userInfo },} = getState();\n//       const {data} = await axios.get(`/api/orders/${orderId}`, {\n//         headers:\n//           { Authorization: 'Bearer ' + userInfo.token }\n//       });\n//       dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data })\n//     } catch (error) {\n//       dispatch({ type: ORDER_DETAILS_FAIL, payload: error.message });\n//     }\n//   }\n\n\nexport const payOrder =(orderId,paymentResult)=>async(dispatch,getState)=>{\n    console.log('is')\n    try{\n        dispatch({\n            type:ORDER_PAY_REQUEST\n        })\n        const {userLogin:{userInfo},}=getState()\n        const config={\n            headers:{\n               'Content-Type':'application/json',\n                Authorization:`Bearer ${userInfo.token}`,\n\n            },\n        }\n        const {data}=await axios.put(`/api/orders/${orderId}/pay`,paymentResult,config)\n        console.log('this is data ')\n      console.log(data)\n       \n        dispatch({\n            type:ORDER_PAY_SUCCESS,\n            payload:data    \n        })\n       \n    }catch(error){\n        dispatch({\n            type:ORDER_PAY_FAIL,\n            payload:\n            error.response && error.response.data.message?\n            error.response.data.message:\n            error.message,\n        })\n    }\n}\n\n\nexport const listMyOrders =()=>async(dispatch,getState)=>{\n    // console.log('is')\n    try{\n        dispatch({\n            type:ORDER_LIST_MY_REQUEST\n        })\n        const {userLogin:{userInfo},}=getState()\n        const config={\n            headers:{\n                Authorization:`Bearer ${userInfo.token}`,\n\n            },\n        }\n        const {data}=await axios.get(`/api/orders/myorders`,config)\n        console.log('this is data ')\n      console.log(data)\n       \n        dispatch({\n            type:ORDER_LIST_MY_SUCCESS,\n            payload:data    \n        })\n       \n    }catch(error){\n        dispatch({\n            type:ORDER_LIST_MY_FAIL,\n            payload:\n            error.response && error.response.data.message?\n            error.response.data.message:\n            error.message,\n        })\n    }\n}\n\n \n\n\n\nexport const listOrders =()=>async(dispatch,getState)=>{\n    // console.log('is')\n    try{\n        dispatch({\n            type:ORDER_LIST_REQUEST\n        })\n        const {userLogin:{userInfo},}=getState()\n        const config={\n            headers:{\n                Authorization:`Bearer ${userInfo.token}`,\n\n            },\n        }\n        const {data}=await axios.get(`/api/orders`,config)\n        console.log('this is data ')\n      console.log(data)\n       \n        dispatch({\n            type:ORDER_LIST_SUCCESS,\n            payload:data    \n        })\n       \n    }catch(error){\n        dispatch({\n            type:ORDER_LIST_FAIL,\n            payload:\n            error.response && error.response.data.message?\n            error.response.data.message:\n            error.message,\n        })\n    }\n}\n\n \nexport const deliverOrder =(order)=>async(dispatch,getState)=>{\n    console.log('after actions')\n    console.log(order._id)\n    try{\n        dispatch({\n            type:ORDER_DELIVERED_REQUEST\n        })\n        const {userLogin:{userInfo},}=getState()\n        const config={\n            headers:{\n                Authorization:`Bearer ${userInfo.token}`,\n\n            },\n        }\n        const {data}=await axios.put(`/api/orders/${order._id}/deliver`,{},config)\n        console.log('this is data ')\n      console.log(data)\n       \n        dispatch({\n            type:ORDER_DELIVERED_SUCCESS,\n            payload:data    \n        })\n       \n    }catch(error){\n        dispatch({\n            type:ORDER_DELIVERED_FAIL,\n            payload:\n            error.response && error.response.data.message?\n            error.response.data.message:\n            error.message,\n        })\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}