{"ast":null,"code":"import { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS } from \"../constants/userConstansts\";\nimport axios from 'axios';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users', {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","axios","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","register","name"],"sources":["/home/kali/Desktop/c++/proshop/src/actions/userActions.js"],"sourcesContent":["import { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS } from \"../constants/userConstansts\"\nimport axios from 'axios'\n\nexport const login=(email,password)=>async(dispatch)=>{\n    try{\n        dispatch({\n            type:USER_LOGIN_REQUEST\n        })\n        const config={\n            headers:{\n                'Content-type':'application/json'\n            }\n        }\n        const {data}=await axios.post('/api/users/login',{email,password},config)\n        dispatch({\n            type:USER_LOGIN_SUCCESS,\n            payload:data\n        })\n        localStorage.setItem('userInfo',JSON.stringify(data))\n    }catch(error){\n        dispatch({\n            type:USER_LOGIN_FAIL,\n            payload:\n            error.response && error.response.data.message?\n            error.response.data.message:\n            error.message,\n        })\n    }\n}\nexport const logout=()=>(dispatch)=>{\n    localStorage.removeItem('userInfo')\n    dispatch({type:USER_LOGOUT})\n}\n\nexport const register=(name,email,password)=>async(dispatch)=>{\n    try{\n        dispatch({\n            type:USER_REGISTER_REQUEST\n        })\n        const config={\n            headers:{\n                'Content-type':'application/json'\n            }\n        }\n        const {data}=await axios.post('/api/users',{name,email,password},config)\n        dispatch({\n            type:USER_REGISTER_SUCCESS,\n            payload:data\n        })\n        dispatch({\n            type:USER_LOGIN_SUCCESS,\n            payload:data\n        })\n\n        localStorage.setItem('userInfo',JSON.stringify(data))\n    }catch(error){\n        dispatch({\n            type:USER_REGISTER_FAIL,\n            payload:\n            error.response && error.response.data.message?\n            error.response.data.message:\n            error.message,\n        })\n    }\n}\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,kBAAkB,EAAEC,kBAAkB,EAAEC,WAAW,EAAEC,kBAAkB,EAAEC,qBAAqB,EAAEC,qBAAqB,QAAQ,6BAA6B;AACpL,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,KAAK,GAAC,CAACC,KAAK,EAACC,QAAQ,KAAG,MAAMC,QAAQ,IAAG;EAClD,IAAG;IACCA,QAAQ,CAAC;MACLC,IAAI,EAACX;IACT,CAAC,CAAC;IACF,MAAMY,MAAM,GAAC;MACTC,OAAO,EAAC;QACJ,cAAc,EAAC;MACnB;IACJ,CAAC;IACD,MAAM;MAACC;IAAI,CAAC,GAAC,MAAMR,KAAK,CAACS,IAAI,CAAC,kBAAkB,EAAC;MAACP,KAAK;MAACC;IAAQ,CAAC,EAACG,MAAM,CAAC;IACzEF,QAAQ,CAAC;MACLC,IAAI,EAACV,kBAAkB;MACvBe,OAAO,EAACF;IACZ,CAAC,CAAC;IACFG,YAAY,CAACC,OAAO,CAAC,UAAU,EAACC,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC,CAAC;EACzD,CAAC,QAAMO,KAAK,EAAC;IACTX,QAAQ,CAAC;MACLC,IAAI,EAACZ,eAAe;MACpBiB,OAAO,EACPK,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACR,IAAI,CAACS,OAAO,GAC7CF,KAAK,CAACC,QAAQ,CAACR,IAAI,CAACS,OAAO,GAC3BF,KAAK,CAACE;IACV,CAAC,CAAC;EACN;AACJ,CAAC;AACD,OAAO,MAAMC,MAAM,GAAC,MAAKd,QAAQ,IAAG;EAChCO,YAAY,CAACQ,UAAU,CAAC,UAAU,CAAC;EACnCf,QAAQ,CAAC;IAACC,IAAI,EAACT;EAAW,CAAC,CAAC;AAChC,CAAC;AAED,OAAO,MAAMwB,QAAQ,GAAC,CAACC,IAAI,EAACnB,KAAK,EAACC,QAAQ,KAAG,MAAMC,QAAQ,IAAG;EAC1D,IAAG;IACCA,QAAQ,CAAC;MACLC,IAAI,EAACP;IACT,CAAC,CAAC;IACF,MAAMQ,MAAM,GAAC;MACTC,OAAO,EAAC;QACJ,cAAc,EAAC;MACnB;IACJ,CAAC;IACD,MAAM;MAACC;IAAI,CAAC,GAAC,MAAMR,KAAK,CAACS,IAAI,CAAC,YAAY,EAAC;MAACY,IAAI;MAACnB,KAAK;MAACC;IAAQ,CAAC,EAACG,MAAM,CAAC;IACxEF,QAAQ,CAAC;MACLC,IAAI,EAACN,qBAAqB;MAC1BW,OAAO,EAACF;IACZ,CAAC,CAAC;IACFJ,QAAQ,CAAC;MACLC,IAAI,EAACV,kBAAkB;MACvBe,OAAO,EAACF;IACZ,CAAC,CAAC;IAEFG,YAAY,CAACC,OAAO,CAAC,UAAU,EAACC,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC,CAAC;EACzD,CAAC,QAAMO,KAAK,EAAC;IACTX,QAAQ,CAAC;MACLC,IAAI,EAACR,kBAAkB;MACvBa,OAAO,EACPK,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACR,IAAI,CAACS,OAAO,GAC7CF,KAAK,CAACC,QAAQ,CAACR,IAAI,CAACS,OAAO,GAC3BF,KAAK,CAACE;IACV,CAAC,CAAC;EACN;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}