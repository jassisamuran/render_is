{"ast":null,"code":"// Generated by CoffeeScript 1.12.7\n(function () {\n  var Access,\n    Arr,\n    Assign,\n    Base,\n    Block,\n    BooleanLiteral,\n    Call,\n    Class,\n    Code,\n    CodeFragment,\n    Comment,\n    Existence,\n    Expansion,\n    ExportAllDeclaration,\n    ExportDeclaration,\n    ExportDefaultDeclaration,\n    ExportNamedDeclaration,\n    ExportSpecifier,\n    ExportSpecifierList,\n    Extends,\n    For,\n    IdentifierLiteral,\n    If,\n    ImportClause,\n    ImportDeclaration,\n    ImportDefaultSpecifier,\n    ImportNamespaceSpecifier,\n    ImportSpecifier,\n    ImportSpecifierList,\n    In,\n    Index,\n    InfinityLiteral,\n    JS_FORBIDDEN,\n    LEVEL_ACCESS,\n    LEVEL_COND,\n    LEVEL_LIST,\n    LEVEL_OP,\n    LEVEL_PAREN,\n    LEVEL_TOP,\n    Literal,\n    ModuleDeclaration,\n    ModuleSpecifier,\n    ModuleSpecifierList,\n    NEGATE,\n    NO,\n    NaNLiteral,\n    NullLiteral,\n    NumberLiteral,\n    Obj,\n    Op,\n    Param,\n    Parens,\n    PassthroughLiteral,\n    PropertyName,\n    Range,\n    RegexLiteral,\n    RegexWithInterpolations,\n    Return,\n    SIMPLENUM,\n    Scope,\n    Slice,\n    Splat,\n    StatementLiteral,\n    StringLiteral,\n    StringWithInterpolations,\n    SuperCall,\n    Switch,\n    TAB,\n    THIS,\n    TaggedTemplateCall,\n    ThisLiteral,\n    Throw,\n    Try,\n    UTILITIES,\n    UndefinedLiteral,\n    Value,\n    While,\n    YES,\n    YieldReturn,\n    addLocationDataFn,\n    compact,\n    del,\n    ends,\n    extend,\n    flatten,\n    fragmentsToText,\n    isComplexOrAssignable,\n    isLiteralArguments,\n    isLiteralThis,\n    isUnassignable,\n    locationDataToString,\n    merge,\n    multident,\n    ref1,\n    ref2,\n    some,\n    starts,\n    throwSyntaxError,\n    unfoldSoak,\n    utility,\n    extend1 = function (child, parent) {\n      for (var key in parent) {\n        if (hasProp.call(parent, key)) child[key] = parent[key];\n      }\n      function ctor() {\n        this.constructor = child;\n      }\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n      child.__super__ = parent.prototype;\n      return child;\n    },\n    hasProp = {}.hasOwnProperty,\n    indexOf = [].indexOf || function (item) {\n      for (var i = 0, l = this.length; i < l; i++) {\n        if (i in this && this[i] === item) return i;\n      }\n      return -1;\n    },\n    slice = [].slice;\n  Error.stackTraceLimit = 2e308;\n  Scope = require('./scope').Scope;\n  ref1 = require('./lexer'), isUnassignable = ref1.isUnassignable, JS_FORBIDDEN = ref1.JS_FORBIDDEN;\n  ref2 = require('./helpers'), compact = ref2.compact, flatten = ref2.flatten, extend = ref2.extend, merge = ref2.merge, del = ref2.del, starts = ref2.starts, ends = ref2.ends, some = ref2.some, addLocationDataFn = ref2.addLocationDataFn, locationDataToString = ref2.locationDataToString, throwSyntaxError = ref2.throwSyntaxError;\n  exports.extend = extend;\n  exports.addLocationDataFn = addLocationDataFn;\n  YES = function () {\n    return true;\n  };\n  NO = function () {\n    return false;\n  };\n  THIS = function () {\n    return this;\n  };\n  NEGATE = function () {\n    this.negated = !this.negated;\n    return this;\n  };\n  exports.CodeFragment = CodeFragment = function () {\n    function CodeFragment(parent, code) {\n      var ref3;\n      this.code = \"\" + code;\n      this.locationData = parent != null ? parent.locationData : void 0;\n      this.type = (parent != null ? (ref3 = parent.constructor) != null ? ref3.name : void 0 : void 0) || 'unknown';\n    }\n    CodeFragment.prototype.toString = function () {\n      return \"\" + this.code + (this.locationData ? \": \" + locationDataToString(this.locationData) : '');\n    };\n    return CodeFragment;\n  }();\n  fragmentsToText = function (fragments) {\n    var fragment;\n    return function () {\n      var j, len1, results;\n      results = [];\n      for (j = 0, len1 = fragments.length; j < len1; j++) {\n        fragment = fragments[j];\n        results.push(fragment.code);\n      }\n      return results;\n    }().join('');\n  };\n  exports.Base = Base = function () {\n    function Base() {}\n    Base.prototype.compile = function (o, lvl) {\n      return fragmentsToText(this.compileToFragments(o, lvl));\n    };\n    Base.prototype.compileToFragments = function (o, lvl) {\n      var node;\n      o = extend({}, o);\n      if (lvl) {\n        o.level = lvl;\n      }\n      node = this.unfoldSoak(o) || this;\n      node.tab = o.indent;\n      if (o.level === LEVEL_TOP || !node.isStatement(o)) {\n        return node.compileNode(o);\n      } else {\n        return node.compileClosure(o);\n      }\n    };\n    Base.prototype.compileClosure = function (o) {\n      var args, argumentsNode, func, jumpNode, meth, parts, ref3;\n      if (jumpNode = this.jumps()) {\n        jumpNode.error('cannot use a pure statement in an expression');\n      }\n      o.sharedScope = true;\n      func = new Code([], Block.wrap([this]));\n      args = [];\n      if ((argumentsNode = this.contains(isLiteralArguments)) || this.contains(isLiteralThis)) {\n        args = [new ThisLiteral()];\n        if (argumentsNode) {\n          meth = 'apply';\n          args.push(new IdentifierLiteral('arguments'));\n        } else {\n          meth = 'call';\n        }\n        func = new Value(func, [new Access(new PropertyName(meth))]);\n      }\n      parts = new Call(func, args).compileNode(o);\n      if (func.isGenerator || ((ref3 = func.base) != null ? ref3.isGenerator : void 0)) {\n        parts.unshift(this.makeCode(\"(yield* \"));\n        parts.push(this.makeCode(\")\"));\n      }\n      return parts;\n    };\n    Base.prototype.cache = function (o, level, isComplex) {\n      var complex, ref, sub;\n      complex = isComplex != null ? isComplex(this) : this.isComplex();\n      if (complex) {\n        ref = new IdentifierLiteral(o.scope.freeVariable('ref'));\n        sub = new Assign(ref, this);\n        if (level) {\n          return [sub.compileToFragments(o, level), [this.makeCode(ref.value)]];\n        } else {\n          return [sub, ref];\n        }\n      } else {\n        ref = level ? this.compileToFragments(o, level) : this;\n        return [ref, ref];\n      }\n    };\n    Base.prototype.cacheToCodeFragments = function (cacheValues) {\n      return [fragmentsToText(cacheValues[0]), fragmentsToText(cacheValues[1])];\n    };\n    Base.prototype.makeReturn = function (res) {\n      var me;\n      me = this.unwrapAll();\n      if (res) {\n        return new Call(new Literal(res + \".push\"), [me]);\n      } else {\n        return new Return(me);\n      }\n    };\n    Base.prototype.contains = function (pred) {\n      var node;\n      node = void 0;\n      this.traverseChildren(false, function (n) {\n        if (pred(n)) {\n          node = n;\n          return false;\n        }\n      });\n      return node;\n    };\n    Base.prototype.lastNonComment = function (list) {\n      var i;\n      i = list.length;\n      while (i--) {\n        if (!(list[i] instanceof Comment)) {\n          return list[i];\n        }\n      }\n      return null;\n    };\n    Base.prototype.toString = function (idt, name) {\n      var tree;\n      if (idt == null) {\n        idt = '';\n      }\n      if (name == null) {\n        name = this.constructor.name;\n      }\n      tree = '\\n' + idt + name;\n      if (this.soak) {\n        tree += '?';\n      }\n      this.eachChild(function (node) {\n        return tree += node.toString(idt + TAB);\n      });\n      return tree;\n    };\n    Base.prototype.eachChild = function (func) {\n      var attr, child, j, k, len1, len2, ref3, ref4;\n      if (!this.children) {\n        return this;\n      }\n      ref3 = this.children;\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        attr = ref3[j];\n        if (this[attr]) {\n          ref4 = flatten([this[attr]]);\n          for (k = 0, len2 = ref4.length; k < len2; k++) {\n            child = ref4[k];\n            if (func(child) === false) {\n              return this;\n            }\n          }\n        }\n      }\n      return this;\n    };\n    Base.prototype.traverseChildren = function (crossScope, func) {\n      return this.eachChild(function (child) {\n        var recur;\n        recur = func(child);\n        if (recur !== false) {\n          return child.traverseChildren(crossScope, func);\n        }\n      });\n    };\n    Base.prototype.invert = function () {\n      return new Op('!', this);\n    };\n    Base.prototype.unwrapAll = function () {\n      var node;\n      node = this;\n      while (node !== (node = node.unwrap())) {\n        continue;\n      }\n      return node;\n    };\n    Base.prototype.children = [];\n    Base.prototype.isStatement = NO;\n    Base.prototype.jumps = NO;\n    Base.prototype.isComplex = YES;\n    Base.prototype.isChainable = NO;\n    Base.prototype.isAssignable = NO;\n    Base.prototype.isNumber = NO;\n    Base.prototype.unwrap = THIS;\n    Base.prototype.unfoldSoak = NO;\n    Base.prototype.assigns = NO;\n    Base.prototype.updateLocationDataIfMissing = function (locationData) {\n      if (this.locationData) {\n        return this;\n      }\n      this.locationData = locationData;\n      return this.eachChild(function (child) {\n        return child.updateLocationDataIfMissing(locationData);\n      });\n    };\n    Base.prototype.error = function (message) {\n      return throwSyntaxError(message, this.locationData);\n    };\n    Base.prototype.makeCode = function (code) {\n      return new CodeFragment(this, code);\n    };\n    Base.prototype.wrapInBraces = function (fragments) {\n      return [].concat(this.makeCode('('), fragments, this.makeCode(')'));\n    };\n    Base.prototype.joinFragmentArrays = function (fragmentsList, joinStr) {\n      var answer, fragments, i, j, len1;\n      answer = [];\n      for (i = j = 0, len1 = fragmentsList.length; j < len1; i = ++j) {\n        fragments = fragmentsList[i];\n        if (i) {\n          answer.push(this.makeCode(joinStr));\n        }\n        answer = answer.concat(fragments);\n      }\n      return answer;\n    };\n    return Base;\n  }();\n  exports.Block = Block = function (superClass1) {\n    extend1(Block, superClass1);\n    function Block(nodes) {\n      this.expressions = compact(flatten(nodes || []));\n    }\n    Block.prototype.children = ['expressions'];\n    Block.prototype.push = function (node) {\n      this.expressions.push(node);\n      return this;\n    };\n    Block.prototype.pop = function () {\n      return this.expressions.pop();\n    };\n    Block.prototype.unshift = function (node) {\n      this.expressions.unshift(node);\n      return this;\n    };\n    Block.prototype.unwrap = function () {\n      if (this.expressions.length === 1) {\n        return this.expressions[0];\n      } else {\n        return this;\n      }\n    };\n    Block.prototype.isEmpty = function () {\n      return !this.expressions.length;\n    };\n    Block.prototype.isStatement = function (o) {\n      var exp, j, len1, ref3;\n      ref3 = this.expressions;\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        exp = ref3[j];\n        if (exp.isStatement(o)) {\n          return true;\n        }\n      }\n      return false;\n    };\n    Block.prototype.jumps = function (o) {\n      var exp, j, jumpNode, len1, ref3;\n      ref3 = this.expressions;\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        exp = ref3[j];\n        if (jumpNode = exp.jumps(o)) {\n          return jumpNode;\n        }\n      }\n    };\n    Block.prototype.makeReturn = function (res) {\n      var expr, len;\n      len = this.expressions.length;\n      while (len--) {\n        expr = this.expressions[len];\n        if (!(expr instanceof Comment)) {\n          this.expressions[len] = expr.makeReturn(res);\n          if (expr instanceof Return && !expr.expression) {\n            this.expressions.splice(len, 1);\n          }\n          break;\n        }\n      }\n      return this;\n    };\n    Block.prototype.compileToFragments = function (o, level) {\n      if (o == null) {\n        o = {};\n      }\n      if (o.scope) {\n        return Block.__super__.compileToFragments.call(this, o, level);\n      } else {\n        return this.compileRoot(o);\n      }\n    };\n    Block.prototype.compileNode = function (o) {\n      var answer, compiledNodes, fragments, index, j, len1, node, ref3, top;\n      this.tab = o.indent;\n      top = o.level === LEVEL_TOP;\n      compiledNodes = [];\n      ref3 = this.expressions;\n      for (index = j = 0, len1 = ref3.length; j < len1; index = ++j) {\n        node = ref3[index];\n        node = node.unwrapAll();\n        node = node.unfoldSoak(o) || node;\n        if (node instanceof Block) {\n          compiledNodes.push(node.compileNode(o));\n        } else if (top) {\n          node.front = true;\n          fragments = node.compileToFragments(o);\n          if (!node.isStatement(o)) {\n            fragments.unshift(this.makeCode(\"\" + this.tab));\n            fragments.push(this.makeCode(\";\"));\n          }\n          compiledNodes.push(fragments);\n        } else {\n          compiledNodes.push(node.compileToFragments(o, LEVEL_LIST));\n        }\n      }\n      if (top) {\n        if (this.spaced) {\n          return [].concat(this.joinFragmentArrays(compiledNodes, '\\n\\n'), this.makeCode(\"\\n\"));\n        } else {\n          return this.joinFragmentArrays(compiledNodes, '\\n');\n        }\n      }\n      if (compiledNodes.length) {\n        answer = this.joinFragmentArrays(compiledNodes, ', ');\n      } else {\n        answer = [this.makeCode(\"void 0\")];\n      }\n      if (compiledNodes.length > 1 && o.level >= LEVEL_LIST) {\n        return this.wrapInBraces(answer);\n      } else {\n        return answer;\n      }\n    };\n    Block.prototype.compileRoot = function (o) {\n      var exp, fragments, i, j, len1, name, prelude, preludeExps, ref3, ref4, rest;\n      o.indent = o.bare ? '' : TAB;\n      o.level = LEVEL_TOP;\n      this.spaced = true;\n      o.scope = new Scope(null, this, null, (ref3 = o.referencedVars) != null ? ref3 : []);\n      ref4 = o.locals || [];\n      for (j = 0, len1 = ref4.length; j < len1; j++) {\n        name = ref4[j];\n        o.scope.parameter(name);\n      }\n      prelude = [];\n      if (!o.bare) {\n        preludeExps = function () {\n          var k, len2, ref5, results;\n          ref5 = this.expressions;\n          results = [];\n          for (i = k = 0, len2 = ref5.length; k < len2; i = ++k) {\n            exp = ref5[i];\n            if (!(exp.unwrap() instanceof Comment)) {\n              break;\n            }\n            results.push(exp);\n          }\n          return results;\n        }.call(this);\n        rest = this.expressions.slice(preludeExps.length);\n        this.expressions = preludeExps;\n        if (preludeExps.length) {\n          prelude = this.compileNode(merge(o, {\n            indent: ''\n          }));\n          prelude.push(this.makeCode(\"\\n\"));\n        }\n        this.expressions = rest;\n      }\n      fragments = this.compileWithDeclarations(o);\n      if (o.bare) {\n        return fragments;\n      }\n      return [].concat(prelude, this.makeCode(\"(function() {\\n\"), fragments, this.makeCode(\"\\n}).call(this);\\n\"));\n    };\n    Block.prototype.compileWithDeclarations = function (o) {\n      var assigns, declars, exp, fragments, i, j, len1, post, ref3, ref4, ref5, rest, scope, spaced;\n      fragments = [];\n      post = [];\n      ref3 = this.expressions;\n      for (i = j = 0, len1 = ref3.length; j < len1; i = ++j) {\n        exp = ref3[i];\n        exp = exp.unwrap();\n        if (!(exp instanceof Comment || exp instanceof Literal)) {\n          break;\n        }\n      }\n      o = merge(o, {\n        level: LEVEL_TOP\n      });\n      if (i) {\n        rest = this.expressions.splice(i, 9e9);\n        ref4 = [this.spaced, false], spaced = ref4[0], this.spaced = ref4[1];\n        ref5 = [this.compileNode(o), spaced], fragments = ref5[0], this.spaced = ref5[1];\n        this.expressions = rest;\n      }\n      post = this.compileNode(o);\n      scope = o.scope;\n      if (scope.expressions === this) {\n        declars = o.scope.hasDeclarations();\n        assigns = scope.hasAssignments;\n        if (declars || assigns) {\n          if (i) {\n            fragments.push(this.makeCode('\\n'));\n          }\n          fragments.push(this.makeCode(this.tab + \"var \"));\n          if (declars) {\n            fragments.push(this.makeCode(scope.declaredVariables().join(', ')));\n          }\n          if (assigns) {\n            if (declars) {\n              fragments.push(this.makeCode(\",\\n\" + (this.tab + TAB)));\n            }\n            fragments.push(this.makeCode(scope.assignedVariables().join(\",\\n\" + (this.tab + TAB))));\n          }\n          fragments.push(this.makeCode(\";\\n\" + (this.spaced ? '\\n' : '')));\n        } else if (fragments.length && post.length) {\n          fragments.push(this.makeCode(\"\\n\"));\n        }\n      }\n      return fragments.concat(post);\n    };\n    Block.wrap = function (nodes) {\n      if (nodes.length === 1 && nodes[0] instanceof Block) {\n        return nodes[0];\n      }\n      return new Block(nodes);\n    };\n    return Block;\n  }(Base);\n  exports.Literal = Literal = function (superClass1) {\n    extend1(Literal, superClass1);\n    function Literal(value1) {\n      this.value = value1;\n    }\n    Literal.prototype.isComplex = NO;\n    Literal.prototype.assigns = function (name) {\n      return name === this.value;\n    };\n    Literal.prototype.compileNode = function (o) {\n      return [this.makeCode(this.value)];\n    };\n    Literal.prototype.toString = function () {\n      return \" \" + (this.isStatement() ? Literal.__super__.toString.apply(this, arguments) : this.constructor.name) + \": \" + this.value;\n    };\n    return Literal;\n  }(Base);\n  exports.NumberLiteral = NumberLiteral = function (superClass1) {\n    extend1(NumberLiteral, superClass1);\n    function NumberLiteral() {\n      return NumberLiteral.__super__.constructor.apply(this, arguments);\n    }\n    return NumberLiteral;\n  }(Literal);\n  exports.InfinityLiteral = InfinityLiteral = function (superClass1) {\n    extend1(InfinityLiteral, superClass1);\n    function InfinityLiteral() {\n      return InfinityLiteral.__super__.constructor.apply(this, arguments);\n    }\n    InfinityLiteral.prototype.compileNode = function () {\n      return [this.makeCode('2e308')];\n    };\n    return InfinityLiteral;\n  }(NumberLiteral);\n  exports.NaNLiteral = NaNLiteral = function (superClass1) {\n    extend1(NaNLiteral, superClass1);\n    function NaNLiteral() {\n      NaNLiteral.__super__.constructor.call(this, 'NaN');\n    }\n    NaNLiteral.prototype.compileNode = function (o) {\n      var code;\n      code = [this.makeCode('0/0')];\n      if (o.level >= LEVEL_OP) {\n        return this.wrapInBraces(code);\n      } else {\n        return code;\n      }\n    };\n    return NaNLiteral;\n  }(NumberLiteral);\n  exports.StringLiteral = StringLiteral = function (superClass1) {\n    extend1(StringLiteral, superClass1);\n    function StringLiteral() {\n      return StringLiteral.__super__.constructor.apply(this, arguments);\n    }\n    return StringLiteral;\n  }(Literal);\n  exports.RegexLiteral = RegexLiteral = function (superClass1) {\n    extend1(RegexLiteral, superClass1);\n    function RegexLiteral() {\n      return RegexLiteral.__super__.constructor.apply(this, arguments);\n    }\n    return RegexLiteral;\n  }(Literal);\n  exports.PassthroughLiteral = PassthroughLiteral = function (superClass1) {\n    extend1(PassthroughLiteral, superClass1);\n    function PassthroughLiteral() {\n      return PassthroughLiteral.__super__.constructor.apply(this, arguments);\n    }\n    return PassthroughLiteral;\n  }(Literal);\n  exports.IdentifierLiteral = IdentifierLiteral = function (superClass1) {\n    extend1(IdentifierLiteral, superClass1);\n    function IdentifierLiteral() {\n      return IdentifierLiteral.__super__.constructor.apply(this, arguments);\n    }\n    IdentifierLiteral.prototype.isAssignable = YES;\n    return IdentifierLiteral;\n  }(Literal);\n  exports.PropertyName = PropertyName = function (superClass1) {\n    extend1(PropertyName, superClass1);\n    function PropertyName() {\n      return PropertyName.__super__.constructor.apply(this, arguments);\n    }\n    PropertyName.prototype.isAssignable = YES;\n    return PropertyName;\n  }(Literal);\n  exports.StatementLiteral = StatementLiteral = function (superClass1) {\n    extend1(StatementLiteral, superClass1);\n    function StatementLiteral() {\n      return StatementLiteral.__super__.constructor.apply(this, arguments);\n    }\n    StatementLiteral.prototype.isStatement = YES;\n    StatementLiteral.prototype.makeReturn = THIS;\n    StatementLiteral.prototype.jumps = function (o) {\n      if (this.value === 'break' && !((o != null ? o.loop : void 0) || (o != null ? o.block : void 0))) {\n        return this;\n      }\n      if (this.value === 'continue' && !(o != null ? o.loop : void 0)) {\n        return this;\n      }\n    };\n    StatementLiteral.prototype.compileNode = function (o) {\n      return [this.makeCode(\"\" + this.tab + this.value + \";\")];\n    };\n    return StatementLiteral;\n  }(Literal);\n  exports.ThisLiteral = ThisLiteral = function (superClass1) {\n    extend1(ThisLiteral, superClass1);\n    function ThisLiteral() {\n      ThisLiteral.__super__.constructor.call(this, 'this');\n    }\n    ThisLiteral.prototype.compileNode = function (o) {\n      var code, ref3;\n      code = ((ref3 = o.scope.method) != null ? ref3.bound : void 0) ? o.scope.method.context : this.value;\n      return [this.makeCode(code)];\n    };\n    return ThisLiteral;\n  }(Literal);\n  exports.UndefinedLiteral = UndefinedLiteral = function (superClass1) {\n    extend1(UndefinedLiteral, superClass1);\n    function UndefinedLiteral() {\n      UndefinedLiteral.__super__.constructor.call(this, 'undefined');\n    }\n    UndefinedLiteral.prototype.compileNode = function (o) {\n      return [this.makeCode(o.level >= LEVEL_ACCESS ? '(void 0)' : 'void 0')];\n    };\n    return UndefinedLiteral;\n  }(Literal);\n  exports.NullLiteral = NullLiteral = function (superClass1) {\n    extend1(NullLiteral, superClass1);\n    function NullLiteral() {\n      NullLiteral.__super__.constructor.call(this, 'null');\n    }\n    return NullLiteral;\n  }(Literal);\n  exports.BooleanLiteral = BooleanLiteral = function (superClass1) {\n    extend1(BooleanLiteral, superClass1);\n    function BooleanLiteral() {\n      return BooleanLiteral.__super__.constructor.apply(this, arguments);\n    }\n    return BooleanLiteral;\n  }(Literal);\n  exports.Return = Return = function (superClass1) {\n    extend1(Return, superClass1);\n    function Return(expression) {\n      this.expression = expression;\n    }\n    Return.prototype.children = ['expression'];\n    Return.prototype.isStatement = YES;\n    Return.prototype.makeReturn = THIS;\n    Return.prototype.jumps = THIS;\n    Return.prototype.compileToFragments = function (o, level) {\n      var expr, ref3;\n      expr = (ref3 = this.expression) != null ? ref3.makeReturn() : void 0;\n      if (expr && !(expr instanceof Return)) {\n        return expr.compileToFragments(o, level);\n      } else {\n        return Return.__super__.compileToFragments.call(this, o, level);\n      }\n    };\n    Return.prototype.compileNode = function (o) {\n      var answer;\n      answer = [];\n      answer.push(this.makeCode(this.tab + (\"return\" + (this.expression ? \" \" : \"\"))));\n      if (this.expression) {\n        answer = answer.concat(this.expression.compileToFragments(o, LEVEL_PAREN));\n      }\n      answer.push(this.makeCode(\";\"));\n      return answer;\n    };\n    return Return;\n  }(Base);\n  exports.YieldReturn = YieldReturn = function (superClass1) {\n    extend1(YieldReturn, superClass1);\n    function YieldReturn() {\n      return YieldReturn.__super__.constructor.apply(this, arguments);\n    }\n    YieldReturn.prototype.compileNode = function (o) {\n      if (o.scope.parent == null) {\n        this.error('yield can only occur inside functions');\n      }\n      return YieldReturn.__super__.compileNode.apply(this, arguments);\n    };\n    return YieldReturn;\n  }(Return);\n  exports.Value = Value = function (superClass1) {\n    extend1(Value, superClass1);\n    function Value(base, props, tag) {\n      if (!props && base instanceof Value) {\n        return base;\n      }\n      this.base = base;\n      this.properties = props || [];\n      if (tag) {\n        this[tag] = true;\n      }\n      return this;\n    }\n    Value.prototype.children = ['base', 'properties'];\n    Value.prototype.add = function (props) {\n      this.properties = this.properties.concat(props);\n      return this;\n    };\n    Value.prototype.hasProperties = function () {\n      return !!this.properties.length;\n    };\n    Value.prototype.bareLiteral = function (type) {\n      return !this.properties.length && this.base instanceof type;\n    };\n    Value.prototype.isArray = function () {\n      return this.bareLiteral(Arr);\n    };\n    Value.prototype.isRange = function () {\n      return this.bareLiteral(Range);\n    };\n    Value.prototype.isComplex = function () {\n      return this.hasProperties() || this.base.isComplex();\n    };\n    Value.prototype.isAssignable = function () {\n      return this.hasProperties() || this.base.isAssignable();\n    };\n    Value.prototype.isNumber = function () {\n      return this.bareLiteral(NumberLiteral);\n    };\n    Value.prototype.isString = function () {\n      return this.bareLiteral(StringLiteral);\n    };\n    Value.prototype.isRegex = function () {\n      return this.bareLiteral(RegexLiteral);\n    };\n    Value.prototype.isUndefined = function () {\n      return this.bareLiteral(UndefinedLiteral);\n    };\n    Value.prototype.isNull = function () {\n      return this.bareLiteral(NullLiteral);\n    };\n    Value.prototype.isBoolean = function () {\n      return this.bareLiteral(BooleanLiteral);\n    };\n    Value.prototype.isAtomic = function () {\n      var j, len1, node, ref3;\n      ref3 = this.properties.concat(this.base);\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        node = ref3[j];\n        if (node.soak || node instanceof Call) {\n          return false;\n        }\n      }\n      return true;\n    };\n    Value.prototype.isNotCallable = function () {\n      return this.isNumber() || this.isString() || this.isRegex() || this.isArray() || this.isRange() || this.isSplice() || this.isObject() || this.isUndefined() || this.isNull() || this.isBoolean();\n    };\n    Value.prototype.isStatement = function (o) {\n      return !this.properties.length && this.base.isStatement(o);\n    };\n    Value.prototype.assigns = function (name) {\n      return !this.properties.length && this.base.assigns(name);\n    };\n    Value.prototype.jumps = function (o) {\n      return !this.properties.length && this.base.jumps(o);\n    };\n    Value.prototype.isObject = function (onlyGenerated) {\n      if (this.properties.length) {\n        return false;\n      }\n      return this.base instanceof Obj && (!onlyGenerated || this.base.generated);\n    };\n    Value.prototype.isSplice = function () {\n      var lastProp, ref3;\n      ref3 = this.properties, lastProp = ref3[ref3.length - 1];\n      return lastProp instanceof Slice;\n    };\n    Value.prototype.looksStatic = function (className) {\n      var ref3;\n      return this.base.value === className && this.properties.length === 1 && ((ref3 = this.properties[0].name) != null ? ref3.value : void 0) !== 'prototype';\n    };\n    Value.prototype.unwrap = function () {\n      if (this.properties.length) {\n        return this;\n      } else {\n        return this.base;\n      }\n    };\n    Value.prototype.cacheReference = function (o) {\n      var base, bref, name, nref, ref3;\n      ref3 = this.properties, name = ref3[ref3.length - 1];\n      if (this.properties.length < 2 && !this.base.isComplex() && !(name != null ? name.isComplex() : void 0)) {\n        return [this, this];\n      }\n      base = new Value(this.base, this.properties.slice(0, -1));\n      if (base.isComplex()) {\n        bref = new IdentifierLiteral(o.scope.freeVariable('base'));\n        base = new Value(new Parens(new Assign(bref, base)));\n      }\n      if (!name) {\n        return [base, bref];\n      }\n      if (name.isComplex()) {\n        nref = new IdentifierLiteral(o.scope.freeVariable('name'));\n        name = new Index(new Assign(nref, name.index));\n        nref = new Index(nref);\n      }\n      return [base.add(name), new Value(bref || base.base, [nref || name])];\n    };\n    Value.prototype.compileNode = function (o) {\n      var fragments, j, len1, prop, props;\n      this.base.front = this.front;\n      props = this.properties;\n      fragments = this.base.compileToFragments(o, props.length ? LEVEL_ACCESS : null);\n      if (props.length && SIMPLENUM.test(fragmentsToText(fragments))) {\n        fragments.push(this.makeCode('.'));\n      }\n      for (j = 0, len1 = props.length; j < len1; j++) {\n        prop = props[j];\n        fragments.push.apply(fragments, prop.compileToFragments(o));\n      }\n      return fragments;\n    };\n    Value.prototype.unfoldSoak = function (o) {\n      return this.unfoldedSoak != null ? this.unfoldedSoak : this.unfoldedSoak = function (_this) {\n        return function () {\n          var fst, i, ifn, j, len1, prop, ref, ref3, ref4, snd;\n          if (ifn = _this.base.unfoldSoak(o)) {\n            (ref3 = ifn.body.properties).push.apply(ref3, _this.properties);\n            return ifn;\n          }\n          ref4 = _this.properties;\n          for (i = j = 0, len1 = ref4.length; j < len1; i = ++j) {\n            prop = ref4[i];\n            if (!prop.soak) {\n              continue;\n            }\n            prop.soak = false;\n            fst = new Value(_this.base, _this.properties.slice(0, i));\n            snd = new Value(_this.base, _this.properties.slice(i));\n            if (fst.isComplex()) {\n              ref = new IdentifierLiteral(o.scope.freeVariable('ref'));\n              fst = new Parens(new Assign(ref, fst));\n              snd.base = ref;\n            }\n            return new If(new Existence(fst), snd, {\n              soak: true\n            });\n          }\n          return false;\n        };\n      }(this)();\n    };\n    return Value;\n  }(Base);\n  exports.Comment = Comment = function (superClass1) {\n    extend1(Comment, superClass1);\n    function Comment(comment1) {\n      this.comment = comment1;\n    }\n    Comment.prototype.isStatement = YES;\n    Comment.prototype.makeReturn = THIS;\n    Comment.prototype.compileNode = function (o, level) {\n      var code, comment;\n      comment = this.comment.replace(/^(\\s*)#(?=\\s)/gm, \"$1 *\");\n      code = \"/*\" + multident(comment, this.tab) + (indexOf.call(comment, '\\n') >= 0 ? \"\\n\" + this.tab : '') + \" */\";\n      if ((level || o.level) === LEVEL_TOP) {\n        code = o.indent + code;\n      }\n      return [this.makeCode(\"\\n\"), this.makeCode(code)];\n    };\n    return Comment;\n  }(Base);\n  exports.Call = Call = function (superClass1) {\n    extend1(Call, superClass1);\n    function Call(variable1, args1, soak1) {\n      this.variable = variable1;\n      this.args = args1 != null ? args1 : [];\n      this.soak = soak1;\n      this.isNew = false;\n      if (this.variable instanceof Value && this.variable.isNotCallable()) {\n        this.variable.error(\"literal is not a function\");\n      }\n    }\n    Call.prototype.children = ['variable', 'args'];\n    Call.prototype.updateLocationDataIfMissing = function (locationData) {\n      var base, ref3;\n      if (this.locationData && this.needsUpdatedStartLocation) {\n        this.locationData.first_line = locationData.first_line;\n        this.locationData.first_column = locationData.first_column;\n        base = ((ref3 = this.variable) != null ? ref3.base : void 0) || this.variable;\n        if (base.needsUpdatedStartLocation) {\n          this.variable.locationData.first_line = locationData.first_line;\n          this.variable.locationData.first_column = locationData.first_column;\n          base.updateLocationDataIfMissing(locationData);\n        }\n        delete this.needsUpdatedStartLocation;\n      }\n      return Call.__super__.updateLocationDataIfMissing.apply(this, arguments);\n    };\n    Call.prototype.newInstance = function () {\n      var base, ref3;\n      base = ((ref3 = this.variable) != null ? ref3.base : void 0) || this.variable;\n      if (base instanceof Call && !base.isNew) {\n        base.newInstance();\n      } else {\n        this.isNew = true;\n      }\n      this.needsUpdatedStartLocation = true;\n      return this;\n    };\n    Call.prototype.unfoldSoak = function (o) {\n      var call, ifn, j, left, len1, list, ref3, ref4, rite;\n      if (this.soak) {\n        if (this instanceof SuperCall) {\n          left = new Literal(this.superReference(o));\n          rite = new Value(left);\n        } else {\n          if (ifn = unfoldSoak(o, this, 'variable')) {\n            return ifn;\n          }\n          ref3 = new Value(this.variable).cacheReference(o), left = ref3[0], rite = ref3[1];\n        }\n        rite = new Call(rite, this.args);\n        rite.isNew = this.isNew;\n        left = new Literal(\"typeof \" + left.compile(o) + \" === \\\"function\\\"\");\n        return new If(left, new Value(rite), {\n          soak: true\n        });\n      }\n      call = this;\n      list = [];\n      while (true) {\n        if (call.variable instanceof Call) {\n          list.push(call);\n          call = call.variable;\n          continue;\n        }\n        if (!(call.variable instanceof Value)) {\n          break;\n        }\n        list.push(call);\n        if (!((call = call.variable.base) instanceof Call)) {\n          break;\n        }\n      }\n      ref4 = list.reverse();\n      for (j = 0, len1 = ref4.length; j < len1; j++) {\n        call = ref4[j];\n        if (ifn) {\n          if (call.variable instanceof Call) {\n            call.variable = ifn;\n          } else {\n            call.variable.base = ifn;\n          }\n        }\n        ifn = unfoldSoak(o, call, 'variable');\n      }\n      return ifn;\n    };\n    Call.prototype.compileNode = function (o) {\n      var arg, argIndex, compiledArgs, compiledArray, fragments, j, len1, preface, ref3, ref4;\n      if ((ref3 = this.variable) != null) {\n        ref3.front = this.front;\n      }\n      compiledArray = Splat.compileSplattedArray(o, this.args, true);\n      if (compiledArray.length) {\n        return this.compileSplat(o, compiledArray);\n      }\n      compiledArgs = [];\n      ref4 = this.args;\n      for (argIndex = j = 0, len1 = ref4.length; j < len1; argIndex = ++j) {\n        arg = ref4[argIndex];\n        if (argIndex) {\n          compiledArgs.push(this.makeCode(\", \"));\n        }\n        compiledArgs.push.apply(compiledArgs, arg.compileToFragments(o, LEVEL_LIST));\n      }\n      fragments = [];\n      if (this instanceof SuperCall) {\n        preface = this.superReference(o) + (\".call(\" + this.superThis(o));\n        if (compiledArgs.length) {\n          preface += \", \";\n        }\n        fragments.push(this.makeCode(preface));\n      } else {\n        if (this.isNew) {\n          fragments.push(this.makeCode('new '));\n        }\n        fragments.push.apply(fragments, this.variable.compileToFragments(o, LEVEL_ACCESS));\n        fragments.push(this.makeCode(\"(\"));\n      }\n      fragments.push.apply(fragments, compiledArgs);\n      fragments.push(this.makeCode(\")\"));\n      return fragments;\n    };\n    Call.prototype.compileSplat = function (o, splatArgs) {\n      var answer, base, fun, idt, name, ref;\n      if (this instanceof SuperCall) {\n        return [].concat(this.makeCode(this.superReference(o) + \".apply(\" + this.superThis(o) + \", \"), splatArgs, this.makeCode(\")\"));\n      }\n      if (this.isNew) {\n        idt = this.tab + TAB;\n        return [].concat(this.makeCode(\"(function(func, args, ctor) {\\n\" + idt + \"ctor.prototype = func.prototype;\\n\" + idt + \"var child = new ctor, result = func.apply(child, args);\\n\" + idt + \"return Object(result) === result ? result : child;\\n\" + this.tab + \"})(\"), this.variable.compileToFragments(o, LEVEL_LIST), this.makeCode(\", \"), splatArgs, this.makeCode(\", function(){})\"));\n      }\n      answer = [];\n      base = new Value(this.variable);\n      if ((name = base.properties.pop()) && base.isComplex()) {\n        ref = o.scope.freeVariable('ref');\n        answer = answer.concat(this.makeCode(\"(\" + ref + \" = \"), base.compileToFragments(o, LEVEL_LIST), this.makeCode(\")\"), name.compileToFragments(o));\n      } else {\n        fun = base.compileToFragments(o, LEVEL_ACCESS);\n        if (SIMPLENUM.test(fragmentsToText(fun))) {\n          fun = this.wrapInBraces(fun);\n        }\n        if (name) {\n          ref = fragmentsToText(fun);\n          fun.push.apply(fun, name.compileToFragments(o));\n        } else {\n          ref = 'null';\n        }\n        answer = answer.concat(fun);\n      }\n      return answer = answer.concat(this.makeCode(\".apply(\" + ref + \", \"), splatArgs, this.makeCode(\")\"));\n    };\n    return Call;\n  }(Base);\n  exports.SuperCall = SuperCall = function (superClass1) {\n    extend1(SuperCall, superClass1);\n    function SuperCall(args) {\n      SuperCall.__super__.constructor.call(this, null, args != null ? args : [new Splat(new IdentifierLiteral('arguments'))]);\n      this.isBare = args != null;\n    }\n    SuperCall.prototype.superReference = function (o) {\n      var accesses, base, bref, klass, method, name, nref, variable;\n      method = o.scope.namedMethod();\n      if (method != null ? method.klass : void 0) {\n        klass = method.klass, name = method.name, variable = method.variable;\n        if (klass.isComplex()) {\n          bref = new IdentifierLiteral(o.scope.parent.freeVariable('base'));\n          base = new Value(new Parens(new Assign(bref, klass)));\n          variable.base = base;\n          variable.properties.splice(0, klass.properties.length);\n        }\n        if (name.isComplex() || name instanceof Index && name.index.isAssignable()) {\n          nref = new IdentifierLiteral(o.scope.parent.freeVariable('name'));\n          name = new Index(new Assign(nref, name.index));\n          variable.properties.pop();\n          variable.properties.push(name);\n        }\n        accesses = [new Access(new PropertyName('__super__'))];\n        if (method[\"static\"]) {\n          accesses.push(new Access(new PropertyName('constructor')));\n        }\n        accesses.push(nref != null ? new Index(nref) : name);\n        return new Value(bref != null ? bref : klass, accesses).compile(o);\n      } else if (method != null ? method.ctor : void 0) {\n        return method.name + \".__super__.constructor\";\n      } else {\n        return this.error('cannot call super outside of an instance method.');\n      }\n    };\n    SuperCall.prototype.superThis = function (o) {\n      var method;\n      method = o.scope.method;\n      return method && !method.klass && method.context || \"this\";\n    };\n    return SuperCall;\n  }(Call);\n  exports.RegexWithInterpolations = RegexWithInterpolations = function (superClass1) {\n    extend1(RegexWithInterpolations, superClass1);\n    function RegexWithInterpolations(args) {\n      if (args == null) {\n        args = [];\n      }\n      RegexWithInterpolations.__super__.constructor.call(this, new Value(new IdentifierLiteral('RegExp')), args, false);\n    }\n    return RegexWithInterpolations;\n  }(Call);\n  exports.TaggedTemplateCall = TaggedTemplateCall = function (superClass1) {\n    extend1(TaggedTemplateCall, superClass1);\n    function TaggedTemplateCall(variable, arg, soak) {\n      if (arg instanceof StringLiteral) {\n        arg = new StringWithInterpolations(Block.wrap([new Value(arg)]));\n      }\n      TaggedTemplateCall.__super__.constructor.call(this, variable, [arg], soak);\n    }\n    TaggedTemplateCall.prototype.compileNode = function (o) {\n      o.inTaggedTemplateCall = true;\n      return this.variable.compileToFragments(o, LEVEL_ACCESS).concat(this.args[0].compileToFragments(o, LEVEL_LIST));\n    };\n    return TaggedTemplateCall;\n  }(Call);\n  exports.Extends = Extends = function (superClass1) {\n    extend1(Extends, superClass1);\n    function Extends(child1, parent1) {\n      this.child = child1;\n      this.parent = parent1;\n    }\n    Extends.prototype.children = ['child', 'parent'];\n    Extends.prototype.compileToFragments = function (o) {\n      return new Call(new Value(new Literal(utility('extend', o))), [this.child, this.parent]).compileToFragments(o);\n    };\n    return Extends;\n  }(Base);\n  exports.Access = Access = function (superClass1) {\n    extend1(Access, superClass1);\n    function Access(name1, tag) {\n      this.name = name1;\n      this.soak = tag === 'soak';\n    }\n    Access.prototype.children = ['name'];\n    Access.prototype.compileToFragments = function (o) {\n      var name, node, ref3;\n      name = this.name.compileToFragments(o);\n      node = this.name.unwrap();\n      if (node instanceof PropertyName) {\n        if (ref3 = node.value, indexOf.call(JS_FORBIDDEN, ref3) >= 0) {\n          return [this.makeCode('[\"')].concat(slice.call(name), [this.makeCode('\"]')]);\n        } else {\n          return [this.makeCode('.')].concat(slice.call(name));\n        }\n      } else {\n        return [this.makeCode('[')].concat(slice.call(name), [this.makeCode(']')]);\n      }\n    };\n    Access.prototype.isComplex = NO;\n    return Access;\n  }(Base);\n  exports.Index = Index = function (superClass1) {\n    extend1(Index, superClass1);\n    function Index(index1) {\n      this.index = index1;\n    }\n    Index.prototype.children = ['index'];\n    Index.prototype.compileToFragments = function (o) {\n      return [].concat(this.makeCode(\"[\"), this.index.compileToFragments(o, LEVEL_PAREN), this.makeCode(\"]\"));\n    };\n    Index.prototype.isComplex = function () {\n      return this.index.isComplex();\n    };\n    return Index;\n  }(Base);\n  exports.Range = Range = function (superClass1) {\n    extend1(Range, superClass1);\n    Range.prototype.children = ['from', 'to'];\n    function Range(from1, to1, tag) {\n      this.from = from1;\n      this.to = to1;\n      this.exclusive = tag === 'exclusive';\n      this.equals = this.exclusive ? '' : '=';\n    }\n    Range.prototype.compileVariables = function (o) {\n      var isComplex, ref3, ref4, ref5, step;\n      o = merge(o, {\n        top: true\n      });\n      isComplex = del(o, 'isComplex');\n      ref3 = this.cacheToCodeFragments(this.from.cache(o, LEVEL_LIST, isComplex)), this.fromC = ref3[0], this.fromVar = ref3[1];\n      ref4 = this.cacheToCodeFragments(this.to.cache(o, LEVEL_LIST, isComplex)), this.toC = ref4[0], this.toVar = ref4[1];\n      if (step = del(o, 'step')) {\n        ref5 = this.cacheToCodeFragments(step.cache(o, LEVEL_LIST, isComplex)), this.step = ref5[0], this.stepVar = ref5[1];\n      }\n      this.fromNum = this.from.isNumber() ? Number(this.fromVar) : null;\n      this.toNum = this.to.isNumber() ? Number(this.toVar) : null;\n      return this.stepNum = (step != null ? step.isNumber() : void 0) ? Number(this.stepVar) : null;\n    };\n    Range.prototype.compileNode = function (o) {\n      var cond, condPart, from, gt, idx, idxName, known, lt, namedIndex, ref3, ref4, stepPart, to, varPart;\n      if (!this.fromVar) {\n        this.compileVariables(o);\n      }\n      if (!o.index) {\n        return this.compileArray(o);\n      }\n      known = this.fromNum != null && this.toNum != null;\n      idx = del(o, 'index');\n      idxName = del(o, 'name');\n      namedIndex = idxName && idxName !== idx;\n      varPart = idx + \" = \" + this.fromC;\n      if (this.toC !== this.toVar) {\n        varPart += \", \" + this.toC;\n      }\n      if (this.step !== this.stepVar) {\n        varPart += \", \" + this.step;\n      }\n      ref3 = [idx + \" <\" + this.equals, idx + \" >\" + this.equals], lt = ref3[0], gt = ref3[1];\n      condPart = this.stepNum != null ? this.stepNum > 0 ? lt + \" \" + this.toVar : gt + \" \" + this.toVar : known ? ((ref4 = [this.fromNum, this.toNum], from = ref4[0], to = ref4[1], ref4), from <= to ? lt + \" \" + to : gt + \" \" + to) : (cond = this.stepVar ? this.stepVar + \" > 0\" : this.fromVar + \" <= \" + this.toVar, cond + \" ? \" + lt + \" \" + this.toVar + \" : \" + gt + \" \" + this.toVar);\n      stepPart = this.stepVar ? idx + \" += \" + this.stepVar : known ? namedIndex ? from <= to ? \"++\" + idx : \"--\" + idx : from <= to ? idx + \"++\" : idx + \"--\" : namedIndex ? cond + \" ? ++\" + idx + \" : --\" + idx : cond + \" ? \" + idx + \"++ : \" + idx + \"--\";\n      if (namedIndex) {\n        varPart = idxName + \" = \" + varPart;\n      }\n      if (namedIndex) {\n        stepPart = idxName + \" = \" + stepPart;\n      }\n      return [this.makeCode(varPart + \"; \" + condPart + \"; \" + stepPart)];\n    };\n    Range.prototype.compileArray = function (o) {\n      var args, body, cond, hasArgs, i, idt, j, known, post, pre, range, ref3, ref4, result, results, vars;\n      known = this.fromNum != null && this.toNum != null;\n      if (known && Math.abs(this.fromNum - this.toNum) <= 20) {\n        range = function () {\n          results = [];\n          for (var j = ref3 = this.fromNum, ref4 = this.toNum; ref3 <= ref4 ? j <= ref4 : j >= ref4; ref3 <= ref4 ? j++ : j--) {\n            results.push(j);\n          }\n          return results;\n        }.apply(this);\n        if (this.exclusive) {\n          range.pop();\n        }\n        return [this.makeCode(\"[\" + range.join(', ') + \"]\")];\n      }\n      idt = this.tab + TAB;\n      i = o.scope.freeVariable('i', {\n        single: true\n      });\n      result = o.scope.freeVariable('results');\n      pre = \"\\n\" + idt + result + \" = [];\";\n      if (known) {\n        o.index = i;\n        body = fragmentsToText(this.compileNode(o));\n      } else {\n        vars = i + \" = \" + this.fromC + (this.toC !== this.toVar ? \", \" + this.toC : '');\n        cond = this.fromVar + \" <= \" + this.toVar;\n        body = \"var \" + vars + \"; \" + cond + \" ? \" + i + \" <\" + this.equals + \" \" + this.toVar + \" : \" + i + \" >\" + this.equals + \" \" + this.toVar + \"; \" + cond + \" ? \" + i + \"++ : \" + i + \"--\";\n      }\n      post = \"{ \" + result + \".push(\" + i + \"); }\\n\" + idt + \"return \" + result + \";\\n\" + o.indent;\n      hasArgs = function (node) {\n        return node != null ? node.contains(isLiteralArguments) : void 0;\n      };\n      if (hasArgs(this.from) || hasArgs(this.to)) {\n        args = ', arguments';\n      }\n      return [this.makeCode(\"(function() {\" + pre + \"\\n\" + idt + \"for (\" + body + \")\" + post + \"}).apply(this\" + (args != null ? args : '') + \")\")];\n    };\n    return Range;\n  }(Base);\n  exports.Slice = Slice = function (superClass1) {\n    extend1(Slice, superClass1);\n    Slice.prototype.children = ['range'];\n    function Slice(range1) {\n      this.range = range1;\n      Slice.__super__.constructor.call(this);\n    }\n    Slice.prototype.compileNode = function (o) {\n      var compiled, compiledText, from, fromCompiled, ref3, to, toStr;\n      ref3 = this.range, to = ref3.to, from = ref3.from;\n      fromCompiled = from && from.compileToFragments(o, LEVEL_PAREN) || [this.makeCode('0')];\n      if (to) {\n        compiled = to.compileToFragments(o, LEVEL_PAREN);\n        compiledText = fragmentsToText(compiled);\n        if (!(!this.range.exclusive && +compiledText === -1)) {\n          toStr = ', ' + (this.range.exclusive ? compiledText : to.isNumber() ? \"\" + (+compiledText + 1) : (compiled = to.compileToFragments(o, LEVEL_ACCESS), \"+\" + fragmentsToText(compiled) + \" + 1 || 9e9\"));\n        }\n      }\n      return [this.makeCode(\".slice(\" + fragmentsToText(fromCompiled) + (toStr || '') + \")\")];\n    };\n    return Slice;\n  }(Base);\n  exports.Obj = Obj = function (superClass1) {\n    extend1(Obj, superClass1);\n    function Obj(props, generated) {\n      this.generated = generated != null ? generated : false;\n      this.objects = this.properties = props || [];\n    }\n    Obj.prototype.children = ['properties'];\n    Obj.prototype.compileNode = function (o) {\n      var answer, dynamicIndex, hasDynamic, i, idt, indent, j, join, k, key, l, lastNoncom, len1, len2, len3, node, oref, prop, props, ref3, value;\n      props = this.properties;\n      if (this.generated) {\n        for (j = 0, len1 = props.length; j < len1; j++) {\n          node = props[j];\n          if (node instanceof Value) {\n            node.error('cannot have an implicit value in an implicit object');\n          }\n        }\n      }\n      for (dynamicIndex = k = 0, len2 = props.length; k < len2; dynamicIndex = ++k) {\n        prop = props[dynamicIndex];\n        if ((prop.variable || prop).base instanceof Parens) {\n          break;\n        }\n      }\n      hasDynamic = dynamicIndex < props.length;\n      idt = o.indent += TAB;\n      lastNoncom = this.lastNonComment(this.properties);\n      answer = [];\n      if (hasDynamic) {\n        oref = o.scope.freeVariable('obj');\n        answer.push(this.makeCode(\"(\\n\" + idt + oref + \" = \"));\n      }\n      answer.push(this.makeCode(\"{\" + (props.length === 0 || dynamicIndex === 0 ? '}' : '\\n')));\n      for (i = l = 0, len3 = props.length; l < len3; i = ++l) {\n        prop = props[i];\n        if (i === dynamicIndex) {\n          if (i !== 0) {\n            answer.push(this.makeCode(\"\\n\" + idt + \"}\"));\n          }\n          answer.push(this.makeCode(',\\n'));\n        }\n        join = i === props.length - 1 || i === dynamicIndex - 1 ? '' : prop === lastNoncom || prop instanceof Comment ? '\\n' : ',\\n';\n        indent = prop instanceof Comment ? '' : idt;\n        if (hasDynamic && i < dynamicIndex) {\n          indent += TAB;\n        }\n        if (prop instanceof Assign) {\n          if (prop.context !== 'object') {\n            prop.operatorToken.error(\"unexpected \" + prop.operatorToken.value);\n          }\n          if (prop.variable instanceof Value && prop.variable.hasProperties()) {\n            prop.variable.error('invalid object key');\n          }\n        }\n        if (prop instanceof Value && prop[\"this\"]) {\n          prop = new Assign(prop.properties[0].name, prop, 'object');\n        }\n        if (!(prop instanceof Comment)) {\n          if (i < dynamicIndex) {\n            if (!(prop instanceof Assign)) {\n              prop = new Assign(prop, prop, 'object');\n            }\n          } else {\n            if (prop instanceof Assign) {\n              key = prop.variable;\n              value = prop.value;\n            } else {\n              ref3 = prop.base.cache(o), key = ref3[0], value = ref3[1];\n              if (key instanceof IdentifierLiteral) {\n                key = new PropertyName(key.value);\n              }\n            }\n            prop = new Assign(new Value(new IdentifierLiteral(oref), [new Access(key)]), value);\n          }\n        }\n        if (indent) {\n          answer.push(this.makeCode(indent));\n        }\n        answer.push.apply(answer, prop.compileToFragments(o, LEVEL_TOP));\n        if (join) {\n          answer.push(this.makeCode(join));\n        }\n      }\n      if (hasDynamic) {\n        answer.push(this.makeCode(\",\\n\" + idt + oref + \"\\n\" + this.tab + \")\"));\n      } else {\n        if (props.length !== 0) {\n          answer.push(this.makeCode(\"\\n\" + this.tab + \"}\"));\n        }\n      }\n      if (this.front && !hasDynamic) {\n        return this.wrapInBraces(answer);\n      } else {\n        return answer;\n      }\n    };\n    Obj.prototype.assigns = function (name) {\n      var j, len1, prop, ref3;\n      ref3 = this.properties;\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        prop = ref3[j];\n        if (prop.assigns(name)) {\n          return true;\n        }\n      }\n      return false;\n    };\n    return Obj;\n  }(Base);\n  exports.Arr = Arr = function (superClass1) {\n    extend1(Arr, superClass1);\n    function Arr(objs) {\n      this.objects = objs || [];\n    }\n    Arr.prototype.children = ['objects'];\n    Arr.prototype.compileNode = function (o) {\n      var answer, compiledObjs, fragments, index, j, len1, obj;\n      if (!this.objects.length) {\n        return [this.makeCode('[]')];\n      }\n      o.indent += TAB;\n      answer = Splat.compileSplattedArray(o, this.objects);\n      if (answer.length) {\n        return answer;\n      }\n      answer = [];\n      compiledObjs = function () {\n        var j, len1, ref3, results;\n        ref3 = this.objects;\n        results = [];\n        for (j = 0, len1 = ref3.length; j < len1; j++) {\n          obj = ref3[j];\n          results.push(obj.compileToFragments(o, LEVEL_LIST));\n        }\n        return results;\n      }.call(this);\n      for (index = j = 0, len1 = compiledObjs.length; j < len1; index = ++j) {\n        fragments = compiledObjs[index];\n        if (index) {\n          answer.push(this.makeCode(\", \"));\n        }\n        answer.push.apply(answer, fragments);\n      }\n      if (fragmentsToText(answer).indexOf('\\n') >= 0) {\n        answer.unshift(this.makeCode(\"[\\n\" + o.indent));\n        answer.push(this.makeCode(\"\\n\" + this.tab + \"]\"));\n      } else {\n        answer.unshift(this.makeCode(\"[\"));\n        answer.push(this.makeCode(\"]\"));\n      }\n      return answer;\n    };\n    Arr.prototype.assigns = function (name) {\n      var j, len1, obj, ref3;\n      ref3 = this.objects;\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        obj = ref3[j];\n        if (obj.assigns(name)) {\n          return true;\n        }\n      }\n      return false;\n    };\n    return Arr;\n  }(Base);\n  exports.Class = Class = function (superClass1) {\n    extend1(Class, superClass1);\n    function Class(variable1, parent1, body1) {\n      this.variable = variable1;\n      this.parent = parent1;\n      this.body = body1 != null ? body1 : new Block();\n      this.boundFuncs = [];\n      this.body.classBody = true;\n    }\n    Class.prototype.children = ['variable', 'parent', 'body'];\n    Class.prototype.defaultClassVariableName = '_Class';\n    Class.prototype.determineName = function () {\n      var message, name, node, ref3, tail;\n      if (!this.variable) {\n        return this.defaultClassVariableName;\n      }\n      ref3 = this.variable.properties, tail = ref3[ref3.length - 1];\n      node = tail ? tail instanceof Access && tail.name : this.variable.base;\n      if (!(node instanceof IdentifierLiteral || node instanceof PropertyName)) {\n        return this.defaultClassVariableName;\n      }\n      name = node.value;\n      if (!tail) {\n        message = isUnassignable(name);\n        if (message) {\n          this.variable.error(message);\n        }\n      }\n      if (indexOf.call(JS_FORBIDDEN, name) >= 0) {\n        return \"_\" + name;\n      } else {\n        return name;\n      }\n    };\n    Class.prototype.setContext = function (name) {\n      return this.body.traverseChildren(false, function (node) {\n        if (node.classBody) {\n          return false;\n        }\n        if (node instanceof ThisLiteral) {\n          return node.value = name;\n        } else if (node instanceof Code) {\n          if (node.bound) {\n            return node.context = name;\n          }\n        }\n      });\n    };\n    Class.prototype.addBoundFunctions = function (o) {\n      var bvar, j, len1, lhs, ref3;\n      ref3 = this.boundFuncs;\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        bvar = ref3[j];\n        lhs = new Value(new ThisLiteral(), [new Access(bvar)]).compile(o);\n        this.ctor.body.unshift(new Literal(lhs + \" = \" + utility('bind', o) + \"(\" + lhs + \", this)\"));\n      }\n    };\n    Class.prototype.addProperties = function (node, name, o) {\n      var acc, assign, base, exprs, func, props;\n      props = node.base.properties.slice(0);\n      exprs = function () {\n        var results;\n        results = [];\n        while (assign = props.shift()) {\n          if (assign instanceof Assign) {\n            base = assign.variable.base;\n            delete assign.context;\n            func = assign.value;\n            if (base.value === 'constructor') {\n              if (this.ctor) {\n                assign.error('cannot define more than one constructor in a class');\n              }\n              if (func.bound) {\n                assign.error('cannot define a constructor as a bound function');\n              }\n              if (func instanceof Code) {\n                assign = this.ctor = func;\n              } else {\n                this.externalCtor = o.classScope.freeVariable('ctor');\n                assign = new Assign(new IdentifierLiteral(this.externalCtor), func);\n              }\n            } else {\n              if (assign.variable[\"this\"]) {\n                func[\"static\"] = true;\n              } else {\n                acc = base.isComplex() ? new Index(base) : new Access(base);\n                assign.variable = new Value(new IdentifierLiteral(name), [new Access(new PropertyName('prototype')), acc]);\n                if (func instanceof Code && func.bound) {\n                  this.boundFuncs.push(base);\n                  func.bound = false;\n                }\n              }\n            }\n          }\n          results.push(assign);\n        }\n        return results;\n      }.call(this);\n      return compact(exprs);\n    };\n    Class.prototype.walkBody = function (name, o) {\n      return this.traverseChildren(false, function (_this) {\n        return function (child) {\n          var cont, exps, i, j, len1, node, ref3;\n          cont = true;\n          if (child instanceof Class) {\n            return false;\n          }\n          if (child instanceof Block) {\n            ref3 = exps = child.expressions;\n            for (i = j = 0, len1 = ref3.length; j < len1; i = ++j) {\n              node = ref3[i];\n              if (node instanceof Assign && node.variable.looksStatic(name)) {\n                node.value[\"static\"] = true;\n              } else if (node instanceof Value && node.isObject(true)) {\n                cont = false;\n                exps[i] = _this.addProperties(node, name, o);\n              }\n            }\n            child.expressions = exps = flatten(exps);\n          }\n          return cont && !(child instanceof Class);\n        };\n      }(this));\n    };\n    Class.prototype.hoistDirectivePrologue = function () {\n      var expressions, index, node;\n      index = 0;\n      expressions = this.body.expressions;\n      while ((node = expressions[index]) && node instanceof Comment || node instanceof Value && node.isString()) {\n        ++index;\n      }\n      return this.directives = expressions.splice(0, index);\n    };\n    Class.prototype.ensureConstructor = function (name) {\n      if (!this.ctor) {\n        this.ctor = new Code();\n        if (this.externalCtor) {\n          this.ctor.body.push(new Literal(this.externalCtor + \".apply(this, arguments)\"));\n        } else if (this.parent) {\n          this.ctor.body.push(new Literal(name + \".__super__.constructor.apply(this, arguments)\"));\n        }\n        this.ctor.body.makeReturn();\n        this.body.expressions.unshift(this.ctor);\n      }\n      this.ctor.ctor = this.ctor.name = name;\n      this.ctor.klass = null;\n      return this.ctor.noReturn = true;\n    };\n    Class.prototype.compileNode = function (o) {\n      var args, argumentsNode, func, jumpNode, klass, lname, name, ref3, superClass;\n      if (jumpNode = this.body.jumps()) {\n        jumpNode.error('Class bodies cannot contain pure statements');\n      }\n      if (argumentsNode = this.body.contains(isLiteralArguments)) {\n        argumentsNode.error(\"Class bodies shouldn't reference arguments\");\n      }\n      name = this.determineName();\n      lname = new IdentifierLiteral(name);\n      func = new Code([], Block.wrap([this.body]));\n      args = [];\n      o.classScope = func.makeScope(o.scope);\n      this.hoistDirectivePrologue();\n      this.setContext(name);\n      this.walkBody(name, o);\n      this.ensureConstructor(name);\n      this.addBoundFunctions(o);\n      this.body.spaced = true;\n      this.body.expressions.push(lname);\n      if (this.parent) {\n        superClass = new IdentifierLiteral(o.classScope.freeVariable('superClass', {\n          reserve: false\n        }));\n        this.body.expressions.unshift(new Extends(lname, superClass));\n        func.params.push(new Param(superClass));\n        args.push(this.parent);\n      }\n      (ref3 = this.body.expressions).unshift.apply(ref3, this.directives);\n      klass = new Parens(new Call(func, args));\n      if (this.variable) {\n        klass = new Assign(this.variable, klass, null, {\n          moduleDeclaration: this.moduleDeclaration\n        });\n      }\n      return klass.compileToFragments(o);\n    };\n    return Class;\n  }(Base);\n  exports.ModuleDeclaration = ModuleDeclaration = function (superClass1) {\n    extend1(ModuleDeclaration, superClass1);\n    function ModuleDeclaration(clause, source1) {\n      this.clause = clause;\n      this.source = source1;\n      this.checkSource();\n    }\n    ModuleDeclaration.prototype.children = ['clause', 'source'];\n    ModuleDeclaration.prototype.isStatement = YES;\n    ModuleDeclaration.prototype.jumps = THIS;\n    ModuleDeclaration.prototype.makeReturn = THIS;\n    ModuleDeclaration.prototype.checkSource = function () {\n      if (this.source != null && this.source instanceof StringWithInterpolations) {\n        return this.source.error('the name of the module to be imported from must be an uninterpolated string');\n      }\n    };\n    ModuleDeclaration.prototype.checkScope = function (o, moduleDeclarationType) {\n      if (o.indent.length !== 0) {\n        return this.error(moduleDeclarationType + \" statements must be at top-level scope\");\n      }\n    };\n    return ModuleDeclaration;\n  }(Base);\n  exports.ImportDeclaration = ImportDeclaration = function (superClass1) {\n    extend1(ImportDeclaration, superClass1);\n    function ImportDeclaration() {\n      return ImportDeclaration.__super__.constructor.apply(this, arguments);\n    }\n    ImportDeclaration.prototype.compileNode = function (o) {\n      var code, ref3;\n      this.checkScope(o, 'import');\n      o.importedSymbols = [];\n      code = [];\n      code.push(this.makeCode(this.tab + \"import \"));\n      if (this.clause != null) {\n        code.push.apply(code, this.clause.compileNode(o));\n      }\n      if (((ref3 = this.source) != null ? ref3.value : void 0) != null) {\n        if (this.clause !== null) {\n          code.push(this.makeCode(' from '));\n        }\n        code.push(this.makeCode(this.source.value));\n      }\n      code.push(this.makeCode(';'));\n      return code;\n    };\n    return ImportDeclaration;\n  }(ModuleDeclaration);\n  exports.ImportClause = ImportClause = function (superClass1) {\n    extend1(ImportClause, superClass1);\n    function ImportClause(defaultBinding, namedImports) {\n      this.defaultBinding = defaultBinding;\n      this.namedImports = namedImports;\n    }\n    ImportClause.prototype.children = ['defaultBinding', 'namedImports'];\n    ImportClause.prototype.compileNode = function (o) {\n      var code;\n      code = [];\n      if (this.defaultBinding != null) {\n        code.push.apply(code, this.defaultBinding.compileNode(o));\n        if (this.namedImports != null) {\n          code.push(this.makeCode(', '));\n        }\n      }\n      if (this.namedImports != null) {\n        code.push.apply(code, this.namedImports.compileNode(o));\n      }\n      return code;\n    };\n    return ImportClause;\n  }(Base);\n  exports.ExportDeclaration = ExportDeclaration = function (superClass1) {\n    extend1(ExportDeclaration, superClass1);\n    function ExportDeclaration() {\n      return ExportDeclaration.__super__.constructor.apply(this, arguments);\n    }\n    ExportDeclaration.prototype.compileNode = function (o) {\n      var code, ref3;\n      this.checkScope(o, 'export');\n      code = [];\n      code.push(this.makeCode(this.tab + \"export \"));\n      if (this instanceof ExportDefaultDeclaration) {\n        code.push(this.makeCode('default '));\n      }\n      if (!(this instanceof ExportDefaultDeclaration) && (this.clause instanceof Assign || this.clause instanceof Class)) {\n        if (this.clause instanceof Class && !this.clause.variable) {\n          this.clause.error('anonymous classes cannot be exported');\n        }\n        code.push(this.makeCode('var '));\n        this.clause.moduleDeclaration = 'export';\n      }\n      if (this.clause.body != null && this.clause.body instanceof Block) {\n        code = code.concat(this.clause.compileToFragments(o, LEVEL_TOP));\n      } else {\n        code = code.concat(this.clause.compileNode(o));\n      }\n      if (((ref3 = this.source) != null ? ref3.value : void 0) != null) {\n        code.push(this.makeCode(\" from \" + this.source.value));\n      }\n      code.push(this.makeCode(';'));\n      return code;\n    };\n    return ExportDeclaration;\n  }(ModuleDeclaration);\n  exports.ExportNamedDeclaration = ExportNamedDeclaration = function (superClass1) {\n    extend1(ExportNamedDeclaration, superClass1);\n    function ExportNamedDeclaration() {\n      return ExportNamedDeclaration.__super__.constructor.apply(this, arguments);\n    }\n    return ExportNamedDeclaration;\n  }(ExportDeclaration);\n  exports.ExportDefaultDeclaration = ExportDefaultDeclaration = function (superClass1) {\n    extend1(ExportDefaultDeclaration, superClass1);\n    function ExportDefaultDeclaration() {\n      return ExportDefaultDeclaration.__super__.constructor.apply(this, arguments);\n    }\n    return ExportDefaultDeclaration;\n  }(ExportDeclaration);\n  exports.ExportAllDeclaration = ExportAllDeclaration = function (superClass1) {\n    extend1(ExportAllDeclaration, superClass1);\n    function ExportAllDeclaration() {\n      return ExportAllDeclaration.__super__.constructor.apply(this, arguments);\n    }\n    return ExportAllDeclaration;\n  }(ExportDeclaration);\n  exports.ModuleSpecifierList = ModuleSpecifierList = function (superClass1) {\n    extend1(ModuleSpecifierList, superClass1);\n    function ModuleSpecifierList(specifiers) {\n      this.specifiers = specifiers;\n    }\n    ModuleSpecifierList.prototype.children = ['specifiers'];\n    ModuleSpecifierList.prototype.compileNode = function (o) {\n      var code, compiledList, fragments, index, j, len1, specifier;\n      code = [];\n      o.indent += TAB;\n      compiledList = function () {\n        var j, len1, ref3, results;\n        ref3 = this.specifiers;\n        results = [];\n        for (j = 0, len1 = ref3.length; j < len1; j++) {\n          specifier = ref3[j];\n          results.push(specifier.compileToFragments(o, LEVEL_LIST));\n        }\n        return results;\n      }.call(this);\n      if (this.specifiers.length !== 0) {\n        code.push(this.makeCode(\"{\\n\" + o.indent));\n        for (index = j = 0, len1 = compiledList.length; j < len1; index = ++j) {\n          fragments = compiledList[index];\n          if (index) {\n            code.push(this.makeCode(\",\\n\" + o.indent));\n          }\n          code.push.apply(code, fragments);\n        }\n        code.push(this.makeCode(\"\\n}\"));\n      } else {\n        code.push(this.makeCode('{}'));\n      }\n      return code;\n    };\n    return ModuleSpecifierList;\n  }(Base);\n  exports.ImportSpecifierList = ImportSpecifierList = function (superClass1) {\n    extend1(ImportSpecifierList, superClass1);\n    function ImportSpecifierList() {\n      return ImportSpecifierList.__super__.constructor.apply(this, arguments);\n    }\n    return ImportSpecifierList;\n  }(ModuleSpecifierList);\n  exports.ExportSpecifierList = ExportSpecifierList = function (superClass1) {\n    extend1(ExportSpecifierList, superClass1);\n    function ExportSpecifierList() {\n      return ExportSpecifierList.__super__.constructor.apply(this, arguments);\n    }\n    return ExportSpecifierList;\n  }(ModuleSpecifierList);\n  exports.ModuleSpecifier = ModuleSpecifier = function (superClass1) {\n    extend1(ModuleSpecifier, superClass1);\n    function ModuleSpecifier(original, alias, moduleDeclarationType1) {\n      this.original = original;\n      this.alias = alias;\n      this.moduleDeclarationType = moduleDeclarationType1;\n      this.identifier = this.alias != null ? this.alias.value : this.original.value;\n    }\n    ModuleSpecifier.prototype.children = ['original', 'alias'];\n    ModuleSpecifier.prototype.compileNode = function (o) {\n      var code;\n      o.scope.find(this.identifier, this.moduleDeclarationType);\n      code = [];\n      code.push(this.makeCode(this.original.value));\n      if (this.alias != null) {\n        code.push(this.makeCode(\" as \" + this.alias.value));\n      }\n      return code;\n    };\n    return ModuleSpecifier;\n  }(Base);\n  exports.ImportSpecifier = ImportSpecifier = function (superClass1) {\n    extend1(ImportSpecifier, superClass1);\n    function ImportSpecifier(imported, local) {\n      ImportSpecifier.__super__.constructor.call(this, imported, local, 'import');\n    }\n    ImportSpecifier.prototype.compileNode = function (o) {\n      var ref3;\n      if ((ref3 = this.identifier, indexOf.call(o.importedSymbols, ref3) >= 0) || o.scope.check(this.identifier)) {\n        this.error(\"'\" + this.identifier + \"' has already been declared\");\n      } else {\n        o.importedSymbols.push(this.identifier);\n      }\n      return ImportSpecifier.__super__.compileNode.call(this, o);\n    };\n    return ImportSpecifier;\n  }(ModuleSpecifier);\n  exports.ImportDefaultSpecifier = ImportDefaultSpecifier = function (superClass1) {\n    extend1(ImportDefaultSpecifier, superClass1);\n    function ImportDefaultSpecifier() {\n      return ImportDefaultSpecifier.__super__.constructor.apply(this, arguments);\n    }\n    return ImportDefaultSpecifier;\n  }(ImportSpecifier);\n  exports.ImportNamespaceSpecifier = ImportNamespaceSpecifier = function (superClass1) {\n    extend1(ImportNamespaceSpecifier, superClass1);\n    function ImportNamespaceSpecifier() {\n      return ImportNamespaceSpecifier.__super__.constructor.apply(this, arguments);\n    }\n    return ImportNamespaceSpecifier;\n  }(ImportSpecifier);\n  exports.ExportSpecifier = ExportSpecifier = function (superClass1) {\n    extend1(ExportSpecifier, superClass1);\n    function ExportSpecifier(local, exported) {\n      ExportSpecifier.__super__.constructor.call(this, local, exported, 'export');\n    }\n    return ExportSpecifier;\n  }(ModuleSpecifier);\n  exports.Assign = Assign = function (superClass1) {\n    extend1(Assign, superClass1);\n    function Assign(variable1, value1, context, options) {\n      this.variable = variable1;\n      this.value = value1;\n      this.context = context;\n      if (options == null) {\n        options = {};\n      }\n      this.param = options.param, this.subpattern = options.subpattern, this.operatorToken = options.operatorToken, this.moduleDeclaration = options.moduleDeclaration;\n    }\n    Assign.prototype.children = ['variable', 'value'];\n    Assign.prototype.isStatement = function (o) {\n      return (o != null ? o.level : void 0) === LEVEL_TOP && this.context != null && (this.moduleDeclaration || indexOf.call(this.context, \"?\") >= 0);\n    };\n    Assign.prototype.checkAssignability = function (o, varBase) {\n      if (Object.prototype.hasOwnProperty.call(o.scope.positions, varBase.value) && o.scope.variables[o.scope.positions[varBase.value]].type === 'import') {\n        return varBase.error(\"'\" + varBase.value + \"' is read-only\");\n      }\n    };\n    Assign.prototype.assigns = function (name) {\n      return this[this.context === 'object' ? 'value' : 'variable'].assigns(name);\n    };\n    Assign.prototype.unfoldSoak = function (o) {\n      return unfoldSoak(o, this, 'variable');\n    };\n    Assign.prototype.compileNode = function (o) {\n      var answer, compiledName, isValue, j, name, properties, prototype, ref3, ref4, ref5, ref6, ref7, ref8, val, varBase;\n      if (isValue = this.variable instanceof Value) {\n        if (this.variable.isArray() || this.variable.isObject()) {\n          return this.compilePatternMatch(o);\n        }\n        if (this.variable.isSplice()) {\n          return this.compileSplice(o);\n        }\n        if ((ref3 = this.context) === '||=' || ref3 === '&&=' || ref3 === '?=') {\n          return this.compileConditional(o);\n        }\n        if ((ref4 = this.context) === '**=' || ref4 === '//=' || ref4 === '%%=') {\n          return this.compileSpecialMath(o);\n        }\n      }\n      if (this.value instanceof Code) {\n        if (this.value[\"static\"]) {\n          this.value.klass = this.variable.base;\n          this.value.name = this.variable.properties[0];\n          this.value.variable = this.variable;\n        } else if (((ref5 = this.variable.properties) != null ? ref5.length : void 0) >= 2) {\n          ref6 = this.variable.properties, properties = 3 <= ref6.length ? slice.call(ref6, 0, j = ref6.length - 2) : (j = 0, []), prototype = ref6[j++], name = ref6[j++];\n          if (((ref7 = prototype.name) != null ? ref7.value : void 0) === 'prototype') {\n            this.value.klass = new Value(this.variable.base, properties);\n            this.value.name = name;\n            this.value.variable = this.variable;\n          }\n        }\n      }\n      if (!this.context) {\n        varBase = this.variable.unwrapAll();\n        if (!varBase.isAssignable()) {\n          this.variable.error(\"'\" + this.variable.compile(o) + \"' can't be assigned\");\n        }\n        if (!(typeof varBase.hasProperties === \"function\" ? varBase.hasProperties() : void 0)) {\n          if (this.moduleDeclaration) {\n            this.checkAssignability(o, varBase);\n            o.scope.add(varBase.value, this.moduleDeclaration);\n          } else if (this.param) {\n            o.scope.add(varBase.value, 'var');\n          } else {\n            this.checkAssignability(o, varBase);\n            o.scope.find(varBase.value);\n          }\n        }\n      }\n      val = this.value.compileToFragments(o, LEVEL_LIST);\n      if (isValue && this.variable.base instanceof Obj) {\n        this.variable.front = true;\n      }\n      compiledName = this.variable.compileToFragments(o, LEVEL_LIST);\n      if (this.context === 'object') {\n        if (ref8 = fragmentsToText(compiledName), indexOf.call(JS_FORBIDDEN, ref8) >= 0) {\n          compiledName.unshift(this.makeCode('\"'));\n          compiledName.push(this.makeCode('\"'));\n        }\n        return compiledName.concat(this.makeCode(\": \"), val);\n      }\n      answer = compiledName.concat(this.makeCode(\" \" + (this.context || '=') + \" \"), val);\n      if (o.level <= LEVEL_LIST) {\n        return answer;\n      } else {\n        return this.wrapInBraces(answer);\n      }\n    };\n    Assign.prototype.compilePatternMatch = function (o) {\n      var acc, assigns, code, defaultValue, expandedIdx, fragments, i, idx, isObject, ivar, j, len1, message, name, obj, objects, olen, ref, ref3, ref4, ref5, ref6, rest, top, val, value, vvar, vvarText;\n      top = o.level === LEVEL_TOP;\n      value = this.value;\n      objects = this.variable.base.objects;\n      if (!(olen = objects.length)) {\n        code = value.compileToFragments(o);\n        if (o.level >= LEVEL_OP) {\n          return this.wrapInBraces(code);\n        } else {\n          return code;\n        }\n      }\n      obj = objects[0];\n      if (olen === 1 && obj instanceof Expansion) {\n        obj.error('Destructuring assignment has no target');\n      }\n      isObject = this.variable.isObject();\n      if (top && olen === 1 && !(obj instanceof Splat)) {\n        defaultValue = null;\n        if (obj instanceof Assign && obj.context === 'object') {\n          ref3 = obj, (ref4 = ref3.variable, idx = ref4.base), obj = ref3.value;\n          if (obj instanceof Assign) {\n            defaultValue = obj.value;\n            obj = obj.variable;\n          }\n        } else {\n          if (obj instanceof Assign) {\n            defaultValue = obj.value;\n            obj = obj.variable;\n          }\n          idx = isObject ? obj[\"this\"] ? obj.properties[0].name : new PropertyName(obj.unwrap().value) : new NumberLiteral(0);\n        }\n        acc = idx.unwrap() instanceof PropertyName;\n        value = new Value(value);\n        value.properties.push(new (acc ? Access : Index)(idx));\n        message = isUnassignable(obj.unwrap().value);\n        if (message) {\n          obj.error(message);\n        }\n        if (defaultValue) {\n          value = new Op('?', value, defaultValue);\n        }\n        return new Assign(obj, value, null, {\n          param: this.param\n        }).compileToFragments(o, LEVEL_TOP);\n      }\n      vvar = value.compileToFragments(o, LEVEL_LIST);\n      vvarText = fragmentsToText(vvar);\n      assigns = [];\n      expandedIdx = false;\n      if (!(value.unwrap() instanceof IdentifierLiteral) || this.variable.assigns(vvarText)) {\n        assigns.push([this.makeCode((ref = o.scope.freeVariable('ref')) + \" = \")].concat(slice.call(vvar)));\n        vvar = [this.makeCode(ref)];\n        vvarText = ref;\n      }\n      for (i = j = 0, len1 = objects.length; j < len1; i = ++j) {\n        obj = objects[i];\n        idx = i;\n        if (!expandedIdx && obj instanceof Splat) {\n          name = obj.name.unwrap().value;\n          obj = obj.unwrap();\n          val = olen + \" <= \" + vvarText + \".length ? \" + utility('slice', o) + \".call(\" + vvarText + \", \" + i;\n          if (rest = olen - i - 1) {\n            ivar = o.scope.freeVariable('i', {\n              single: true\n            });\n            val += \", \" + ivar + \" = \" + vvarText + \".length - \" + rest + \") : (\" + ivar + \" = \" + i + \", [])\";\n          } else {\n            val += \") : []\";\n          }\n          val = new Literal(val);\n          expandedIdx = ivar + \"++\";\n        } else if (!expandedIdx && obj instanceof Expansion) {\n          if (rest = olen - i - 1) {\n            if (rest === 1) {\n              expandedIdx = vvarText + \".length - 1\";\n            } else {\n              ivar = o.scope.freeVariable('i', {\n                single: true\n              });\n              val = new Literal(ivar + \" = \" + vvarText + \".length - \" + rest);\n              expandedIdx = ivar + \"++\";\n              assigns.push(val.compileToFragments(o, LEVEL_LIST));\n            }\n          }\n          continue;\n        } else {\n          if (obj instanceof Splat || obj instanceof Expansion) {\n            obj.error(\"multiple splats/expansions are disallowed in an assignment\");\n          }\n          defaultValue = null;\n          if (obj instanceof Assign && obj.context === 'object') {\n            ref5 = obj, (ref6 = ref5.variable, idx = ref6.base), obj = ref5.value;\n            if (obj instanceof Assign) {\n              defaultValue = obj.value;\n              obj = obj.variable;\n            }\n          } else {\n            if (obj instanceof Assign) {\n              defaultValue = obj.value;\n              obj = obj.variable;\n            }\n            idx = isObject ? obj[\"this\"] ? obj.properties[0].name : new PropertyName(obj.unwrap().value) : new Literal(expandedIdx || idx);\n          }\n          name = obj.unwrap().value;\n          acc = idx.unwrap() instanceof PropertyName;\n          val = new Value(new Literal(vvarText), [new (acc ? Access : Index)(idx)]);\n          if (defaultValue) {\n            val = new Op('?', val, defaultValue);\n          }\n        }\n        if (name != null) {\n          message = isUnassignable(name);\n          if (message) {\n            obj.error(message);\n          }\n        }\n        assigns.push(new Assign(obj, val, null, {\n          param: this.param,\n          subpattern: true\n        }).compileToFragments(o, LEVEL_LIST));\n      }\n      if (!(top || this.subpattern)) {\n        assigns.push(vvar);\n      }\n      fragments = this.joinFragmentArrays(assigns, ', ');\n      if (o.level < LEVEL_LIST) {\n        return fragments;\n      } else {\n        return this.wrapInBraces(fragments);\n      }\n    };\n    Assign.prototype.compileConditional = function (o) {\n      var fragments, left, ref3, right;\n      ref3 = this.variable.cacheReference(o), left = ref3[0], right = ref3[1];\n      if (!left.properties.length && left.base instanceof Literal && !(left.base instanceof ThisLiteral) && !o.scope.check(left.base.value)) {\n        this.variable.error(\"the variable \\\"\" + left.base.value + \"\\\" can't be assigned with \" + this.context + \" because it has not been declared before\");\n      }\n      if (indexOf.call(this.context, \"?\") >= 0) {\n        o.isExistentialEquals = true;\n        return new If(new Existence(left), right, {\n          type: 'if'\n        }).addElse(new Assign(right, this.value, '=')).compileToFragments(o);\n      } else {\n        fragments = new Op(this.context.slice(0, -1), left, new Assign(right, this.value, '=')).compileToFragments(o);\n        if (o.level <= LEVEL_LIST) {\n          return fragments;\n        } else {\n          return this.wrapInBraces(fragments);\n        }\n      }\n    };\n    Assign.prototype.compileSpecialMath = function (o) {\n      var left, ref3, right;\n      ref3 = this.variable.cacheReference(o), left = ref3[0], right = ref3[1];\n      return new Assign(left, new Op(this.context.slice(0, -1), right, this.value)).compileToFragments(o);\n    };\n    Assign.prototype.compileSplice = function (o) {\n      var answer, exclusive, from, fromDecl, fromRef, name, ref3, ref4, ref5, to, valDef, valRef;\n      ref3 = this.variable.properties.pop().range, from = ref3.from, to = ref3.to, exclusive = ref3.exclusive;\n      name = this.variable.compile(o);\n      if (from) {\n        ref4 = this.cacheToCodeFragments(from.cache(o, LEVEL_OP)), fromDecl = ref4[0], fromRef = ref4[1];\n      } else {\n        fromDecl = fromRef = '0';\n      }\n      if (to) {\n        if ((from != null ? from.isNumber() : void 0) && to.isNumber()) {\n          to = to.compile(o) - fromRef;\n          if (!exclusive) {\n            to += 1;\n          }\n        } else {\n          to = to.compile(o, LEVEL_ACCESS) + ' - ' + fromRef;\n          if (!exclusive) {\n            to += ' + 1';\n          }\n        }\n      } else {\n        to = \"9e9\";\n      }\n      ref5 = this.value.cache(o, LEVEL_LIST), valDef = ref5[0], valRef = ref5[1];\n      answer = [].concat(this.makeCode(\"[].splice.apply(\" + name + \", [\" + fromDecl + \", \" + to + \"].concat(\"), valDef, this.makeCode(\")), \"), valRef);\n      if (o.level > LEVEL_TOP) {\n        return this.wrapInBraces(answer);\n      } else {\n        return answer;\n      }\n    };\n    return Assign;\n  }(Base);\n  exports.Code = Code = function (superClass1) {\n    extend1(Code, superClass1);\n    function Code(params, body, tag) {\n      this.params = params || [];\n      this.body = body || new Block();\n      this.bound = tag === 'boundfunc';\n      this.isGenerator = !!this.body.contains(function (node) {\n        return node instanceof Op && node.isYield() || node instanceof YieldReturn;\n      });\n    }\n    Code.prototype.children = ['params', 'body'];\n    Code.prototype.isStatement = function () {\n      return !!this.ctor;\n    };\n    Code.prototype.jumps = NO;\n    Code.prototype.makeScope = function (parentScope) {\n      return new Scope(parentScope, this.body, this);\n    };\n    Code.prototype.compileNode = function (o) {\n      var answer, boundfunc, code, exprs, i, j, k, l, len1, len2, len3, len4, len5, len6, lit, m, p, param, params, q, r, ref, ref3, ref4, ref5, ref6, ref7, ref8, splats, uniqs, val, wasEmpty, wrapper;\n      if (this.bound && ((ref3 = o.scope.method) != null ? ref3.bound : void 0)) {\n        this.context = o.scope.method.context;\n      }\n      if (this.bound && !this.context) {\n        this.context = '_this';\n        wrapper = new Code([new Param(new IdentifierLiteral(this.context))], new Block([this]));\n        boundfunc = new Call(wrapper, [new ThisLiteral()]);\n        boundfunc.updateLocationDataIfMissing(this.locationData);\n        return boundfunc.compileNode(o);\n      }\n      o.scope = del(o, 'classScope') || this.makeScope(o.scope);\n      o.scope.shared = del(o, 'sharedScope');\n      o.indent += TAB;\n      delete o.bare;\n      delete o.isExistentialEquals;\n      params = [];\n      exprs = [];\n      ref4 = this.params;\n      for (j = 0, len1 = ref4.length; j < len1; j++) {\n        param = ref4[j];\n        if (!(param instanceof Expansion)) {\n          o.scope.parameter(param.asReference(o));\n        }\n      }\n      ref5 = this.params;\n      for (k = 0, len2 = ref5.length; k < len2; k++) {\n        param = ref5[k];\n        if (!(param.splat || param instanceof Expansion)) {\n          continue;\n        }\n        ref6 = this.params;\n        for (l = 0, len3 = ref6.length; l < len3; l++) {\n          p = ref6[l];\n          if (!(p instanceof Expansion) && p.name.value) {\n            o.scope.add(p.name.value, 'var', true);\n          }\n        }\n        splats = new Assign(new Value(new Arr(function () {\n          var len4, m, ref7, results;\n          ref7 = this.params;\n          results = [];\n          for (m = 0, len4 = ref7.length; m < len4; m++) {\n            p = ref7[m];\n            results.push(p.asReference(o));\n          }\n          return results;\n        }.call(this))), new Value(new IdentifierLiteral('arguments')));\n        break;\n      }\n      ref7 = this.params;\n      for (m = 0, len4 = ref7.length; m < len4; m++) {\n        param = ref7[m];\n        if (param.isComplex()) {\n          val = ref = param.asReference(o);\n          if (param.value) {\n            val = new Op('?', ref, param.value);\n          }\n          exprs.push(new Assign(new Value(param.name), val, '=', {\n            param: true\n          }));\n        } else {\n          ref = param;\n          if (param.value) {\n            lit = new Literal(ref.name.value + ' == null');\n            val = new Assign(new Value(param.name), param.value, '=');\n            exprs.push(new If(lit, val));\n          }\n        }\n        if (!splats) {\n          params.push(ref);\n        }\n      }\n      wasEmpty = this.body.isEmpty();\n      if (splats) {\n        exprs.unshift(splats);\n      }\n      if (exprs.length) {\n        (ref8 = this.body.expressions).unshift.apply(ref8, exprs);\n      }\n      for (i = q = 0, len5 = params.length; q < len5; i = ++q) {\n        p = params[i];\n        params[i] = p.compileToFragments(o);\n        o.scope.parameter(fragmentsToText(params[i]));\n      }\n      uniqs = [];\n      this.eachParamName(function (name, node) {\n        if (indexOf.call(uniqs, name) >= 0) {\n          node.error(\"multiple parameters named \" + name);\n        }\n        return uniqs.push(name);\n      });\n      if (!(wasEmpty || this.noReturn)) {\n        this.body.makeReturn();\n      }\n      code = 'function';\n      if (this.isGenerator) {\n        code += '*';\n      }\n      if (this.ctor) {\n        code += ' ' + this.name;\n      }\n      code += '(';\n      answer = [this.makeCode(code)];\n      for (i = r = 0, len6 = params.length; r < len6; i = ++r) {\n        p = params[i];\n        if (i) {\n          answer.push(this.makeCode(\", \"));\n        }\n        answer.push.apply(answer, p);\n      }\n      answer.push(this.makeCode(') {'));\n      if (!this.body.isEmpty()) {\n        answer = answer.concat(this.makeCode(\"\\n\"), this.body.compileWithDeclarations(o), this.makeCode(\"\\n\" + this.tab));\n      }\n      answer.push(this.makeCode('}'));\n      if (this.ctor) {\n        return [this.makeCode(this.tab)].concat(slice.call(answer));\n      }\n      if (this.front || o.level >= LEVEL_ACCESS) {\n        return this.wrapInBraces(answer);\n      } else {\n        return answer;\n      }\n    };\n    Code.prototype.eachParamName = function (iterator) {\n      var j, len1, param, ref3, results;\n      ref3 = this.params;\n      results = [];\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        param = ref3[j];\n        results.push(param.eachName(iterator));\n      }\n      return results;\n    };\n    Code.prototype.traverseChildren = function (crossScope, func) {\n      if (crossScope) {\n        return Code.__super__.traverseChildren.call(this, crossScope, func);\n      }\n    };\n    return Code;\n  }(Base);\n  exports.Param = Param = function (superClass1) {\n    extend1(Param, superClass1);\n    function Param(name1, value1, splat) {\n      var message, token;\n      this.name = name1;\n      this.value = value1;\n      this.splat = splat;\n      message = isUnassignable(this.name.unwrapAll().value);\n      if (message) {\n        this.name.error(message);\n      }\n      if (this.name instanceof Obj && this.name.generated) {\n        token = this.name.objects[0].operatorToken;\n        token.error(\"unexpected \" + token.value);\n      }\n    }\n    Param.prototype.children = ['name', 'value'];\n    Param.prototype.compileToFragments = function (o) {\n      return this.name.compileToFragments(o, LEVEL_LIST);\n    };\n    Param.prototype.asReference = function (o) {\n      var name, node;\n      if (this.reference) {\n        return this.reference;\n      }\n      node = this.name;\n      if (node[\"this\"]) {\n        name = node.properties[0].name.value;\n        if (indexOf.call(JS_FORBIDDEN, name) >= 0) {\n          name = \"_\" + name;\n        }\n        node = new IdentifierLiteral(o.scope.freeVariable(name));\n      } else if (node.isComplex()) {\n        node = new IdentifierLiteral(o.scope.freeVariable('arg'));\n      }\n      node = new Value(node);\n      if (this.splat) {\n        node = new Splat(node);\n      }\n      node.updateLocationDataIfMissing(this.locationData);\n      return this.reference = node;\n    };\n    Param.prototype.isComplex = function () {\n      return this.name.isComplex();\n    };\n    Param.prototype.eachName = function (iterator, name) {\n      var atParam, j, len1, node, obj, ref3, ref4;\n      if (name == null) {\n        name = this.name;\n      }\n      atParam = function (obj) {\n        return iterator(\"@\" + obj.properties[0].name.value, obj);\n      };\n      if (name instanceof Literal) {\n        return iterator(name.value, name);\n      }\n      if (name instanceof Value) {\n        return atParam(name);\n      }\n      ref4 = (ref3 = name.objects) != null ? ref3 : [];\n      for (j = 0, len1 = ref4.length; j < len1; j++) {\n        obj = ref4[j];\n        if (obj instanceof Assign && obj.context == null) {\n          obj = obj.variable;\n        }\n        if (obj instanceof Assign) {\n          if (obj.value instanceof Assign) {\n            obj = obj.value;\n          }\n          this.eachName(iterator, obj.value.unwrap());\n        } else if (obj instanceof Splat) {\n          node = obj.name.unwrap();\n          iterator(node.value, node);\n        } else if (obj instanceof Value) {\n          if (obj.isArray() || obj.isObject()) {\n            this.eachName(iterator, obj.base);\n          } else if (obj[\"this\"]) {\n            atParam(obj);\n          } else {\n            iterator(obj.base.value, obj.base);\n          }\n        } else if (!(obj instanceof Expansion)) {\n          obj.error(\"illegal parameter \" + obj.compile());\n        }\n      }\n    };\n    return Param;\n  }(Base);\n  exports.Splat = Splat = function (superClass1) {\n    extend1(Splat, superClass1);\n    Splat.prototype.children = ['name'];\n    Splat.prototype.isAssignable = YES;\n    function Splat(name) {\n      this.name = name.compile ? name : new Literal(name);\n    }\n    Splat.prototype.assigns = function (name) {\n      return this.name.assigns(name);\n    };\n    Splat.prototype.compileToFragments = function (o) {\n      return this.name.compileToFragments(o);\n    };\n    Splat.prototype.unwrap = function () {\n      return this.name;\n    };\n    Splat.compileSplattedArray = function (o, list, apply) {\n      var args, base, compiledNode, concatPart, fragments, i, index, j, last, len1, node;\n      index = -1;\n      while ((node = list[++index]) && !(node instanceof Splat)) {\n        continue;\n      }\n      if (index >= list.length) {\n        return [];\n      }\n      if (list.length === 1) {\n        node = list[0];\n        fragments = node.compileToFragments(o, LEVEL_LIST);\n        if (apply) {\n          return fragments;\n        }\n        return [].concat(node.makeCode(utility('slice', o) + \".call(\"), fragments, node.makeCode(\")\"));\n      }\n      args = list.slice(index);\n      for (i = j = 0, len1 = args.length; j < len1; i = ++j) {\n        node = args[i];\n        compiledNode = node.compileToFragments(o, LEVEL_LIST);\n        args[i] = node instanceof Splat ? [].concat(node.makeCode(utility('slice', o) + \".call(\"), compiledNode, node.makeCode(\")\")) : [].concat(node.makeCode(\"[\"), compiledNode, node.makeCode(\"]\"));\n      }\n      if (index === 0) {\n        node = list[0];\n        concatPart = node.joinFragmentArrays(args.slice(1), ', ');\n        return args[0].concat(node.makeCode(\".concat(\"), concatPart, node.makeCode(\")\"));\n      }\n      base = function () {\n        var k, len2, ref3, results;\n        ref3 = list.slice(0, index);\n        results = [];\n        for (k = 0, len2 = ref3.length; k < len2; k++) {\n          node = ref3[k];\n          results.push(node.compileToFragments(o, LEVEL_LIST));\n        }\n        return results;\n      }();\n      base = list[0].joinFragmentArrays(base, ', ');\n      concatPart = list[index].joinFragmentArrays(args, ', ');\n      last = list[list.length - 1];\n      return [].concat(list[0].makeCode(\"[\"), base, list[index].makeCode(\"].concat(\"), concatPart, last.makeCode(\")\"));\n    };\n    return Splat;\n  }(Base);\n  exports.Expansion = Expansion = function (superClass1) {\n    extend1(Expansion, superClass1);\n    function Expansion() {\n      return Expansion.__super__.constructor.apply(this, arguments);\n    }\n    Expansion.prototype.isComplex = NO;\n    Expansion.prototype.compileNode = function (o) {\n      return this.error('Expansion must be used inside a destructuring assignment or parameter list');\n    };\n    Expansion.prototype.asReference = function (o) {\n      return this;\n    };\n    Expansion.prototype.eachName = function (iterator) {};\n    return Expansion;\n  }(Base);\n  exports.While = While = function (superClass1) {\n    extend1(While, superClass1);\n    function While(condition, options) {\n      this.condition = (options != null ? options.invert : void 0) ? condition.invert() : condition;\n      this.guard = options != null ? options.guard : void 0;\n    }\n    While.prototype.children = ['condition', 'guard', 'body'];\n    While.prototype.isStatement = YES;\n    While.prototype.makeReturn = function (res) {\n      if (res) {\n        return While.__super__.makeReturn.apply(this, arguments);\n      } else {\n        this.returns = !this.jumps({\n          loop: true\n        });\n        return this;\n      }\n    };\n    While.prototype.addBody = function (body1) {\n      this.body = body1;\n      return this;\n    };\n    While.prototype.jumps = function () {\n      var expressions, j, jumpNode, len1, node;\n      expressions = this.body.expressions;\n      if (!expressions.length) {\n        return false;\n      }\n      for (j = 0, len1 = expressions.length; j < len1; j++) {\n        node = expressions[j];\n        if (jumpNode = node.jumps({\n          loop: true\n        })) {\n          return jumpNode;\n        }\n      }\n      return false;\n    };\n    While.prototype.compileNode = function (o) {\n      var answer, body, rvar, set;\n      o.indent += TAB;\n      set = '';\n      body = this.body;\n      if (body.isEmpty()) {\n        body = this.makeCode('');\n      } else {\n        if (this.returns) {\n          body.makeReturn(rvar = o.scope.freeVariable('results'));\n          set = \"\" + this.tab + rvar + \" = [];\\n\";\n        }\n        if (this.guard) {\n          if (body.expressions.length > 1) {\n            body.expressions.unshift(new If(new Parens(this.guard).invert(), new StatementLiteral(\"continue\")));\n          } else {\n            if (this.guard) {\n              body = Block.wrap([new If(this.guard, body)]);\n            }\n          }\n        }\n        body = [].concat(this.makeCode(\"\\n\"), body.compileToFragments(o, LEVEL_TOP), this.makeCode(\"\\n\" + this.tab));\n      }\n      answer = [].concat(this.makeCode(set + this.tab + \"while (\"), this.condition.compileToFragments(o, LEVEL_PAREN), this.makeCode(\") {\"), body, this.makeCode(\"}\"));\n      if (this.returns) {\n        answer.push(this.makeCode(\"\\n\" + this.tab + \"return \" + rvar + \";\"));\n      }\n      return answer;\n    };\n    return While;\n  }(Base);\n  exports.Op = Op = function (superClass1) {\n    var CONVERSIONS, INVERSIONS;\n    extend1(Op, superClass1);\n    function Op(op, first, second, flip) {\n      if (op === 'in') {\n        return new In(first, second);\n      }\n      if (op === 'do') {\n        return this.generateDo(first);\n      }\n      if (op === 'new') {\n        if (first instanceof Call && !first[\"do\"] && !first.isNew) {\n          return first.newInstance();\n        }\n        if (first instanceof Code && first.bound || first[\"do\"]) {\n          first = new Parens(first);\n        }\n      }\n      this.operator = CONVERSIONS[op] || op;\n      this.first = first;\n      this.second = second;\n      this.flip = !!flip;\n      return this;\n    }\n    CONVERSIONS = {\n      '==': '===',\n      '!=': '!==',\n      'of': 'in',\n      'yieldfrom': 'yield*'\n    };\n    INVERSIONS = {\n      '!==': '===',\n      '===': '!=='\n    };\n    Op.prototype.children = ['first', 'second'];\n    Op.prototype.isNumber = function () {\n      var ref3;\n      return this.isUnary() && ((ref3 = this.operator) === '+' || ref3 === '-') && this.first instanceof Value && this.first.isNumber();\n    };\n    Op.prototype.isYield = function () {\n      var ref3;\n      return (ref3 = this.operator) === 'yield' || ref3 === 'yield*';\n    };\n    Op.prototype.isUnary = function () {\n      return !this.second;\n    };\n    Op.prototype.isComplex = function () {\n      return !this.isNumber();\n    };\n    Op.prototype.isChainable = function () {\n      var ref3;\n      return (ref3 = this.operator) === '<' || ref3 === '>' || ref3 === '>=' || ref3 === '<=' || ref3 === '===' || ref3 === '!==';\n    };\n    Op.prototype.invert = function () {\n      var allInvertable, curr, fst, op, ref3;\n      if (this.isChainable() && this.first.isChainable()) {\n        allInvertable = true;\n        curr = this;\n        while (curr && curr.operator) {\n          allInvertable && (allInvertable = curr.operator in INVERSIONS);\n          curr = curr.first;\n        }\n        if (!allInvertable) {\n          return new Parens(this).invert();\n        }\n        curr = this;\n        while (curr && curr.operator) {\n          curr.invert = !curr.invert;\n          curr.operator = INVERSIONS[curr.operator];\n          curr = curr.first;\n        }\n        return this;\n      } else if (op = INVERSIONS[this.operator]) {\n        this.operator = op;\n        if (this.first.unwrap() instanceof Op) {\n          this.first.invert();\n        }\n        return this;\n      } else if (this.second) {\n        return new Parens(this).invert();\n      } else if (this.operator === '!' && (fst = this.first.unwrap()) instanceof Op && ((ref3 = fst.operator) === '!' || ref3 === 'in' || ref3 === 'instanceof')) {\n        return fst;\n      } else {\n        return new Op('!', this);\n      }\n    };\n    Op.prototype.unfoldSoak = function (o) {\n      var ref3;\n      return ((ref3 = this.operator) === '++' || ref3 === '--' || ref3 === 'delete') && unfoldSoak(o, this, 'first');\n    };\n    Op.prototype.generateDo = function (exp) {\n      var call, func, j, len1, param, passedParams, ref, ref3;\n      passedParams = [];\n      func = exp instanceof Assign && (ref = exp.value.unwrap()) instanceof Code ? ref : exp;\n      ref3 = func.params || [];\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        param = ref3[j];\n        if (param.value) {\n          passedParams.push(param.value);\n          delete param.value;\n        } else {\n          passedParams.push(param);\n        }\n      }\n      call = new Call(exp, passedParams);\n      call[\"do\"] = true;\n      return call;\n    };\n    Op.prototype.compileNode = function (o) {\n      var answer, isChain, lhs, message, ref3, rhs;\n      isChain = this.isChainable() && this.first.isChainable();\n      if (!isChain) {\n        this.first.front = this.front;\n      }\n      if (this.operator === 'delete' && o.scope.check(this.first.unwrapAll().value)) {\n        this.error('delete operand may not be argument or var');\n      }\n      if ((ref3 = this.operator) === '--' || ref3 === '++') {\n        message = isUnassignable(this.first.unwrapAll().value);\n        if (message) {\n          this.first.error(message);\n        }\n      }\n      if (this.isYield()) {\n        return this.compileYield(o);\n      }\n      if (this.isUnary()) {\n        return this.compileUnary(o);\n      }\n      if (isChain) {\n        return this.compileChain(o);\n      }\n      switch (this.operator) {\n        case '?':\n          return this.compileExistence(o);\n        case '**':\n          return this.compilePower(o);\n        case '//':\n          return this.compileFloorDivision(o);\n        case '%%':\n          return this.compileModulo(o);\n        default:\n          lhs = this.first.compileToFragments(o, LEVEL_OP);\n          rhs = this.second.compileToFragments(o, LEVEL_OP);\n          answer = [].concat(lhs, this.makeCode(\" \" + this.operator + \" \"), rhs);\n          if (o.level <= LEVEL_OP) {\n            return answer;\n          } else {\n            return this.wrapInBraces(answer);\n          }\n      }\n    };\n    Op.prototype.compileChain = function (o) {\n      var fragments, fst, ref3, shared;\n      ref3 = this.first.second.cache(o), this.first.second = ref3[0], shared = ref3[1];\n      fst = this.first.compileToFragments(o, LEVEL_OP);\n      fragments = fst.concat(this.makeCode(\" \" + (this.invert ? '&&' : '||') + \" \"), shared.compileToFragments(o), this.makeCode(\" \" + this.operator + \" \"), this.second.compileToFragments(o, LEVEL_OP));\n      return this.wrapInBraces(fragments);\n    };\n    Op.prototype.compileExistence = function (o) {\n      var fst, ref;\n      if (this.first.isComplex()) {\n        ref = new IdentifierLiteral(o.scope.freeVariable('ref'));\n        fst = new Parens(new Assign(ref, this.first));\n      } else {\n        fst = this.first;\n        ref = fst;\n      }\n      return new If(new Existence(fst), ref, {\n        type: 'if'\n      }).addElse(this.second).compileToFragments(o);\n    };\n    Op.prototype.compileUnary = function (o) {\n      var op, parts, plusMinus;\n      parts = [];\n      op = this.operator;\n      parts.push([this.makeCode(op)]);\n      if (op === '!' && this.first instanceof Existence) {\n        this.first.negated = !this.first.negated;\n        return this.first.compileToFragments(o);\n      }\n      if (o.level >= LEVEL_ACCESS) {\n        return new Parens(this).compileToFragments(o);\n      }\n      plusMinus = op === '+' || op === '-';\n      if (op === 'new' || op === 'typeof' || op === 'delete' || plusMinus && this.first instanceof Op && this.first.operator === op) {\n        parts.push([this.makeCode(' ')]);\n      }\n      if (plusMinus && this.first instanceof Op || op === 'new' && this.first.isStatement(o)) {\n        this.first = new Parens(this.first);\n      }\n      parts.push(this.first.compileToFragments(o, LEVEL_OP));\n      if (this.flip) {\n        parts.reverse();\n      }\n      return this.joinFragmentArrays(parts, '');\n    };\n    Op.prototype.compileYield = function (o) {\n      var op, parts, ref3;\n      parts = [];\n      op = this.operator;\n      if (o.scope.parent == null) {\n        this.error('yield can only occur inside functions');\n      }\n      if (indexOf.call(Object.keys(this.first), 'expression') >= 0 && !(this.first instanceof Throw)) {\n        if (this.first.expression != null) {\n          parts.push(this.first.expression.compileToFragments(o, LEVEL_OP));\n        }\n      } else {\n        if (o.level >= LEVEL_PAREN) {\n          parts.push([this.makeCode(\"(\")]);\n        }\n        parts.push([this.makeCode(op)]);\n        if (((ref3 = this.first.base) != null ? ref3.value : void 0) !== '') {\n          parts.push([this.makeCode(\" \")]);\n        }\n        parts.push(this.first.compileToFragments(o, LEVEL_OP));\n        if (o.level >= LEVEL_PAREN) {\n          parts.push([this.makeCode(\")\")]);\n        }\n      }\n      return this.joinFragmentArrays(parts, '');\n    };\n    Op.prototype.compilePower = function (o) {\n      var pow;\n      pow = new Value(new IdentifierLiteral('Math'), [new Access(new PropertyName('pow'))]);\n      return new Call(pow, [this.first, this.second]).compileToFragments(o);\n    };\n    Op.prototype.compileFloorDivision = function (o) {\n      var div, floor, second;\n      floor = new Value(new IdentifierLiteral('Math'), [new Access(new PropertyName('floor'))]);\n      second = this.second.isComplex() ? new Parens(this.second) : this.second;\n      div = new Op('/', this.first, second);\n      return new Call(floor, [div]).compileToFragments(o);\n    };\n    Op.prototype.compileModulo = function (o) {\n      var mod;\n      mod = new Value(new Literal(utility('modulo', o)));\n      return new Call(mod, [this.first, this.second]).compileToFragments(o);\n    };\n    Op.prototype.toString = function (idt) {\n      return Op.__super__.toString.call(this, idt, this.constructor.name + ' ' + this.operator);\n    };\n    return Op;\n  }(Base);\n  exports.In = In = function (superClass1) {\n    extend1(In, superClass1);\n    function In(object, array) {\n      this.object = object;\n      this.array = array;\n    }\n    In.prototype.children = ['object', 'array'];\n    In.prototype.invert = NEGATE;\n    In.prototype.compileNode = function (o) {\n      var hasSplat, j, len1, obj, ref3;\n      if (this.array instanceof Value && this.array.isArray() && this.array.base.objects.length) {\n        ref3 = this.array.base.objects;\n        for (j = 0, len1 = ref3.length; j < len1; j++) {\n          obj = ref3[j];\n          if (!(obj instanceof Splat)) {\n            continue;\n          }\n          hasSplat = true;\n          break;\n        }\n        if (!hasSplat) {\n          return this.compileOrTest(o);\n        }\n      }\n      return this.compileLoopTest(o);\n    };\n    In.prototype.compileOrTest = function (o) {\n      var cmp, cnj, i, item, j, len1, ref, ref3, ref4, ref5, sub, tests;\n      ref3 = this.object.cache(o, LEVEL_OP), sub = ref3[0], ref = ref3[1];\n      ref4 = this.negated ? [' !== ', ' && '] : [' === ', ' || '], cmp = ref4[0], cnj = ref4[1];\n      tests = [];\n      ref5 = this.array.base.objects;\n      for (i = j = 0, len1 = ref5.length; j < len1; i = ++j) {\n        item = ref5[i];\n        if (i) {\n          tests.push(this.makeCode(cnj));\n        }\n        tests = tests.concat(i ? ref : sub, this.makeCode(cmp), item.compileToFragments(o, LEVEL_ACCESS));\n      }\n      if (o.level < LEVEL_OP) {\n        return tests;\n      } else {\n        return this.wrapInBraces(tests);\n      }\n    };\n    In.prototype.compileLoopTest = function (o) {\n      var fragments, ref, ref3, sub;\n      ref3 = this.object.cache(o, LEVEL_LIST), sub = ref3[0], ref = ref3[1];\n      fragments = [].concat(this.makeCode(utility('indexOf', o) + \".call(\"), this.array.compileToFragments(o, LEVEL_LIST), this.makeCode(\", \"), ref, this.makeCode(\") \" + (this.negated ? '< 0' : '>= 0')));\n      if (fragmentsToText(sub) === fragmentsToText(ref)) {\n        return fragments;\n      }\n      fragments = sub.concat(this.makeCode(', '), fragments);\n      if (o.level < LEVEL_LIST) {\n        return fragments;\n      } else {\n        return this.wrapInBraces(fragments);\n      }\n    };\n    In.prototype.toString = function (idt) {\n      return In.__super__.toString.call(this, idt, this.constructor.name + (this.negated ? '!' : ''));\n    };\n    return In;\n  }(Base);\n  exports.Try = Try = function (superClass1) {\n    extend1(Try, superClass1);\n    function Try(attempt, errorVariable, recovery, ensure) {\n      this.attempt = attempt;\n      this.errorVariable = errorVariable;\n      this.recovery = recovery;\n      this.ensure = ensure;\n    }\n    Try.prototype.children = ['attempt', 'recovery', 'ensure'];\n    Try.prototype.isStatement = YES;\n    Try.prototype.jumps = function (o) {\n      var ref3;\n      return this.attempt.jumps(o) || ((ref3 = this.recovery) != null ? ref3.jumps(o) : void 0);\n    };\n    Try.prototype.makeReturn = function (res) {\n      if (this.attempt) {\n        this.attempt = this.attempt.makeReturn(res);\n      }\n      if (this.recovery) {\n        this.recovery = this.recovery.makeReturn(res);\n      }\n      return this;\n    };\n    Try.prototype.compileNode = function (o) {\n      var catchPart, ensurePart, generatedErrorVariableName, message, placeholder, tryPart;\n      o.indent += TAB;\n      tryPart = this.attempt.compileToFragments(o, LEVEL_TOP);\n      catchPart = this.recovery ? (generatedErrorVariableName = o.scope.freeVariable('error', {\n        reserve: false\n      }), placeholder = new IdentifierLiteral(generatedErrorVariableName), this.errorVariable ? (message = isUnassignable(this.errorVariable.unwrapAll().value), message ? this.errorVariable.error(message) : void 0, this.recovery.unshift(new Assign(this.errorVariable, placeholder))) : void 0, [].concat(this.makeCode(\" catch (\"), placeholder.compileToFragments(o), this.makeCode(\") {\\n\"), this.recovery.compileToFragments(o, LEVEL_TOP), this.makeCode(\"\\n\" + this.tab + \"}\"))) : !(this.ensure || this.recovery) ? (generatedErrorVariableName = o.scope.freeVariable('error', {\n        reserve: false\n      }), [this.makeCode(\" catch (\" + generatedErrorVariableName + \") {}\")]) : [];\n      ensurePart = this.ensure ? [].concat(this.makeCode(\" finally {\\n\"), this.ensure.compileToFragments(o, LEVEL_TOP), this.makeCode(\"\\n\" + this.tab + \"}\")) : [];\n      return [].concat(this.makeCode(this.tab + \"try {\\n\"), tryPart, this.makeCode(\"\\n\" + this.tab + \"}\"), catchPart, ensurePart);\n    };\n    return Try;\n  }(Base);\n  exports.Throw = Throw = function (superClass1) {\n    extend1(Throw, superClass1);\n    function Throw(expression) {\n      this.expression = expression;\n    }\n    Throw.prototype.children = ['expression'];\n    Throw.prototype.isStatement = YES;\n    Throw.prototype.jumps = NO;\n    Throw.prototype.makeReturn = THIS;\n    Throw.prototype.compileNode = function (o) {\n      return [].concat(this.makeCode(this.tab + \"throw \"), this.expression.compileToFragments(o), this.makeCode(\";\"));\n    };\n    return Throw;\n  }(Base);\n  exports.Existence = Existence = function (superClass1) {\n    extend1(Existence, superClass1);\n    function Existence(expression) {\n      this.expression = expression;\n    }\n    Existence.prototype.children = ['expression'];\n    Existence.prototype.invert = NEGATE;\n    Existence.prototype.compileNode = function (o) {\n      var cmp, cnj, code, ref3;\n      this.expression.front = this.front;\n      code = this.expression.compile(o, LEVEL_OP);\n      if (this.expression.unwrap() instanceof IdentifierLiteral && !o.scope.check(code)) {\n        ref3 = this.negated ? ['===', '||'] : ['!==', '&&'], cmp = ref3[0], cnj = ref3[1];\n        code = \"typeof \" + code + \" \" + cmp + \" \\\"undefined\\\" \" + cnj + \" \" + code + \" \" + cmp + \" null\";\n      } else {\n        code = code + \" \" + (this.negated ? '==' : '!=') + \" null\";\n      }\n      return [this.makeCode(o.level <= LEVEL_COND ? code : \"(\" + code + \")\")];\n    };\n    return Existence;\n  }(Base);\n  exports.Parens = Parens = function (superClass1) {\n    extend1(Parens, superClass1);\n    function Parens(body1) {\n      this.body = body1;\n    }\n    Parens.prototype.children = ['body'];\n    Parens.prototype.unwrap = function () {\n      return this.body;\n    };\n    Parens.prototype.isComplex = function () {\n      return this.body.isComplex();\n    };\n    Parens.prototype.compileNode = function (o) {\n      var bare, expr, fragments;\n      expr = this.body.unwrap();\n      if (expr instanceof Value && expr.isAtomic()) {\n        expr.front = this.front;\n        return expr.compileToFragments(o);\n      }\n      fragments = expr.compileToFragments(o, LEVEL_PAREN);\n      bare = o.level < LEVEL_OP && (expr instanceof Op || expr instanceof Call || expr instanceof For && expr.returns) && (o.level < LEVEL_COND || fragments.length <= 3);\n      if (bare) {\n        return fragments;\n      } else {\n        return this.wrapInBraces(fragments);\n      }\n    };\n    return Parens;\n  }(Base);\n  exports.StringWithInterpolations = StringWithInterpolations = function (superClass1) {\n    extend1(StringWithInterpolations, superClass1);\n    function StringWithInterpolations() {\n      return StringWithInterpolations.__super__.constructor.apply(this, arguments);\n    }\n    StringWithInterpolations.prototype.compileNode = function (o) {\n      var element, elements, expr, fragments, j, len1, value;\n      if (!o.inTaggedTemplateCall) {\n        return StringWithInterpolations.__super__.compileNode.apply(this, arguments);\n      }\n      expr = this.body.unwrap();\n      elements = [];\n      expr.traverseChildren(false, function (node) {\n        if (node instanceof StringLiteral) {\n          elements.push(node);\n          return true;\n        } else if (node instanceof Parens) {\n          elements.push(node);\n          return false;\n        }\n        return true;\n      });\n      fragments = [];\n      fragments.push(this.makeCode('`'));\n      for (j = 0, len1 = elements.length; j < len1; j++) {\n        element = elements[j];\n        if (element instanceof StringLiteral) {\n          value = element.value.slice(1, -1);\n          value = value.replace(/(\\\\*)(`|\\$\\{)/g, function (match, backslashes, toBeEscaped) {\n            if (backslashes.length % 2 === 0) {\n              return backslashes + \"\\\\\" + toBeEscaped;\n            } else {\n              return match;\n            }\n          });\n          fragments.push(this.makeCode(value));\n        } else {\n          fragments.push(this.makeCode('${'));\n          fragments.push.apply(fragments, element.compileToFragments(o, LEVEL_PAREN));\n          fragments.push(this.makeCode('}'));\n        }\n      }\n      fragments.push(this.makeCode('`'));\n      return fragments;\n    };\n    return StringWithInterpolations;\n  }(Parens);\n  exports.For = For = function (superClass1) {\n    extend1(For, superClass1);\n    function For(body, source) {\n      var ref3;\n      this.source = source.source, this.guard = source.guard, this.step = source.step, this.name = source.name, this.index = source.index;\n      this.body = Block.wrap([body]);\n      this.own = !!source.own;\n      this.object = !!source.object;\n      this.from = !!source.from;\n      if (this.from && this.index) {\n        this.index.error('cannot use index with for-from');\n      }\n      if (this.own && !this.object) {\n        source.ownTag.error(\"cannot use own with for-\" + (this.from ? 'from' : 'in'));\n      }\n      if (this.object) {\n        ref3 = [this.index, this.name], this.name = ref3[0], this.index = ref3[1];\n      }\n      if (this.index instanceof Value && !this.index.isAssignable()) {\n        this.index.error('index cannot be a pattern matching expression');\n      }\n      this.range = this.source instanceof Value && this.source.base instanceof Range && !this.source.properties.length && !this.from;\n      this.pattern = this.name instanceof Value;\n      if (this.range && this.index) {\n        this.index.error('indexes do not apply to range loops');\n      }\n      if (this.range && this.pattern) {\n        this.name.error('cannot pattern match over range loops');\n      }\n      this.returns = false;\n    }\n    For.prototype.children = ['body', 'source', 'guard', 'step'];\n    For.prototype.compileNode = function (o) {\n      var body, bodyFragments, compare, compareDown, declare, declareDown, defPart, defPartFragments, down, forPartFragments, guardPart, idt1, increment, index, ivar, kvar, kvarAssign, last, lvar, name, namePart, ref, ref3, ref4, resultPart, returnResult, rvar, scope, source, step, stepNum, stepVar, svar, varPart;\n      body = Block.wrap([this.body]);\n      ref3 = body.expressions, last = ref3[ref3.length - 1];\n      if ((last != null ? last.jumps() : void 0) instanceof Return) {\n        this.returns = false;\n      }\n      source = this.range ? this.source.base : this.source;\n      scope = o.scope;\n      if (!this.pattern) {\n        name = this.name && this.name.compile(o, LEVEL_LIST);\n      }\n      index = this.index && this.index.compile(o, LEVEL_LIST);\n      if (name && !this.pattern) {\n        scope.find(name);\n      }\n      if (index && !(this.index instanceof Value)) {\n        scope.find(index);\n      }\n      if (this.returns) {\n        rvar = scope.freeVariable('results');\n      }\n      if (this.from) {\n        if (this.pattern) {\n          ivar = scope.freeVariable('x', {\n            single: true\n          });\n        }\n      } else {\n        ivar = this.object && index || scope.freeVariable('i', {\n          single: true\n        });\n      }\n      kvar = (this.range || this.from) && name || index || ivar;\n      kvarAssign = kvar !== ivar ? kvar + \" = \" : \"\";\n      if (this.step && !this.range) {\n        ref4 = this.cacheToCodeFragments(this.step.cache(o, LEVEL_LIST, isComplexOrAssignable)), step = ref4[0], stepVar = ref4[1];\n        if (this.step.isNumber()) {\n          stepNum = Number(stepVar);\n        }\n      }\n      if (this.pattern) {\n        name = ivar;\n      }\n      varPart = '';\n      guardPart = '';\n      defPart = '';\n      idt1 = this.tab + TAB;\n      if (this.range) {\n        forPartFragments = source.compileToFragments(merge(o, {\n          index: ivar,\n          name: name,\n          step: this.step,\n          isComplex: isComplexOrAssignable\n        }));\n      } else {\n        svar = this.source.compile(o, LEVEL_LIST);\n        if ((name || this.own) && !(this.source.unwrap() instanceof IdentifierLiteral)) {\n          defPart += \"\" + this.tab + (ref = scope.freeVariable('ref')) + \" = \" + svar + \";\\n\";\n          svar = ref;\n        }\n        if (name && !this.pattern && !this.from) {\n          namePart = name + \" = \" + svar + \"[\" + kvar + \"]\";\n        }\n        if (!this.object && !this.from) {\n          if (step !== stepVar) {\n            defPart += \"\" + this.tab + step + \";\\n\";\n          }\n          down = stepNum < 0;\n          if (!(this.step && stepNum != null && down)) {\n            lvar = scope.freeVariable('len');\n          }\n          declare = \"\" + kvarAssign + ivar + \" = 0, \" + lvar + \" = \" + svar + \".length\";\n          declareDown = \"\" + kvarAssign + ivar + \" = \" + svar + \".length - 1\";\n          compare = ivar + \" < \" + lvar;\n          compareDown = ivar + \" >= 0\";\n          if (this.step) {\n            if (stepNum != null) {\n              if (down) {\n                compare = compareDown;\n                declare = declareDown;\n              }\n            } else {\n              compare = stepVar + \" > 0 ? \" + compare + \" : \" + compareDown;\n              declare = \"(\" + stepVar + \" > 0 ? (\" + declare + \") : \" + declareDown + \")\";\n            }\n            increment = ivar + \" += \" + stepVar;\n          } else {\n            increment = \"\" + (kvar !== ivar ? \"++\" + ivar : ivar + \"++\");\n          }\n          forPartFragments = [this.makeCode(declare + \"; \" + compare + \"; \" + kvarAssign + increment)];\n        }\n      }\n      if (this.returns) {\n        resultPart = \"\" + this.tab + rvar + \" = [];\\n\";\n        returnResult = \"\\n\" + this.tab + \"return \" + rvar + \";\";\n        body.makeReturn(rvar);\n      }\n      if (this.guard) {\n        if (body.expressions.length > 1) {\n          body.expressions.unshift(new If(new Parens(this.guard).invert(), new StatementLiteral(\"continue\")));\n        } else {\n          if (this.guard) {\n            body = Block.wrap([new If(this.guard, body)]);\n          }\n        }\n      }\n      if (this.pattern) {\n        body.expressions.unshift(new Assign(this.name, this.from ? new IdentifierLiteral(kvar) : new Literal(svar + \"[\" + kvar + \"]\")));\n      }\n      defPartFragments = [].concat(this.makeCode(defPart), this.pluckDirectCall(o, body));\n      if (namePart) {\n        varPart = \"\\n\" + idt1 + namePart + \";\";\n      }\n      if (this.object) {\n        forPartFragments = [this.makeCode(kvar + \" in \" + svar)];\n        if (this.own) {\n          guardPart = \"\\n\" + idt1 + \"if (!\" + utility('hasProp', o) + \".call(\" + svar + \", \" + kvar + \")) continue;\";\n        }\n      } else if (this.from) {\n        forPartFragments = [this.makeCode(kvar + \" of \" + svar)];\n      }\n      bodyFragments = body.compileToFragments(merge(o, {\n        indent: idt1\n      }), LEVEL_TOP);\n      if (bodyFragments && bodyFragments.length > 0) {\n        bodyFragments = [].concat(this.makeCode(\"\\n\"), bodyFragments, this.makeCode(\"\\n\"));\n      }\n      return [].concat(defPartFragments, this.makeCode(\"\" + (resultPart || '') + this.tab + \"for (\"), forPartFragments, this.makeCode(\") {\" + guardPart + varPart), bodyFragments, this.makeCode(this.tab + \"}\" + (returnResult || '')));\n    };\n    For.prototype.pluckDirectCall = function (o, body) {\n      var base, defs, expr, fn, idx, j, len1, ref, ref3, ref4, ref5, ref6, ref7, ref8, ref9, val;\n      defs = [];\n      ref3 = body.expressions;\n      for (idx = j = 0, len1 = ref3.length; j < len1; idx = ++j) {\n        expr = ref3[idx];\n        expr = expr.unwrapAll();\n        if (!(expr instanceof Call)) {\n          continue;\n        }\n        val = (ref4 = expr.variable) != null ? ref4.unwrapAll() : void 0;\n        if (!(val instanceof Code || val instanceof Value && ((ref5 = val.base) != null ? ref5.unwrapAll() : void 0) instanceof Code && val.properties.length === 1 && ((ref6 = (ref7 = val.properties[0].name) != null ? ref7.value : void 0) === 'call' || ref6 === 'apply'))) {\n          continue;\n        }\n        fn = ((ref8 = val.base) != null ? ref8.unwrapAll() : void 0) || val;\n        ref = new IdentifierLiteral(o.scope.freeVariable('fn'));\n        base = new Value(ref);\n        if (val.base) {\n          ref9 = [base, val], val.base = ref9[0], base = ref9[1];\n        }\n        body.expressions[idx] = new Call(base, expr.args);\n        defs = defs.concat(this.makeCode(this.tab), new Assign(ref, fn).compileToFragments(o, LEVEL_TOP), this.makeCode(';\\n'));\n      }\n      return defs;\n    };\n    return For;\n  }(While);\n  exports.Switch = Switch = function (superClass1) {\n    extend1(Switch, superClass1);\n    function Switch(subject, cases, otherwise) {\n      this.subject = subject;\n      this.cases = cases;\n      this.otherwise = otherwise;\n    }\n    Switch.prototype.children = ['subject', 'cases', 'otherwise'];\n    Switch.prototype.isStatement = YES;\n    Switch.prototype.jumps = function (o) {\n      var block, conds, j, jumpNode, len1, ref3, ref4, ref5;\n      if (o == null) {\n        o = {\n          block: true\n        };\n      }\n      ref3 = this.cases;\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        ref4 = ref3[j], conds = ref4[0], block = ref4[1];\n        if (jumpNode = block.jumps(o)) {\n          return jumpNode;\n        }\n      }\n      return (ref5 = this.otherwise) != null ? ref5.jumps(o) : void 0;\n    };\n    Switch.prototype.makeReturn = function (res) {\n      var j, len1, pair, ref3, ref4;\n      ref3 = this.cases;\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        pair = ref3[j];\n        pair[1].makeReturn(res);\n      }\n      if (res) {\n        this.otherwise || (this.otherwise = new Block([new Literal('void 0')]));\n      }\n      if ((ref4 = this.otherwise) != null) {\n        ref4.makeReturn(res);\n      }\n      return this;\n    };\n    Switch.prototype.compileNode = function (o) {\n      var block, body, cond, conditions, expr, fragments, i, idt1, idt2, j, k, len1, len2, ref3, ref4, ref5;\n      idt1 = o.indent + TAB;\n      idt2 = o.indent = idt1 + TAB;\n      fragments = [].concat(this.makeCode(this.tab + \"switch (\"), this.subject ? this.subject.compileToFragments(o, LEVEL_PAREN) : this.makeCode(\"false\"), this.makeCode(\") {\\n\"));\n      ref3 = this.cases;\n      for (i = j = 0, len1 = ref3.length; j < len1; i = ++j) {\n        ref4 = ref3[i], conditions = ref4[0], block = ref4[1];\n        ref5 = flatten([conditions]);\n        for (k = 0, len2 = ref5.length; k < len2; k++) {\n          cond = ref5[k];\n          if (!this.subject) {\n            cond = cond.invert();\n          }\n          fragments = fragments.concat(this.makeCode(idt1 + \"case \"), cond.compileToFragments(o, LEVEL_PAREN), this.makeCode(\":\\n\"));\n        }\n        if ((body = block.compileToFragments(o, LEVEL_TOP)).length > 0) {\n          fragments = fragments.concat(body, this.makeCode('\\n'));\n        }\n        if (i === this.cases.length - 1 && !this.otherwise) {\n          break;\n        }\n        expr = this.lastNonComment(block.expressions);\n        if (expr instanceof Return || expr instanceof Literal && expr.jumps() && expr.value !== 'debugger') {\n          continue;\n        }\n        fragments.push(cond.makeCode(idt2 + 'break;\\n'));\n      }\n      if (this.otherwise && this.otherwise.expressions.length) {\n        fragments.push.apply(fragments, [this.makeCode(idt1 + \"default:\\n\")].concat(slice.call(this.otherwise.compileToFragments(o, LEVEL_TOP)), [this.makeCode(\"\\n\")]));\n      }\n      fragments.push(this.makeCode(this.tab + '}'));\n      return fragments;\n    };\n    return Switch;\n  }(Base);\n  exports.If = If = function (superClass1) {\n    extend1(If, superClass1);\n    function If(condition, body1, options) {\n      this.body = body1;\n      if (options == null) {\n        options = {};\n      }\n      this.condition = options.type === 'unless' ? condition.invert() : condition;\n      this.elseBody = null;\n      this.isChain = false;\n      this.soak = options.soak;\n    }\n    If.prototype.children = ['condition', 'body', 'elseBody'];\n    If.prototype.bodyNode = function () {\n      var ref3;\n      return (ref3 = this.body) != null ? ref3.unwrap() : void 0;\n    };\n    If.prototype.elseBodyNode = function () {\n      var ref3;\n      return (ref3 = this.elseBody) != null ? ref3.unwrap() : void 0;\n    };\n    If.prototype.addElse = function (elseBody) {\n      if (this.isChain) {\n        this.elseBodyNode().addElse(elseBody);\n      } else {\n        this.isChain = elseBody instanceof If;\n        this.elseBody = this.ensureBlock(elseBody);\n        this.elseBody.updateLocationDataIfMissing(elseBody.locationData);\n      }\n      return this;\n    };\n    If.prototype.isStatement = function (o) {\n      var ref3;\n      return (o != null ? o.level : void 0) === LEVEL_TOP || this.bodyNode().isStatement(o) || ((ref3 = this.elseBodyNode()) != null ? ref3.isStatement(o) : void 0);\n    };\n    If.prototype.jumps = function (o) {\n      var ref3;\n      return this.body.jumps(o) || ((ref3 = this.elseBody) != null ? ref3.jumps(o) : void 0);\n    };\n    If.prototype.compileNode = function (o) {\n      if (this.isStatement(o)) {\n        return this.compileStatement(o);\n      } else {\n        return this.compileExpression(o);\n      }\n    };\n    If.prototype.makeReturn = function (res) {\n      if (res) {\n        this.elseBody || (this.elseBody = new Block([new Literal('void 0')]));\n      }\n      this.body && (this.body = new Block([this.body.makeReturn(res)]));\n      this.elseBody && (this.elseBody = new Block([this.elseBody.makeReturn(res)]));\n      return this;\n    };\n    If.prototype.ensureBlock = function (node) {\n      if (node instanceof Block) {\n        return node;\n      } else {\n        return new Block([node]);\n      }\n    };\n    If.prototype.compileStatement = function (o) {\n      var answer, body, child, cond, exeq, ifPart, indent;\n      child = del(o, 'chainChild');\n      exeq = del(o, 'isExistentialEquals');\n      if (exeq) {\n        return new If(this.condition.invert(), this.elseBodyNode(), {\n          type: 'if'\n        }).compileToFragments(o);\n      }\n      indent = o.indent + TAB;\n      cond = this.condition.compileToFragments(o, LEVEL_PAREN);\n      body = this.ensureBlock(this.body).compileToFragments(merge(o, {\n        indent: indent\n      }));\n      ifPart = [].concat(this.makeCode(\"if (\"), cond, this.makeCode(\") {\\n\"), body, this.makeCode(\"\\n\" + this.tab + \"}\"));\n      if (!child) {\n        ifPart.unshift(this.makeCode(this.tab));\n      }\n      if (!this.elseBody) {\n        return ifPart;\n      }\n      answer = ifPart.concat(this.makeCode(' else '));\n      if (this.isChain) {\n        o.chainChild = true;\n        answer = answer.concat(this.elseBody.unwrap().compileToFragments(o, LEVEL_TOP));\n      } else {\n        answer = answer.concat(this.makeCode(\"{\\n\"), this.elseBody.compileToFragments(merge(o, {\n          indent: indent\n        }), LEVEL_TOP), this.makeCode(\"\\n\" + this.tab + \"}\"));\n      }\n      return answer;\n    };\n    If.prototype.compileExpression = function (o) {\n      var alt, body, cond, fragments;\n      cond = this.condition.compileToFragments(o, LEVEL_COND);\n      body = this.bodyNode().compileToFragments(o, LEVEL_LIST);\n      alt = this.elseBodyNode() ? this.elseBodyNode().compileToFragments(o, LEVEL_LIST) : [this.makeCode('void 0')];\n      fragments = cond.concat(this.makeCode(\" ? \"), body, this.makeCode(\" : \"), alt);\n      if (o.level >= LEVEL_COND) {\n        return this.wrapInBraces(fragments);\n      } else {\n        return fragments;\n      }\n    };\n    If.prototype.unfoldSoak = function () {\n      return this.soak && this;\n    };\n    return If;\n  }(Base);\n  UTILITIES = {\n    extend: function (o) {\n      return \"function(child, parent) { for (var key in parent) { if (\" + utility('hasProp', o) + \".call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; }\";\n    },\n    bind: function () {\n      return 'function(fn, me){ return function(){ return fn.apply(me, arguments); }; }';\n    },\n    indexOf: function () {\n      return \"[].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; }\";\n    },\n    modulo: function () {\n      return \"function(a, b) { return (+a % (b = +b) + b) % b; }\";\n    },\n    hasProp: function () {\n      return '{}.hasOwnProperty';\n    },\n    slice: function () {\n      return '[].slice';\n    }\n  };\n  LEVEL_TOP = 1;\n  LEVEL_PAREN = 2;\n  LEVEL_LIST = 3;\n  LEVEL_COND = 4;\n  LEVEL_OP = 5;\n  LEVEL_ACCESS = 6;\n  TAB = '  ';\n  SIMPLENUM = /^[+-]?\\d+$/;\n  utility = function (name, o) {\n    var ref, root;\n    root = o.scope.root;\n    if (name in root.utilities) {\n      return root.utilities[name];\n    } else {\n      ref = root.freeVariable(name);\n      root.assign(ref, UTILITIES[name](o));\n      return root.utilities[name] = ref;\n    }\n  };\n  multident = function (code, tab) {\n    code = code.replace(/\\n/g, '$&' + tab);\n    return code.replace(/\\s+$/, '');\n  };\n  isLiteralArguments = function (node) {\n    return node instanceof IdentifierLiteral && node.value === 'arguments';\n  };\n  isLiteralThis = function (node) {\n    return node instanceof ThisLiteral || node instanceof Code && node.bound || node instanceof SuperCall;\n  };\n  isComplexOrAssignable = function (node) {\n    return node.isComplex() || (typeof node.isAssignable === \"function\" ? node.isAssignable() : void 0);\n  };\n  unfoldSoak = function (o, parent, name) {\n    var ifn;\n    if (!(ifn = parent[name].unfoldSoak(o))) {\n      return;\n    }\n    parent[name] = ifn.body;\n    ifn.body = new Value(parent);\n    return ifn;\n  };\n}).call(this);","map":{"version":3,"names":["Access","Arr","Assign","Base","Block","BooleanLiteral","Call","Class","Code","CodeFragment","Comment","Existence","Expansion","ExportAllDeclaration","ExportDeclaration","ExportDefaultDeclaration","ExportNamedDeclaration","ExportSpecifier","ExportSpecifierList","Extends","For","IdentifierLiteral","If","ImportClause","ImportDeclaration","ImportDefaultSpecifier","ImportNamespaceSpecifier","ImportSpecifier","ImportSpecifierList","In","Index","InfinityLiteral","JS_FORBIDDEN","LEVEL_ACCESS","LEVEL_COND","LEVEL_LIST","LEVEL_OP","LEVEL_PAREN","LEVEL_TOP","Literal","ModuleDeclaration","ModuleSpecifier","ModuleSpecifierList","NEGATE","NO","NaNLiteral","NullLiteral","NumberLiteral","Obj","Op","Param","Parens","PassthroughLiteral","PropertyName","Range","RegexLiteral","RegexWithInterpolations","Return","SIMPLENUM","Scope","Slice","Splat","StatementLiteral","StringLiteral","StringWithInterpolations","SuperCall","Switch","TAB","THIS","TaggedTemplateCall","ThisLiteral","Throw","Try","UTILITIES","UndefinedLiteral","Value","While","YES","YieldReturn","addLocationDataFn","compact","del","ends","extend","flatten","fragmentsToText","isComplexOrAssignable","isLiteralArguments","isLiteralThis","isUnassignable","locationDataToString","merge","multident","ref1","ref2","some","starts","throwSyntaxError","unfoldSoak","utility","extend1","child","parent","key","hasProp","call","ctor","constructor","prototype","__super__","hasOwnProperty","indexOf","item","i","l","length","slice","Error","stackTraceLimit","require","exports","negated","code","ref3","locationData","type","name","toString","fragments","fragment","j","len1","results","push","join","compile","o","lvl","compileToFragments","node","level","tab","indent","isStatement","compileNode","compileClosure","args","argumentsNode","func","jumpNode","meth","parts","jumps","error","sharedScope","wrap","contains","isGenerator","base","unshift","makeCode","cache","isComplex","complex","ref","sub","scope","freeVariable","value","cacheToCodeFragments","cacheValues","makeReturn","res","me","unwrapAll","pred","traverseChildren","n","lastNonComment","list","idt","tree","soak","eachChild","attr","k","len2","ref4","children","crossScope","recur","invert","unwrap","isChainable","isAssignable","isNumber","assigns","updateLocationDataIfMissing","message","wrapInBraces","concat","joinFragmentArrays","fragmentsList","joinStr","answer","superClass1","nodes","expressions","pop","isEmpty","exp","expr","len","expression","splice","compileRoot","compiledNodes","index","top","front","spaced","prelude","preludeExps","rest","bare","referencedVars","locals","parameter","ref5","compileWithDeclarations","declars","post","hasDeclarations","hasAssignments","declaredVariables","assignedVariables","value1","apply","arguments","loop","block","method","bound","context","props","tag","properties","add","hasProperties","bareLiteral","isArray","isRange","isString","isRegex","isUndefined","isNull","isBoolean","isAtomic","isNotCallable","isSplice","isObject","onlyGenerated","generated","lastProp","looksStatic","className","cacheReference","bref","nref","prop","test","unfoldedSoak","_this","fst","ifn","snd","body","comment1","comment","replace","variable1","args1","soak1","variable","isNew","needsUpdatedStartLocation","first_line","first_column","newInstance","left","rite","superReference","reverse","arg","argIndex","compiledArgs","compiledArray","preface","compileSplattedArray","compileSplat","superThis","splatArgs","fun","isBare","accesses","klass","namedMethod","inTaggedTemplateCall","child1","parent1","name1","index1","from1","to1","from","to","exclusive","equals","compileVariables","step","fromC","fromVar","toC","toVar","stepVar","fromNum","Number","toNum","stepNum","cond","condPart","gt","idx","idxName","known","lt","namedIndex","stepPart","varPart","compileArray","hasArgs","pre","range","result","vars","Math","abs","single","range1","compiled","compiledText","fromCompiled","toStr","objects","dynamicIndex","hasDynamic","lastNoncom","len3","oref","operatorToken","objs","compiledObjs","obj","body1","boundFuncs","classBody","defaultClassVariableName","determineName","tail","setContext","addBoundFunctions","bvar","lhs","addProperties","acc","assign","exprs","shift","externalCtor","classScope","walkBody","cont","exps","hoistDirectivePrologue","directives","ensureConstructor","noReturn","lname","superClass","makeScope","reserve","params","moduleDeclaration","clause","source1","source","checkSource","checkScope","moduleDeclarationType","importedSymbols","defaultBinding","namedImports","specifiers","compiledList","specifier","original","alias","moduleDeclarationType1","identifier","find","imported","local","check","exported","options","param","subpattern","checkAssignability","varBase","Object","positions","variables","compiledName","isValue","ref6","ref7","ref8","val","compilePatternMatch","compileSplice","compileConditional","compileSpecialMath","defaultValue","expandedIdx","ivar","olen","vvar","vvarText","right","isExistentialEquals","addElse","fromDecl","fromRef","valDef","valRef","isYield","parentScope","boundfunc","len4","len5","len6","lit","m","p","q","r","splats","uniqs","wasEmpty","wrapper","shared","asReference","splat","eachParamName","iterator","eachName","token","reference","atParam","compiledNode","concatPart","last","condition","guard","returns","addBody","rvar","set","CONVERSIONS","INVERSIONS","op","first","second","flip","generateDo","operator","isUnary","allInvertable","curr","passedParams","isChain","rhs","compileYield","compileUnary","compileChain","compileExistence","compilePower","compileFloorDivision","compileModulo","plusMinus","keys","pow","div","floor","mod","object","array","hasSplat","compileOrTest","compileLoopTest","cmp","cnj","tests","attempt","errorVariable","recovery","ensure","catchPart","ensurePart","generatedErrorVariableName","placeholder","tryPart","element","elements","match","backslashes","toBeEscaped","own","ownTag","pattern","bodyFragments","compare","compareDown","declare","declareDown","defPart","defPartFragments","down","forPartFragments","guardPart","idt1","increment","kvar","kvarAssign","lvar","namePart","resultPart","returnResult","svar","pluckDirectCall","defs","fn","ref9","subject","cases","otherwise","conds","pair","conditions","idt2","elseBody","bodyNode","elseBodyNode","ensureBlock","compileStatement","compileExpression","exeq","ifPart","chainChild","alt","bind","modulo","root","utilities"],"sources":["/home/kali/Desktop/c++/proshop/node_modules/coffee-script/lib/coffee-script/nodes.js"],"sourcesContent":["// Generated by CoffeeScript 1.12.7\n(function() {\n  var Access, Arr, Assign, Base, Block, BooleanLiteral, Call, Class, Code, CodeFragment, Comment, Existence, Expansion, ExportAllDeclaration, ExportDeclaration, ExportDefaultDeclaration, ExportNamedDeclaration, ExportSpecifier, ExportSpecifierList, Extends, For, IdentifierLiteral, If, ImportClause, ImportDeclaration, ImportDefaultSpecifier, ImportNamespaceSpecifier, ImportSpecifier, ImportSpecifierList, In, Index, InfinityLiteral, JS_FORBIDDEN, LEVEL_ACCESS, LEVEL_COND, LEVEL_LIST, LEVEL_OP, LEVEL_PAREN, LEVEL_TOP, Literal, ModuleDeclaration, ModuleSpecifier, ModuleSpecifierList, NEGATE, NO, NaNLiteral, NullLiteral, NumberLiteral, Obj, Op, Param, Parens, PassthroughLiteral, PropertyName, Range, RegexLiteral, RegexWithInterpolations, Return, SIMPLENUM, Scope, Slice, Splat, StatementLiteral, StringLiteral, StringWithInterpolations, SuperCall, Switch, TAB, THIS, TaggedTemplateCall, ThisLiteral, Throw, Try, UTILITIES, UndefinedLiteral, Value, While, YES, YieldReturn, addLocationDataFn, compact, del, ends, extend, flatten, fragmentsToText, isComplexOrAssignable, isLiteralArguments, isLiteralThis, isUnassignable, locationDataToString, merge, multident, ref1, ref2, some, starts, throwSyntaxError, unfoldSoak, utility,\n    extend1 = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty,\n    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; },\n    slice = [].slice;\n\n  Error.stackTraceLimit = 2e308;\n\n  Scope = require('./scope').Scope;\n\n  ref1 = require('./lexer'), isUnassignable = ref1.isUnassignable, JS_FORBIDDEN = ref1.JS_FORBIDDEN;\n\n  ref2 = require('./helpers'), compact = ref2.compact, flatten = ref2.flatten, extend = ref2.extend, merge = ref2.merge, del = ref2.del, starts = ref2.starts, ends = ref2.ends, some = ref2.some, addLocationDataFn = ref2.addLocationDataFn, locationDataToString = ref2.locationDataToString, throwSyntaxError = ref2.throwSyntaxError;\n\n  exports.extend = extend;\n\n  exports.addLocationDataFn = addLocationDataFn;\n\n  YES = function() {\n    return true;\n  };\n\n  NO = function() {\n    return false;\n  };\n\n  THIS = function() {\n    return this;\n  };\n\n  NEGATE = function() {\n    this.negated = !this.negated;\n    return this;\n  };\n\n  exports.CodeFragment = CodeFragment = (function() {\n    function CodeFragment(parent, code) {\n      var ref3;\n      this.code = \"\" + code;\n      this.locationData = parent != null ? parent.locationData : void 0;\n      this.type = (parent != null ? (ref3 = parent.constructor) != null ? ref3.name : void 0 : void 0) || 'unknown';\n    }\n\n    CodeFragment.prototype.toString = function() {\n      return \"\" + this.code + (this.locationData ? \": \" + locationDataToString(this.locationData) : '');\n    };\n\n    return CodeFragment;\n\n  })();\n\n  fragmentsToText = function(fragments) {\n    var fragment;\n    return ((function() {\n      var j, len1, results;\n      results = [];\n      for (j = 0, len1 = fragments.length; j < len1; j++) {\n        fragment = fragments[j];\n        results.push(fragment.code);\n      }\n      return results;\n    })()).join('');\n  };\n\n  exports.Base = Base = (function() {\n    function Base() {}\n\n    Base.prototype.compile = function(o, lvl) {\n      return fragmentsToText(this.compileToFragments(o, lvl));\n    };\n\n    Base.prototype.compileToFragments = function(o, lvl) {\n      var node;\n      o = extend({}, o);\n      if (lvl) {\n        o.level = lvl;\n      }\n      node = this.unfoldSoak(o) || this;\n      node.tab = o.indent;\n      if (o.level === LEVEL_TOP || !node.isStatement(o)) {\n        return node.compileNode(o);\n      } else {\n        return node.compileClosure(o);\n      }\n    };\n\n    Base.prototype.compileClosure = function(o) {\n      var args, argumentsNode, func, jumpNode, meth, parts, ref3;\n      if (jumpNode = this.jumps()) {\n        jumpNode.error('cannot use a pure statement in an expression');\n      }\n      o.sharedScope = true;\n      func = new Code([], Block.wrap([this]));\n      args = [];\n      if ((argumentsNode = this.contains(isLiteralArguments)) || this.contains(isLiteralThis)) {\n        args = [new ThisLiteral];\n        if (argumentsNode) {\n          meth = 'apply';\n          args.push(new IdentifierLiteral('arguments'));\n        } else {\n          meth = 'call';\n        }\n        func = new Value(func, [new Access(new PropertyName(meth))]);\n      }\n      parts = (new Call(func, args)).compileNode(o);\n      if (func.isGenerator || ((ref3 = func.base) != null ? ref3.isGenerator : void 0)) {\n        parts.unshift(this.makeCode(\"(yield* \"));\n        parts.push(this.makeCode(\")\"));\n      }\n      return parts;\n    };\n\n    Base.prototype.cache = function(o, level, isComplex) {\n      var complex, ref, sub;\n      complex = isComplex != null ? isComplex(this) : this.isComplex();\n      if (complex) {\n        ref = new IdentifierLiteral(o.scope.freeVariable('ref'));\n        sub = new Assign(ref, this);\n        if (level) {\n          return [sub.compileToFragments(o, level), [this.makeCode(ref.value)]];\n        } else {\n          return [sub, ref];\n        }\n      } else {\n        ref = level ? this.compileToFragments(o, level) : this;\n        return [ref, ref];\n      }\n    };\n\n    Base.prototype.cacheToCodeFragments = function(cacheValues) {\n      return [fragmentsToText(cacheValues[0]), fragmentsToText(cacheValues[1])];\n    };\n\n    Base.prototype.makeReturn = function(res) {\n      var me;\n      me = this.unwrapAll();\n      if (res) {\n        return new Call(new Literal(res + \".push\"), [me]);\n      } else {\n        return new Return(me);\n      }\n    };\n\n    Base.prototype.contains = function(pred) {\n      var node;\n      node = void 0;\n      this.traverseChildren(false, function(n) {\n        if (pred(n)) {\n          node = n;\n          return false;\n        }\n      });\n      return node;\n    };\n\n    Base.prototype.lastNonComment = function(list) {\n      var i;\n      i = list.length;\n      while (i--) {\n        if (!(list[i] instanceof Comment)) {\n          return list[i];\n        }\n      }\n      return null;\n    };\n\n    Base.prototype.toString = function(idt, name) {\n      var tree;\n      if (idt == null) {\n        idt = '';\n      }\n      if (name == null) {\n        name = this.constructor.name;\n      }\n      tree = '\\n' + idt + name;\n      if (this.soak) {\n        tree += '?';\n      }\n      this.eachChild(function(node) {\n        return tree += node.toString(idt + TAB);\n      });\n      return tree;\n    };\n\n    Base.prototype.eachChild = function(func) {\n      var attr, child, j, k, len1, len2, ref3, ref4;\n      if (!this.children) {\n        return this;\n      }\n      ref3 = this.children;\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        attr = ref3[j];\n        if (this[attr]) {\n          ref4 = flatten([this[attr]]);\n          for (k = 0, len2 = ref4.length; k < len2; k++) {\n            child = ref4[k];\n            if (func(child) === false) {\n              return this;\n            }\n          }\n        }\n      }\n      return this;\n    };\n\n    Base.prototype.traverseChildren = function(crossScope, func) {\n      return this.eachChild(function(child) {\n        var recur;\n        recur = func(child);\n        if (recur !== false) {\n          return child.traverseChildren(crossScope, func);\n        }\n      });\n    };\n\n    Base.prototype.invert = function() {\n      return new Op('!', this);\n    };\n\n    Base.prototype.unwrapAll = function() {\n      var node;\n      node = this;\n      while (node !== (node = node.unwrap())) {\n        continue;\n      }\n      return node;\n    };\n\n    Base.prototype.children = [];\n\n    Base.prototype.isStatement = NO;\n\n    Base.prototype.jumps = NO;\n\n    Base.prototype.isComplex = YES;\n\n    Base.prototype.isChainable = NO;\n\n    Base.prototype.isAssignable = NO;\n\n    Base.prototype.isNumber = NO;\n\n    Base.prototype.unwrap = THIS;\n\n    Base.prototype.unfoldSoak = NO;\n\n    Base.prototype.assigns = NO;\n\n    Base.prototype.updateLocationDataIfMissing = function(locationData) {\n      if (this.locationData) {\n        return this;\n      }\n      this.locationData = locationData;\n      return this.eachChild(function(child) {\n        return child.updateLocationDataIfMissing(locationData);\n      });\n    };\n\n    Base.prototype.error = function(message) {\n      return throwSyntaxError(message, this.locationData);\n    };\n\n    Base.prototype.makeCode = function(code) {\n      return new CodeFragment(this, code);\n    };\n\n    Base.prototype.wrapInBraces = function(fragments) {\n      return [].concat(this.makeCode('('), fragments, this.makeCode(')'));\n    };\n\n    Base.prototype.joinFragmentArrays = function(fragmentsList, joinStr) {\n      var answer, fragments, i, j, len1;\n      answer = [];\n      for (i = j = 0, len1 = fragmentsList.length; j < len1; i = ++j) {\n        fragments = fragmentsList[i];\n        if (i) {\n          answer.push(this.makeCode(joinStr));\n        }\n        answer = answer.concat(fragments);\n      }\n      return answer;\n    };\n\n    return Base;\n\n  })();\n\n  exports.Block = Block = (function(superClass1) {\n    extend1(Block, superClass1);\n\n    function Block(nodes) {\n      this.expressions = compact(flatten(nodes || []));\n    }\n\n    Block.prototype.children = ['expressions'];\n\n    Block.prototype.push = function(node) {\n      this.expressions.push(node);\n      return this;\n    };\n\n    Block.prototype.pop = function() {\n      return this.expressions.pop();\n    };\n\n    Block.prototype.unshift = function(node) {\n      this.expressions.unshift(node);\n      return this;\n    };\n\n    Block.prototype.unwrap = function() {\n      if (this.expressions.length === 1) {\n        return this.expressions[0];\n      } else {\n        return this;\n      }\n    };\n\n    Block.prototype.isEmpty = function() {\n      return !this.expressions.length;\n    };\n\n    Block.prototype.isStatement = function(o) {\n      var exp, j, len1, ref3;\n      ref3 = this.expressions;\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        exp = ref3[j];\n        if (exp.isStatement(o)) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    Block.prototype.jumps = function(o) {\n      var exp, j, jumpNode, len1, ref3;\n      ref3 = this.expressions;\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        exp = ref3[j];\n        if (jumpNode = exp.jumps(o)) {\n          return jumpNode;\n        }\n      }\n    };\n\n    Block.prototype.makeReturn = function(res) {\n      var expr, len;\n      len = this.expressions.length;\n      while (len--) {\n        expr = this.expressions[len];\n        if (!(expr instanceof Comment)) {\n          this.expressions[len] = expr.makeReturn(res);\n          if (expr instanceof Return && !expr.expression) {\n            this.expressions.splice(len, 1);\n          }\n          break;\n        }\n      }\n      return this;\n    };\n\n    Block.prototype.compileToFragments = function(o, level) {\n      if (o == null) {\n        o = {};\n      }\n      if (o.scope) {\n        return Block.__super__.compileToFragments.call(this, o, level);\n      } else {\n        return this.compileRoot(o);\n      }\n    };\n\n    Block.prototype.compileNode = function(o) {\n      var answer, compiledNodes, fragments, index, j, len1, node, ref3, top;\n      this.tab = o.indent;\n      top = o.level === LEVEL_TOP;\n      compiledNodes = [];\n      ref3 = this.expressions;\n      for (index = j = 0, len1 = ref3.length; j < len1; index = ++j) {\n        node = ref3[index];\n        node = node.unwrapAll();\n        node = node.unfoldSoak(o) || node;\n        if (node instanceof Block) {\n          compiledNodes.push(node.compileNode(o));\n        } else if (top) {\n          node.front = true;\n          fragments = node.compileToFragments(o);\n          if (!node.isStatement(o)) {\n            fragments.unshift(this.makeCode(\"\" + this.tab));\n            fragments.push(this.makeCode(\";\"));\n          }\n          compiledNodes.push(fragments);\n        } else {\n          compiledNodes.push(node.compileToFragments(o, LEVEL_LIST));\n        }\n      }\n      if (top) {\n        if (this.spaced) {\n          return [].concat(this.joinFragmentArrays(compiledNodes, '\\n\\n'), this.makeCode(\"\\n\"));\n        } else {\n          return this.joinFragmentArrays(compiledNodes, '\\n');\n        }\n      }\n      if (compiledNodes.length) {\n        answer = this.joinFragmentArrays(compiledNodes, ', ');\n      } else {\n        answer = [this.makeCode(\"void 0\")];\n      }\n      if (compiledNodes.length > 1 && o.level >= LEVEL_LIST) {\n        return this.wrapInBraces(answer);\n      } else {\n        return answer;\n      }\n    };\n\n    Block.prototype.compileRoot = function(o) {\n      var exp, fragments, i, j, len1, name, prelude, preludeExps, ref3, ref4, rest;\n      o.indent = o.bare ? '' : TAB;\n      o.level = LEVEL_TOP;\n      this.spaced = true;\n      o.scope = new Scope(null, this, null, (ref3 = o.referencedVars) != null ? ref3 : []);\n      ref4 = o.locals || [];\n      for (j = 0, len1 = ref4.length; j < len1; j++) {\n        name = ref4[j];\n        o.scope.parameter(name);\n      }\n      prelude = [];\n      if (!o.bare) {\n        preludeExps = (function() {\n          var k, len2, ref5, results;\n          ref5 = this.expressions;\n          results = [];\n          for (i = k = 0, len2 = ref5.length; k < len2; i = ++k) {\n            exp = ref5[i];\n            if (!(exp.unwrap() instanceof Comment)) {\n              break;\n            }\n            results.push(exp);\n          }\n          return results;\n        }).call(this);\n        rest = this.expressions.slice(preludeExps.length);\n        this.expressions = preludeExps;\n        if (preludeExps.length) {\n          prelude = this.compileNode(merge(o, {\n            indent: ''\n          }));\n          prelude.push(this.makeCode(\"\\n\"));\n        }\n        this.expressions = rest;\n      }\n      fragments = this.compileWithDeclarations(o);\n      if (o.bare) {\n        return fragments;\n      }\n      return [].concat(prelude, this.makeCode(\"(function() {\\n\"), fragments, this.makeCode(\"\\n}).call(this);\\n\"));\n    };\n\n    Block.prototype.compileWithDeclarations = function(o) {\n      var assigns, declars, exp, fragments, i, j, len1, post, ref3, ref4, ref5, rest, scope, spaced;\n      fragments = [];\n      post = [];\n      ref3 = this.expressions;\n      for (i = j = 0, len1 = ref3.length; j < len1; i = ++j) {\n        exp = ref3[i];\n        exp = exp.unwrap();\n        if (!(exp instanceof Comment || exp instanceof Literal)) {\n          break;\n        }\n      }\n      o = merge(o, {\n        level: LEVEL_TOP\n      });\n      if (i) {\n        rest = this.expressions.splice(i, 9e9);\n        ref4 = [this.spaced, false], spaced = ref4[0], this.spaced = ref4[1];\n        ref5 = [this.compileNode(o), spaced], fragments = ref5[0], this.spaced = ref5[1];\n        this.expressions = rest;\n      }\n      post = this.compileNode(o);\n      scope = o.scope;\n      if (scope.expressions === this) {\n        declars = o.scope.hasDeclarations();\n        assigns = scope.hasAssignments;\n        if (declars || assigns) {\n          if (i) {\n            fragments.push(this.makeCode('\\n'));\n          }\n          fragments.push(this.makeCode(this.tab + \"var \"));\n          if (declars) {\n            fragments.push(this.makeCode(scope.declaredVariables().join(', ')));\n          }\n          if (assigns) {\n            if (declars) {\n              fragments.push(this.makeCode(\",\\n\" + (this.tab + TAB)));\n            }\n            fragments.push(this.makeCode(scope.assignedVariables().join(\",\\n\" + (this.tab + TAB))));\n          }\n          fragments.push(this.makeCode(\";\\n\" + (this.spaced ? '\\n' : '')));\n        } else if (fragments.length && post.length) {\n          fragments.push(this.makeCode(\"\\n\"));\n        }\n      }\n      return fragments.concat(post);\n    };\n\n    Block.wrap = function(nodes) {\n      if (nodes.length === 1 && nodes[0] instanceof Block) {\n        return nodes[0];\n      }\n      return new Block(nodes);\n    };\n\n    return Block;\n\n  })(Base);\n\n  exports.Literal = Literal = (function(superClass1) {\n    extend1(Literal, superClass1);\n\n    function Literal(value1) {\n      this.value = value1;\n    }\n\n    Literal.prototype.isComplex = NO;\n\n    Literal.prototype.assigns = function(name) {\n      return name === this.value;\n    };\n\n    Literal.prototype.compileNode = function(o) {\n      return [this.makeCode(this.value)];\n    };\n\n    Literal.prototype.toString = function() {\n      return \" \" + (this.isStatement() ? Literal.__super__.toString.apply(this, arguments) : this.constructor.name) + \": \" + this.value;\n    };\n\n    return Literal;\n\n  })(Base);\n\n  exports.NumberLiteral = NumberLiteral = (function(superClass1) {\n    extend1(NumberLiteral, superClass1);\n\n    function NumberLiteral() {\n      return NumberLiteral.__super__.constructor.apply(this, arguments);\n    }\n\n    return NumberLiteral;\n\n  })(Literal);\n\n  exports.InfinityLiteral = InfinityLiteral = (function(superClass1) {\n    extend1(InfinityLiteral, superClass1);\n\n    function InfinityLiteral() {\n      return InfinityLiteral.__super__.constructor.apply(this, arguments);\n    }\n\n    InfinityLiteral.prototype.compileNode = function() {\n      return [this.makeCode('2e308')];\n    };\n\n    return InfinityLiteral;\n\n  })(NumberLiteral);\n\n  exports.NaNLiteral = NaNLiteral = (function(superClass1) {\n    extend1(NaNLiteral, superClass1);\n\n    function NaNLiteral() {\n      NaNLiteral.__super__.constructor.call(this, 'NaN');\n    }\n\n    NaNLiteral.prototype.compileNode = function(o) {\n      var code;\n      code = [this.makeCode('0/0')];\n      if (o.level >= LEVEL_OP) {\n        return this.wrapInBraces(code);\n      } else {\n        return code;\n      }\n    };\n\n    return NaNLiteral;\n\n  })(NumberLiteral);\n\n  exports.StringLiteral = StringLiteral = (function(superClass1) {\n    extend1(StringLiteral, superClass1);\n\n    function StringLiteral() {\n      return StringLiteral.__super__.constructor.apply(this, arguments);\n    }\n\n    return StringLiteral;\n\n  })(Literal);\n\n  exports.RegexLiteral = RegexLiteral = (function(superClass1) {\n    extend1(RegexLiteral, superClass1);\n\n    function RegexLiteral() {\n      return RegexLiteral.__super__.constructor.apply(this, arguments);\n    }\n\n    return RegexLiteral;\n\n  })(Literal);\n\n  exports.PassthroughLiteral = PassthroughLiteral = (function(superClass1) {\n    extend1(PassthroughLiteral, superClass1);\n\n    function PassthroughLiteral() {\n      return PassthroughLiteral.__super__.constructor.apply(this, arguments);\n    }\n\n    return PassthroughLiteral;\n\n  })(Literal);\n\n  exports.IdentifierLiteral = IdentifierLiteral = (function(superClass1) {\n    extend1(IdentifierLiteral, superClass1);\n\n    function IdentifierLiteral() {\n      return IdentifierLiteral.__super__.constructor.apply(this, arguments);\n    }\n\n    IdentifierLiteral.prototype.isAssignable = YES;\n\n    return IdentifierLiteral;\n\n  })(Literal);\n\n  exports.PropertyName = PropertyName = (function(superClass1) {\n    extend1(PropertyName, superClass1);\n\n    function PropertyName() {\n      return PropertyName.__super__.constructor.apply(this, arguments);\n    }\n\n    PropertyName.prototype.isAssignable = YES;\n\n    return PropertyName;\n\n  })(Literal);\n\n  exports.StatementLiteral = StatementLiteral = (function(superClass1) {\n    extend1(StatementLiteral, superClass1);\n\n    function StatementLiteral() {\n      return StatementLiteral.__super__.constructor.apply(this, arguments);\n    }\n\n    StatementLiteral.prototype.isStatement = YES;\n\n    StatementLiteral.prototype.makeReturn = THIS;\n\n    StatementLiteral.prototype.jumps = function(o) {\n      if (this.value === 'break' && !((o != null ? o.loop : void 0) || (o != null ? o.block : void 0))) {\n        return this;\n      }\n      if (this.value === 'continue' && !(o != null ? o.loop : void 0)) {\n        return this;\n      }\n    };\n\n    StatementLiteral.prototype.compileNode = function(o) {\n      return [this.makeCode(\"\" + this.tab + this.value + \";\")];\n    };\n\n    return StatementLiteral;\n\n  })(Literal);\n\n  exports.ThisLiteral = ThisLiteral = (function(superClass1) {\n    extend1(ThisLiteral, superClass1);\n\n    function ThisLiteral() {\n      ThisLiteral.__super__.constructor.call(this, 'this');\n    }\n\n    ThisLiteral.prototype.compileNode = function(o) {\n      var code, ref3;\n      code = ((ref3 = o.scope.method) != null ? ref3.bound : void 0) ? o.scope.method.context : this.value;\n      return [this.makeCode(code)];\n    };\n\n    return ThisLiteral;\n\n  })(Literal);\n\n  exports.UndefinedLiteral = UndefinedLiteral = (function(superClass1) {\n    extend1(UndefinedLiteral, superClass1);\n\n    function UndefinedLiteral() {\n      UndefinedLiteral.__super__.constructor.call(this, 'undefined');\n    }\n\n    UndefinedLiteral.prototype.compileNode = function(o) {\n      return [this.makeCode(o.level >= LEVEL_ACCESS ? '(void 0)' : 'void 0')];\n    };\n\n    return UndefinedLiteral;\n\n  })(Literal);\n\n  exports.NullLiteral = NullLiteral = (function(superClass1) {\n    extend1(NullLiteral, superClass1);\n\n    function NullLiteral() {\n      NullLiteral.__super__.constructor.call(this, 'null');\n    }\n\n    return NullLiteral;\n\n  })(Literal);\n\n  exports.BooleanLiteral = BooleanLiteral = (function(superClass1) {\n    extend1(BooleanLiteral, superClass1);\n\n    function BooleanLiteral() {\n      return BooleanLiteral.__super__.constructor.apply(this, arguments);\n    }\n\n    return BooleanLiteral;\n\n  })(Literal);\n\n  exports.Return = Return = (function(superClass1) {\n    extend1(Return, superClass1);\n\n    function Return(expression) {\n      this.expression = expression;\n    }\n\n    Return.prototype.children = ['expression'];\n\n    Return.prototype.isStatement = YES;\n\n    Return.prototype.makeReturn = THIS;\n\n    Return.prototype.jumps = THIS;\n\n    Return.prototype.compileToFragments = function(o, level) {\n      var expr, ref3;\n      expr = (ref3 = this.expression) != null ? ref3.makeReturn() : void 0;\n      if (expr && !(expr instanceof Return)) {\n        return expr.compileToFragments(o, level);\n      } else {\n        return Return.__super__.compileToFragments.call(this, o, level);\n      }\n    };\n\n    Return.prototype.compileNode = function(o) {\n      var answer;\n      answer = [];\n      answer.push(this.makeCode(this.tab + (\"return\" + (this.expression ? \" \" : \"\"))));\n      if (this.expression) {\n        answer = answer.concat(this.expression.compileToFragments(o, LEVEL_PAREN));\n      }\n      answer.push(this.makeCode(\";\"));\n      return answer;\n    };\n\n    return Return;\n\n  })(Base);\n\n  exports.YieldReturn = YieldReturn = (function(superClass1) {\n    extend1(YieldReturn, superClass1);\n\n    function YieldReturn() {\n      return YieldReturn.__super__.constructor.apply(this, arguments);\n    }\n\n    YieldReturn.prototype.compileNode = function(o) {\n      if (o.scope.parent == null) {\n        this.error('yield can only occur inside functions');\n      }\n      return YieldReturn.__super__.compileNode.apply(this, arguments);\n    };\n\n    return YieldReturn;\n\n  })(Return);\n\n  exports.Value = Value = (function(superClass1) {\n    extend1(Value, superClass1);\n\n    function Value(base, props, tag) {\n      if (!props && base instanceof Value) {\n        return base;\n      }\n      this.base = base;\n      this.properties = props || [];\n      if (tag) {\n        this[tag] = true;\n      }\n      return this;\n    }\n\n    Value.prototype.children = ['base', 'properties'];\n\n    Value.prototype.add = function(props) {\n      this.properties = this.properties.concat(props);\n      return this;\n    };\n\n    Value.prototype.hasProperties = function() {\n      return !!this.properties.length;\n    };\n\n    Value.prototype.bareLiteral = function(type) {\n      return !this.properties.length && this.base instanceof type;\n    };\n\n    Value.prototype.isArray = function() {\n      return this.bareLiteral(Arr);\n    };\n\n    Value.prototype.isRange = function() {\n      return this.bareLiteral(Range);\n    };\n\n    Value.prototype.isComplex = function() {\n      return this.hasProperties() || this.base.isComplex();\n    };\n\n    Value.prototype.isAssignable = function() {\n      return this.hasProperties() || this.base.isAssignable();\n    };\n\n    Value.prototype.isNumber = function() {\n      return this.bareLiteral(NumberLiteral);\n    };\n\n    Value.prototype.isString = function() {\n      return this.bareLiteral(StringLiteral);\n    };\n\n    Value.prototype.isRegex = function() {\n      return this.bareLiteral(RegexLiteral);\n    };\n\n    Value.prototype.isUndefined = function() {\n      return this.bareLiteral(UndefinedLiteral);\n    };\n\n    Value.prototype.isNull = function() {\n      return this.bareLiteral(NullLiteral);\n    };\n\n    Value.prototype.isBoolean = function() {\n      return this.bareLiteral(BooleanLiteral);\n    };\n\n    Value.prototype.isAtomic = function() {\n      var j, len1, node, ref3;\n      ref3 = this.properties.concat(this.base);\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        node = ref3[j];\n        if (node.soak || node instanceof Call) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    Value.prototype.isNotCallable = function() {\n      return this.isNumber() || this.isString() || this.isRegex() || this.isArray() || this.isRange() || this.isSplice() || this.isObject() || this.isUndefined() || this.isNull() || this.isBoolean();\n    };\n\n    Value.prototype.isStatement = function(o) {\n      return !this.properties.length && this.base.isStatement(o);\n    };\n\n    Value.prototype.assigns = function(name) {\n      return !this.properties.length && this.base.assigns(name);\n    };\n\n    Value.prototype.jumps = function(o) {\n      return !this.properties.length && this.base.jumps(o);\n    };\n\n    Value.prototype.isObject = function(onlyGenerated) {\n      if (this.properties.length) {\n        return false;\n      }\n      return (this.base instanceof Obj) && (!onlyGenerated || this.base.generated);\n    };\n\n    Value.prototype.isSplice = function() {\n      var lastProp, ref3;\n      ref3 = this.properties, lastProp = ref3[ref3.length - 1];\n      return lastProp instanceof Slice;\n    };\n\n    Value.prototype.looksStatic = function(className) {\n      var ref3;\n      return this.base.value === className && this.properties.length === 1 && ((ref3 = this.properties[0].name) != null ? ref3.value : void 0) !== 'prototype';\n    };\n\n    Value.prototype.unwrap = function() {\n      if (this.properties.length) {\n        return this;\n      } else {\n        return this.base;\n      }\n    };\n\n    Value.prototype.cacheReference = function(o) {\n      var base, bref, name, nref, ref3;\n      ref3 = this.properties, name = ref3[ref3.length - 1];\n      if (this.properties.length < 2 && !this.base.isComplex() && !(name != null ? name.isComplex() : void 0)) {\n        return [this, this];\n      }\n      base = new Value(this.base, this.properties.slice(0, -1));\n      if (base.isComplex()) {\n        bref = new IdentifierLiteral(o.scope.freeVariable('base'));\n        base = new Value(new Parens(new Assign(bref, base)));\n      }\n      if (!name) {\n        return [base, bref];\n      }\n      if (name.isComplex()) {\n        nref = new IdentifierLiteral(o.scope.freeVariable('name'));\n        name = new Index(new Assign(nref, name.index));\n        nref = new Index(nref);\n      }\n      return [base.add(name), new Value(bref || base.base, [nref || name])];\n    };\n\n    Value.prototype.compileNode = function(o) {\n      var fragments, j, len1, prop, props;\n      this.base.front = this.front;\n      props = this.properties;\n      fragments = this.base.compileToFragments(o, (props.length ? LEVEL_ACCESS : null));\n      if (props.length && SIMPLENUM.test(fragmentsToText(fragments))) {\n        fragments.push(this.makeCode('.'));\n      }\n      for (j = 0, len1 = props.length; j < len1; j++) {\n        prop = props[j];\n        fragments.push.apply(fragments, prop.compileToFragments(o));\n      }\n      return fragments;\n    };\n\n    Value.prototype.unfoldSoak = function(o) {\n      return this.unfoldedSoak != null ? this.unfoldedSoak : this.unfoldedSoak = (function(_this) {\n        return function() {\n          var fst, i, ifn, j, len1, prop, ref, ref3, ref4, snd;\n          if (ifn = _this.base.unfoldSoak(o)) {\n            (ref3 = ifn.body.properties).push.apply(ref3, _this.properties);\n            return ifn;\n          }\n          ref4 = _this.properties;\n          for (i = j = 0, len1 = ref4.length; j < len1; i = ++j) {\n            prop = ref4[i];\n            if (!prop.soak) {\n              continue;\n            }\n            prop.soak = false;\n            fst = new Value(_this.base, _this.properties.slice(0, i));\n            snd = new Value(_this.base, _this.properties.slice(i));\n            if (fst.isComplex()) {\n              ref = new IdentifierLiteral(o.scope.freeVariable('ref'));\n              fst = new Parens(new Assign(ref, fst));\n              snd.base = ref;\n            }\n            return new If(new Existence(fst), snd, {\n              soak: true\n            });\n          }\n          return false;\n        };\n      })(this)();\n    };\n\n    return Value;\n\n  })(Base);\n\n  exports.Comment = Comment = (function(superClass1) {\n    extend1(Comment, superClass1);\n\n    function Comment(comment1) {\n      this.comment = comment1;\n    }\n\n    Comment.prototype.isStatement = YES;\n\n    Comment.prototype.makeReturn = THIS;\n\n    Comment.prototype.compileNode = function(o, level) {\n      var code, comment;\n      comment = this.comment.replace(/^(\\s*)#(?=\\s)/gm, \"$1 *\");\n      code = \"/*\" + (multident(comment, this.tab)) + (indexOf.call(comment, '\\n') >= 0 ? \"\\n\" + this.tab : '') + \" */\";\n      if ((level || o.level) === LEVEL_TOP) {\n        code = o.indent + code;\n      }\n      return [this.makeCode(\"\\n\"), this.makeCode(code)];\n    };\n\n    return Comment;\n\n  })(Base);\n\n  exports.Call = Call = (function(superClass1) {\n    extend1(Call, superClass1);\n\n    function Call(variable1, args1, soak1) {\n      this.variable = variable1;\n      this.args = args1 != null ? args1 : [];\n      this.soak = soak1;\n      this.isNew = false;\n      if (this.variable instanceof Value && this.variable.isNotCallable()) {\n        this.variable.error(\"literal is not a function\");\n      }\n    }\n\n    Call.prototype.children = ['variable', 'args'];\n\n    Call.prototype.updateLocationDataIfMissing = function(locationData) {\n      var base, ref3;\n      if (this.locationData && this.needsUpdatedStartLocation) {\n        this.locationData.first_line = locationData.first_line;\n        this.locationData.first_column = locationData.first_column;\n        base = ((ref3 = this.variable) != null ? ref3.base : void 0) || this.variable;\n        if (base.needsUpdatedStartLocation) {\n          this.variable.locationData.first_line = locationData.first_line;\n          this.variable.locationData.first_column = locationData.first_column;\n          base.updateLocationDataIfMissing(locationData);\n        }\n        delete this.needsUpdatedStartLocation;\n      }\n      return Call.__super__.updateLocationDataIfMissing.apply(this, arguments);\n    };\n\n    Call.prototype.newInstance = function() {\n      var base, ref3;\n      base = ((ref3 = this.variable) != null ? ref3.base : void 0) || this.variable;\n      if (base instanceof Call && !base.isNew) {\n        base.newInstance();\n      } else {\n        this.isNew = true;\n      }\n      this.needsUpdatedStartLocation = true;\n      return this;\n    };\n\n    Call.prototype.unfoldSoak = function(o) {\n      var call, ifn, j, left, len1, list, ref3, ref4, rite;\n      if (this.soak) {\n        if (this instanceof SuperCall) {\n          left = new Literal(this.superReference(o));\n          rite = new Value(left);\n        } else {\n          if (ifn = unfoldSoak(o, this, 'variable')) {\n            return ifn;\n          }\n          ref3 = new Value(this.variable).cacheReference(o), left = ref3[0], rite = ref3[1];\n        }\n        rite = new Call(rite, this.args);\n        rite.isNew = this.isNew;\n        left = new Literal(\"typeof \" + (left.compile(o)) + \" === \\\"function\\\"\");\n        return new If(left, new Value(rite), {\n          soak: true\n        });\n      }\n      call = this;\n      list = [];\n      while (true) {\n        if (call.variable instanceof Call) {\n          list.push(call);\n          call = call.variable;\n          continue;\n        }\n        if (!(call.variable instanceof Value)) {\n          break;\n        }\n        list.push(call);\n        if (!((call = call.variable.base) instanceof Call)) {\n          break;\n        }\n      }\n      ref4 = list.reverse();\n      for (j = 0, len1 = ref4.length; j < len1; j++) {\n        call = ref4[j];\n        if (ifn) {\n          if (call.variable instanceof Call) {\n            call.variable = ifn;\n          } else {\n            call.variable.base = ifn;\n          }\n        }\n        ifn = unfoldSoak(o, call, 'variable');\n      }\n      return ifn;\n    };\n\n    Call.prototype.compileNode = function(o) {\n      var arg, argIndex, compiledArgs, compiledArray, fragments, j, len1, preface, ref3, ref4;\n      if ((ref3 = this.variable) != null) {\n        ref3.front = this.front;\n      }\n      compiledArray = Splat.compileSplattedArray(o, this.args, true);\n      if (compiledArray.length) {\n        return this.compileSplat(o, compiledArray);\n      }\n      compiledArgs = [];\n      ref4 = this.args;\n      for (argIndex = j = 0, len1 = ref4.length; j < len1; argIndex = ++j) {\n        arg = ref4[argIndex];\n        if (argIndex) {\n          compiledArgs.push(this.makeCode(\", \"));\n        }\n        compiledArgs.push.apply(compiledArgs, arg.compileToFragments(o, LEVEL_LIST));\n      }\n      fragments = [];\n      if (this instanceof SuperCall) {\n        preface = this.superReference(o) + (\".call(\" + (this.superThis(o)));\n        if (compiledArgs.length) {\n          preface += \", \";\n        }\n        fragments.push(this.makeCode(preface));\n      } else {\n        if (this.isNew) {\n          fragments.push(this.makeCode('new '));\n        }\n        fragments.push.apply(fragments, this.variable.compileToFragments(o, LEVEL_ACCESS));\n        fragments.push(this.makeCode(\"(\"));\n      }\n      fragments.push.apply(fragments, compiledArgs);\n      fragments.push(this.makeCode(\")\"));\n      return fragments;\n    };\n\n    Call.prototype.compileSplat = function(o, splatArgs) {\n      var answer, base, fun, idt, name, ref;\n      if (this instanceof SuperCall) {\n        return [].concat(this.makeCode((this.superReference(o)) + \".apply(\" + (this.superThis(o)) + \", \"), splatArgs, this.makeCode(\")\"));\n      }\n      if (this.isNew) {\n        idt = this.tab + TAB;\n        return [].concat(this.makeCode(\"(function(func, args, ctor) {\\n\" + idt + \"ctor.prototype = func.prototype;\\n\" + idt + \"var child = new ctor, result = func.apply(child, args);\\n\" + idt + \"return Object(result) === result ? result : child;\\n\" + this.tab + \"})(\"), this.variable.compileToFragments(o, LEVEL_LIST), this.makeCode(\", \"), splatArgs, this.makeCode(\", function(){})\"));\n      }\n      answer = [];\n      base = new Value(this.variable);\n      if ((name = base.properties.pop()) && base.isComplex()) {\n        ref = o.scope.freeVariable('ref');\n        answer = answer.concat(this.makeCode(\"(\" + ref + \" = \"), base.compileToFragments(o, LEVEL_LIST), this.makeCode(\")\"), name.compileToFragments(o));\n      } else {\n        fun = base.compileToFragments(o, LEVEL_ACCESS);\n        if (SIMPLENUM.test(fragmentsToText(fun))) {\n          fun = this.wrapInBraces(fun);\n        }\n        if (name) {\n          ref = fragmentsToText(fun);\n          fun.push.apply(fun, name.compileToFragments(o));\n        } else {\n          ref = 'null';\n        }\n        answer = answer.concat(fun);\n      }\n      return answer = answer.concat(this.makeCode(\".apply(\" + ref + \", \"), splatArgs, this.makeCode(\")\"));\n    };\n\n    return Call;\n\n  })(Base);\n\n  exports.SuperCall = SuperCall = (function(superClass1) {\n    extend1(SuperCall, superClass1);\n\n    function SuperCall(args) {\n      SuperCall.__super__.constructor.call(this, null, args != null ? args : [new Splat(new IdentifierLiteral('arguments'))]);\n      this.isBare = args != null;\n    }\n\n    SuperCall.prototype.superReference = function(o) {\n      var accesses, base, bref, klass, method, name, nref, variable;\n      method = o.scope.namedMethod();\n      if (method != null ? method.klass : void 0) {\n        klass = method.klass, name = method.name, variable = method.variable;\n        if (klass.isComplex()) {\n          bref = new IdentifierLiteral(o.scope.parent.freeVariable('base'));\n          base = new Value(new Parens(new Assign(bref, klass)));\n          variable.base = base;\n          variable.properties.splice(0, klass.properties.length);\n        }\n        if (name.isComplex() || (name instanceof Index && name.index.isAssignable())) {\n          nref = new IdentifierLiteral(o.scope.parent.freeVariable('name'));\n          name = new Index(new Assign(nref, name.index));\n          variable.properties.pop();\n          variable.properties.push(name);\n        }\n        accesses = [new Access(new PropertyName('__super__'))];\n        if (method[\"static\"]) {\n          accesses.push(new Access(new PropertyName('constructor')));\n        }\n        accesses.push(nref != null ? new Index(nref) : name);\n        return (new Value(bref != null ? bref : klass, accesses)).compile(o);\n      } else if (method != null ? method.ctor : void 0) {\n        return method.name + \".__super__.constructor\";\n      } else {\n        return this.error('cannot call super outside of an instance method.');\n      }\n    };\n\n    SuperCall.prototype.superThis = function(o) {\n      var method;\n      method = o.scope.method;\n      return (method && !method.klass && method.context) || \"this\";\n    };\n\n    return SuperCall;\n\n  })(Call);\n\n  exports.RegexWithInterpolations = RegexWithInterpolations = (function(superClass1) {\n    extend1(RegexWithInterpolations, superClass1);\n\n    function RegexWithInterpolations(args) {\n      if (args == null) {\n        args = [];\n      }\n      RegexWithInterpolations.__super__.constructor.call(this, new Value(new IdentifierLiteral('RegExp')), args, false);\n    }\n\n    return RegexWithInterpolations;\n\n  })(Call);\n\n  exports.TaggedTemplateCall = TaggedTemplateCall = (function(superClass1) {\n    extend1(TaggedTemplateCall, superClass1);\n\n    function TaggedTemplateCall(variable, arg, soak) {\n      if (arg instanceof StringLiteral) {\n        arg = new StringWithInterpolations(Block.wrap([new Value(arg)]));\n      }\n      TaggedTemplateCall.__super__.constructor.call(this, variable, [arg], soak);\n    }\n\n    TaggedTemplateCall.prototype.compileNode = function(o) {\n      o.inTaggedTemplateCall = true;\n      return this.variable.compileToFragments(o, LEVEL_ACCESS).concat(this.args[0].compileToFragments(o, LEVEL_LIST));\n    };\n\n    return TaggedTemplateCall;\n\n  })(Call);\n\n  exports.Extends = Extends = (function(superClass1) {\n    extend1(Extends, superClass1);\n\n    function Extends(child1, parent1) {\n      this.child = child1;\n      this.parent = parent1;\n    }\n\n    Extends.prototype.children = ['child', 'parent'];\n\n    Extends.prototype.compileToFragments = function(o) {\n      return new Call(new Value(new Literal(utility('extend', o))), [this.child, this.parent]).compileToFragments(o);\n    };\n\n    return Extends;\n\n  })(Base);\n\n  exports.Access = Access = (function(superClass1) {\n    extend1(Access, superClass1);\n\n    function Access(name1, tag) {\n      this.name = name1;\n      this.soak = tag === 'soak';\n    }\n\n    Access.prototype.children = ['name'];\n\n    Access.prototype.compileToFragments = function(o) {\n      var name, node, ref3;\n      name = this.name.compileToFragments(o);\n      node = this.name.unwrap();\n      if (node instanceof PropertyName) {\n        if (ref3 = node.value, indexOf.call(JS_FORBIDDEN, ref3) >= 0) {\n          return [this.makeCode('[\"')].concat(slice.call(name), [this.makeCode('\"]')]);\n        } else {\n          return [this.makeCode('.')].concat(slice.call(name));\n        }\n      } else {\n        return [this.makeCode('[')].concat(slice.call(name), [this.makeCode(']')]);\n      }\n    };\n\n    Access.prototype.isComplex = NO;\n\n    return Access;\n\n  })(Base);\n\n  exports.Index = Index = (function(superClass1) {\n    extend1(Index, superClass1);\n\n    function Index(index1) {\n      this.index = index1;\n    }\n\n    Index.prototype.children = ['index'];\n\n    Index.prototype.compileToFragments = function(o) {\n      return [].concat(this.makeCode(\"[\"), this.index.compileToFragments(o, LEVEL_PAREN), this.makeCode(\"]\"));\n    };\n\n    Index.prototype.isComplex = function() {\n      return this.index.isComplex();\n    };\n\n    return Index;\n\n  })(Base);\n\n  exports.Range = Range = (function(superClass1) {\n    extend1(Range, superClass1);\n\n    Range.prototype.children = ['from', 'to'];\n\n    function Range(from1, to1, tag) {\n      this.from = from1;\n      this.to = to1;\n      this.exclusive = tag === 'exclusive';\n      this.equals = this.exclusive ? '' : '=';\n    }\n\n    Range.prototype.compileVariables = function(o) {\n      var isComplex, ref3, ref4, ref5, step;\n      o = merge(o, {\n        top: true\n      });\n      isComplex = del(o, 'isComplex');\n      ref3 = this.cacheToCodeFragments(this.from.cache(o, LEVEL_LIST, isComplex)), this.fromC = ref3[0], this.fromVar = ref3[1];\n      ref4 = this.cacheToCodeFragments(this.to.cache(o, LEVEL_LIST, isComplex)), this.toC = ref4[0], this.toVar = ref4[1];\n      if (step = del(o, 'step')) {\n        ref5 = this.cacheToCodeFragments(step.cache(o, LEVEL_LIST, isComplex)), this.step = ref5[0], this.stepVar = ref5[1];\n      }\n      this.fromNum = this.from.isNumber() ? Number(this.fromVar) : null;\n      this.toNum = this.to.isNumber() ? Number(this.toVar) : null;\n      return this.stepNum = (step != null ? step.isNumber() : void 0) ? Number(this.stepVar) : null;\n    };\n\n    Range.prototype.compileNode = function(o) {\n      var cond, condPart, from, gt, idx, idxName, known, lt, namedIndex, ref3, ref4, stepPart, to, varPart;\n      if (!this.fromVar) {\n        this.compileVariables(o);\n      }\n      if (!o.index) {\n        return this.compileArray(o);\n      }\n      known = (this.fromNum != null) && (this.toNum != null);\n      idx = del(o, 'index');\n      idxName = del(o, 'name');\n      namedIndex = idxName && idxName !== idx;\n      varPart = idx + \" = \" + this.fromC;\n      if (this.toC !== this.toVar) {\n        varPart += \", \" + this.toC;\n      }\n      if (this.step !== this.stepVar) {\n        varPart += \", \" + this.step;\n      }\n      ref3 = [idx + \" <\" + this.equals, idx + \" >\" + this.equals], lt = ref3[0], gt = ref3[1];\n      condPart = this.stepNum != null ? this.stepNum > 0 ? lt + \" \" + this.toVar : gt + \" \" + this.toVar : known ? ((ref4 = [this.fromNum, this.toNum], from = ref4[0], to = ref4[1], ref4), from <= to ? lt + \" \" + to : gt + \" \" + to) : (cond = this.stepVar ? this.stepVar + \" > 0\" : this.fromVar + \" <= \" + this.toVar, cond + \" ? \" + lt + \" \" + this.toVar + \" : \" + gt + \" \" + this.toVar);\n      stepPart = this.stepVar ? idx + \" += \" + this.stepVar : known ? namedIndex ? from <= to ? \"++\" + idx : \"--\" + idx : from <= to ? idx + \"++\" : idx + \"--\" : namedIndex ? cond + \" ? ++\" + idx + \" : --\" + idx : cond + \" ? \" + idx + \"++ : \" + idx + \"--\";\n      if (namedIndex) {\n        varPart = idxName + \" = \" + varPart;\n      }\n      if (namedIndex) {\n        stepPart = idxName + \" = \" + stepPart;\n      }\n      return [this.makeCode(varPart + \"; \" + condPart + \"; \" + stepPart)];\n    };\n\n    Range.prototype.compileArray = function(o) {\n      var args, body, cond, hasArgs, i, idt, j, known, post, pre, range, ref3, ref4, result, results, vars;\n      known = (this.fromNum != null) && (this.toNum != null);\n      if (known && Math.abs(this.fromNum - this.toNum) <= 20) {\n        range = (function() {\n          results = [];\n          for (var j = ref3 = this.fromNum, ref4 = this.toNum; ref3 <= ref4 ? j <= ref4 : j >= ref4; ref3 <= ref4 ? j++ : j--){ results.push(j); }\n          return results;\n        }).apply(this);\n        if (this.exclusive) {\n          range.pop();\n        }\n        return [this.makeCode(\"[\" + (range.join(', ')) + \"]\")];\n      }\n      idt = this.tab + TAB;\n      i = o.scope.freeVariable('i', {\n        single: true\n      });\n      result = o.scope.freeVariable('results');\n      pre = \"\\n\" + idt + result + \" = [];\";\n      if (known) {\n        o.index = i;\n        body = fragmentsToText(this.compileNode(o));\n      } else {\n        vars = (i + \" = \" + this.fromC) + (this.toC !== this.toVar ? \", \" + this.toC : '');\n        cond = this.fromVar + \" <= \" + this.toVar;\n        body = \"var \" + vars + \"; \" + cond + \" ? \" + i + \" <\" + this.equals + \" \" + this.toVar + \" : \" + i + \" >\" + this.equals + \" \" + this.toVar + \"; \" + cond + \" ? \" + i + \"++ : \" + i + \"--\";\n      }\n      post = \"{ \" + result + \".push(\" + i + \"); }\\n\" + idt + \"return \" + result + \";\\n\" + o.indent;\n      hasArgs = function(node) {\n        return node != null ? node.contains(isLiteralArguments) : void 0;\n      };\n      if (hasArgs(this.from) || hasArgs(this.to)) {\n        args = ', arguments';\n      }\n      return [this.makeCode(\"(function() {\" + pre + \"\\n\" + idt + \"for (\" + body + \")\" + post + \"}).apply(this\" + (args != null ? args : '') + \")\")];\n    };\n\n    return Range;\n\n  })(Base);\n\n  exports.Slice = Slice = (function(superClass1) {\n    extend1(Slice, superClass1);\n\n    Slice.prototype.children = ['range'];\n\n    function Slice(range1) {\n      this.range = range1;\n      Slice.__super__.constructor.call(this);\n    }\n\n    Slice.prototype.compileNode = function(o) {\n      var compiled, compiledText, from, fromCompiled, ref3, to, toStr;\n      ref3 = this.range, to = ref3.to, from = ref3.from;\n      fromCompiled = from && from.compileToFragments(o, LEVEL_PAREN) || [this.makeCode('0')];\n      if (to) {\n        compiled = to.compileToFragments(o, LEVEL_PAREN);\n        compiledText = fragmentsToText(compiled);\n        if (!(!this.range.exclusive && +compiledText === -1)) {\n          toStr = ', ' + (this.range.exclusive ? compiledText : to.isNumber() ? \"\" + (+compiledText + 1) : (compiled = to.compileToFragments(o, LEVEL_ACCESS), \"+\" + (fragmentsToText(compiled)) + \" + 1 || 9e9\"));\n        }\n      }\n      return [this.makeCode(\".slice(\" + (fragmentsToText(fromCompiled)) + (toStr || '') + \")\")];\n    };\n\n    return Slice;\n\n  })(Base);\n\n  exports.Obj = Obj = (function(superClass1) {\n    extend1(Obj, superClass1);\n\n    function Obj(props, generated) {\n      this.generated = generated != null ? generated : false;\n      this.objects = this.properties = props || [];\n    }\n\n    Obj.prototype.children = ['properties'];\n\n    Obj.prototype.compileNode = function(o) {\n      var answer, dynamicIndex, hasDynamic, i, idt, indent, j, join, k, key, l, lastNoncom, len1, len2, len3, node, oref, prop, props, ref3, value;\n      props = this.properties;\n      if (this.generated) {\n        for (j = 0, len1 = props.length; j < len1; j++) {\n          node = props[j];\n          if (node instanceof Value) {\n            node.error('cannot have an implicit value in an implicit object');\n          }\n        }\n      }\n      for (dynamicIndex = k = 0, len2 = props.length; k < len2; dynamicIndex = ++k) {\n        prop = props[dynamicIndex];\n        if ((prop.variable || prop).base instanceof Parens) {\n          break;\n        }\n      }\n      hasDynamic = dynamicIndex < props.length;\n      idt = o.indent += TAB;\n      lastNoncom = this.lastNonComment(this.properties);\n      answer = [];\n      if (hasDynamic) {\n        oref = o.scope.freeVariable('obj');\n        answer.push(this.makeCode(\"(\\n\" + idt + oref + \" = \"));\n      }\n      answer.push(this.makeCode(\"{\" + (props.length === 0 || dynamicIndex === 0 ? '}' : '\\n')));\n      for (i = l = 0, len3 = props.length; l < len3; i = ++l) {\n        prop = props[i];\n        if (i === dynamicIndex) {\n          if (i !== 0) {\n            answer.push(this.makeCode(\"\\n\" + idt + \"}\"));\n          }\n          answer.push(this.makeCode(',\\n'));\n        }\n        join = i === props.length - 1 || i === dynamicIndex - 1 ? '' : prop === lastNoncom || prop instanceof Comment ? '\\n' : ',\\n';\n        indent = prop instanceof Comment ? '' : idt;\n        if (hasDynamic && i < dynamicIndex) {\n          indent += TAB;\n        }\n        if (prop instanceof Assign) {\n          if (prop.context !== 'object') {\n            prop.operatorToken.error(\"unexpected \" + prop.operatorToken.value);\n          }\n          if (prop.variable instanceof Value && prop.variable.hasProperties()) {\n            prop.variable.error('invalid object key');\n          }\n        }\n        if (prop instanceof Value && prop[\"this\"]) {\n          prop = new Assign(prop.properties[0].name, prop, 'object');\n        }\n        if (!(prop instanceof Comment)) {\n          if (i < dynamicIndex) {\n            if (!(prop instanceof Assign)) {\n              prop = new Assign(prop, prop, 'object');\n            }\n          } else {\n            if (prop instanceof Assign) {\n              key = prop.variable;\n              value = prop.value;\n            } else {\n              ref3 = prop.base.cache(o), key = ref3[0], value = ref3[1];\n              if (key instanceof IdentifierLiteral) {\n                key = new PropertyName(key.value);\n              }\n            }\n            prop = new Assign(new Value(new IdentifierLiteral(oref), [new Access(key)]), value);\n          }\n        }\n        if (indent) {\n          answer.push(this.makeCode(indent));\n        }\n        answer.push.apply(answer, prop.compileToFragments(o, LEVEL_TOP));\n        if (join) {\n          answer.push(this.makeCode(join));\n        }\n      }\n      if (hasDynamic) {\n        answer.push(this.makeCode(\",\\n\" + idt + oref + \"\\n\" + this.tab + \")\"));\n      } else {\n        if (props.length !== 0) {\n          answer.push(this.makeCode(\"\\n\" + this.tab + \"}\"));\n        }\n      }\n      if (this.front && !hasDynamic) {\n        return this.wrapInBraces(answer);\n      } else {\n        return answer;\n      }\n    };\n\n    Obj.prototype.assigns = function(name) {\n      var j, len1, prop, ref3;\n      ref3 = this.properties;\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        prop = ref3[j];\n        if (prop.assigns(name)) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    return Obj;\n\n  })(Base);\n\n  exports.Arr = Arr = (function(superClass1) {\n    extend1(Arr, superClass1);\n\n    function Arr(objs) {\n      this.objects = objs || [];\n    }\n\n    Arr.prototype.children = ['objects'];\n\n    Arr.prototype.compileNode = function(o) {\n      var answer, compiledObjs, fragments, index, j, len1, obj;\n      if (!this.objects.length) {\n        return [this.makeCode('[]')];\n      }\n      o.indent += TAB;\n      answer = Splat.compileSplattedArray(o, this.objects);\n      if (answer.length) {\n        return answer;\n      }\n      answer = [];\n      compiledObjs = (function() {\n        var j, len1, ref3, results;\n        ref3 = this.objects;\n        results = [];\n        for (j = 0, len1 = ref3.length; j < len1; j++) {\n          obj = ref3[j];\n          results.push(obj.compileToFragments(o, LEVEL_LIST));\n        }\n        return results;\n      }).call(this);\n      for (index = j = 0, len1 = compiledObjs.length; j < len1; index = ++j) {\n        fragments = compiledObjs[index];\n        if (index) {\n          answer.push(this.makeCode(\", \"));\n        }\n        answer.push.apply(answer, fragments);\n      }\n      if (fragmentsToText(answer).indexOf('\\n') >= 0) {\n        answer.unshift(this.makeCode(\"[\\n\" + o.indent));\n        answer.push(this.makeCode(\"\\n\" + this.tab + \"]\"));\n      } else {\n        answer.unshift(this.makeCode(\"[\"));\n        answer.push(this.makeCode(\"]\"));\n      }\n      return answer;\n    };\n\n    Arr.prototype.assigns = function(name) {\n      var j, len1, obj, ref3;\n      ref3 = this.objects;\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        obj = ref3[j];\n        if (obj.assigns(name)) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    return Arr;\n\n  })(Base);\n\n  exports.Class = Class = (function(superClass1) {\n    extend1(Class, superClass1);\n\n    function Class(variable1, parent1, body1) {\n      this.variable = variable1;\n      this.parent = parent1;\n      this.body = body1 != null ? body1 : new Block;\n      this.boundFuncs = [];\n      this.body.classBody = true;\n    }\n\n    Class.prototype.children = ['variable', 'parent', 'body'];\n\n    Class.prototype.defaultClassVariableName = '_Class';\n\n    Class.prototype.determineName = function() {\n      var message, name, node, ref3, tail;\n      if (!this.variable) {\n        return this.defaultClassVariableName;\n      }\n      ref3 = this.variable.properties, tail = ref3[ref3.length - 1];\n      node = tail ? tail instanceof Access && tail.name : this.variable.base;\n      if (!(node instanceof IdentifierLiteral || node instanceof PropertyName)) {\n        return this.defaultClassVariableName;\n      }\n      name = node.value;\n      if (!tail) {\n        message = isUnassignable(name);\n        if (message) {\n          this.variable.error(message);\n        }\n      }\n      if (indexOf.call(JS_FORBIDDEN, name) >= 0) {\n        return \"_\" + name;\n      } else {\n        return name;\n      }\n    };\n\n    Class.prototype.setContext = function(name) {\n      return this.body.traverseChildren(false, function(node) {\n        if (node.classBody) {\n          return false;\n        }\n        if (node instanceof ThisLiteral) {\n          return node.value = name;\n        } else if (node instanceof Code) {\n          if (node.bound) {\n            return node.context = name;\n          }\n        }\n      });\n    };\n\n    Class.prototype.addBoundFunctions = function(o) {\n      var bvar, j, len1, lhs, ref3;\n      ref3 = this.boundFuncs;\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        bvar = ref3[j];\n        lhs = (new Value(new ThisLiteral, [new Access(bvar)])).compile(o);\n        this.ctor.body.unshift(new Literal(lhs + \" = \" + (utility('bind', o)) + \"(\" + lhs + \", this)\"));\n      }\n    };\n\n    Class.prototype.addProperties = function(node, name, o) {\n      var acc, assign, base, exprs, func, props;\n      props = node.base.properties.slice(0);\n      exprs = (function() {\n        var results;\n        results = [];\n        while (assign = props.shift()) {\n          if (assign instanceof Assign) {\n            base = assign.variable.base;\n            delete assign.context;\n            func = assign.value;\n            if (base.value === 'constructor') {\n              if (this.ctor) {\n                assign.error('cannot define more than one constructor in a class');\n              }\n              if (func.bound) {\n                assign.error('cannot define a constructor as a bound function');\n              }\n              if (func instanceof Code) {\n                assign = this.ctor = func;\n              } else {\n                this.externalCtor = o.classScope.freeVariable('ctor');\n                assign = new Assign(new IdentifierLiteral(this.externalCtor), func);\n              }\n            } else {\n              if (assign.variable[\"this\"]) {\n                func[\"static\"] = true;\n              } else {\n                acc = base.isComplex() ? new Index(base) : new Access(base);\n                assign.variable = new Value(new IdentifierLiteral(name), [new Access(new PropertyName('prototype')), acc]);\n                if (func instanceof Code && func.bound) {\n                  this.boundFuncs.push(base);\n                  func.bound = false;\n                }\n              }\n            }\n          }\n          results.push(assign);\n        }\n        return results;\n      }).call(this);\n      return compact(exprs);\n    };\n\n    Class.prototype.walkBody = function(name, o) {\n      return this.traverseChildren(false, (function(_this) {\n        return function(child) {\n          var cont, exps, i, j, len1, node, ref3;\n          cont = true;\n          if (child instanceof Class) {\n            return false;\n          }\n          if (child instanceof Block) {\n            ref3 = exps = child.expressions;\n            for (i = j = 0, len1 = ref3.length; j < len1; i = ++j) {\n              node = ref3[i];\n              if (node instanceof Assign && node.variable.looksStatic(name)) {\n                node.value[\"static\"] = true;\n              } else if (node instanceof Value && node.isObject(true)) {\n                cont = false;\n                exps[i] = _this.addProperties(node, name, o);\n              }\n            }\n            child.expressions = exps = flatten(exps);\n          }\n          return cont && !(child instanceof Class);\n        };\n      })(this));\n    };\n\n    Class.prototype.hoistDirectivePrologue = function() {\n      var expressions, index, node;\n      index = 0;\n      expressions = this.body.expressions;\n      while ((node = expressions[index]) && node instanceof Comment || node instanceof Value && node.isString()) {\n        ++index;\n      }\n      return this.directives = expressions.splice(0, index);\n    };\n\n    Class.prototype.ensureConstructor = function(name) {\n      if (!this.ctor) {\n        this.ctor = new Code;\n        if (this.externalCtor) {\n          this.ctor.body.push(new Literal(this.externalCtor + \".apply(this, arguments)\"));\n        } else if (this.parent) {\n          this.ctor.body.push(new Literal(name + \".__super__.constructor.apply(this, arguments)\"));\n        }\n        this.ctor.body.makeReturn();\n        this.body.expressions.unshift(this.ctor);\n      }\n      this.ctor.ctor = this.ctor.name = name;\n      this.ctor.klass = null;\n      return this.ctor.noReturn = true;\n    };\n\n    Class.prototype.compileNode = function(o) {\n      var args, argumentsNode, func, jumpNode, klass, lname, name, ref3, superClass;\n      if (jumpNode = this.body.jumps()) {\n        jumpNode.error('Class bodies cannot contain pure statements');\n      }\n      if (argumentsNode = this.body.contains(isLiteralArguments)) {\n        argumentsNode.error(\"Class bodies shouldn't reference arguments\");\n      }\n      name = this.determineName();\n      lname = new IdentifierLiteral(name);\n      func = new Code([], Block.wrap([this.body]));\n      args = [];\n      o.classScope = func.makeScope(o.scope);\n      this.hoistDirectivePrologue();\n      this.setContext(name);\n      this.walkBody(name, o);\n      this.ensureConstructor(name);\n      this.addBoundFunctions(o);\n      this.body.spaced = true;\n      this.body.expressions.push(lname);\n      if (this.parent) {\n        superClass = new IdentifierLiteral(o.classScope.freeVariable('superClass', {\n          reserve: false\n        }));\n        this.body.expressions.unshift(new Extends(lname, superClass));\n        func.params.push(new Param(superClass));\n        args.push(this.parent);\n      }\n      (ref3 = this.body.expressions).unshift.apply(ref3, this.directives);\n      klass = new Parens(new Call(func, args));\n      if (this.variable) {\n        klass = new Assign(this.variable, klass, null, {\n          moduleDeclaration: this.moduleDeclaration\n        });\n      }\n      return klass.compileToFragments(o);\n    };\n\n    return Class;\n\n  })(Base);\n\n  exports.ModuleDeclaration = ModuleDeclaration = (function(superClass1) {\n    extend1(ModuleDeclaration, superClass1);\n\n    function ModuleDeclaration(clause, source1) {\n      this.clause = clause;\n      this.source = source1;\n      this.checkSource();\n    }\n\n    ModuleDeclaration.prototype.children = ['clause', 'source'];\n\n    ModuleDeclaration.prototype.isStatement = YES;\n\n    ModuleDeclaration.prototype.jumps = THIS;\n\n    ModuleDeclaration.prototype.makeReturn = THIS;\n\n    ModuleDeclaration.prototype.checkSource = function() {\n      if ((this.source != null) && this.source instanceof StringWithInterpolations) {\n        return this.source.error('the name of the module to be imported from must be an uninterpolated string');\n      }\n    };\n\n    ModuleDeclaration.prototype.checkScope = function(o, moduleDeclarationType) {\n      if (o.indent.length !== 0) {\n        return this.error(moduleDeclarationType + \" statements must be at top-level scope\");\n      }\n    };\n\n    return ModuleDeclaration;\n\n  })(Base);\n\n  exports.ImportDeclaration = ImportDeclaration = (function(superClass1) {\n    extend1(ImportDeclaration, superClass1);\n\n    function ImportDeclaration() {\n      return ImportDeclaration.__super__.constructor.apply(this, arguments);\n    }\n\n    ImportDeclaration.prototype.compileNode = function(o) {\n      var code, ref3;\n      this.checkScope(o, 'import');\n      o.importedSymbols = [];\n      code = [];\n      code.push(this.makeCode(this.tab + \"import \"));\n      if (this.clause != null) {\n        code.push.apply(code, this.clause.compileNode(o));\n      }\n      if (((ref3 = this.source) != null ? ref3.value : void 0) != null) {\n        if (this.clause !== null) {\n          code.push(this.makeCode(' from '));\n        }\n        code.push(this.makeCode(this.source.value));\n      }\n      code.push(this.makeCode(';'));\n      return code;\n    };\n\n    return ImportDeclaration;\n\n  })(ModuleDeclaration);\n\n  exports.ImportClause = ImportClause = (function(superClass1) {\n    extend1(ImportClause, superClass1);\n\n    function ImportClause(defaultBinding, namedImports) {\n      this.defaultBinding = defaultBinding;\n      this.namedImports = namedImports;\n    }\n\n    ImportClause.prototype.children = ['defaultBinding', 'namedImports'];\n\n    ImportClause.prototype.compileNode = function(o) {\n      var code;\n      code = [];\n      if (this.defaultBinding != null) {\n        code.push.apply(code, this.defaultBinding.compileNode(o));\n        if (this.namedImports != null) {\n          code.push(this.makeCode(', '));\n        }\n      }\n      if (this.namedImports != null) {\n        code.push.apply(code, this.namedImports.compileNode(o));\n      }\n      return code;\n    };\n\n    return ImportClause;\n\n  })(Base);\n\n  exports.ExportDeclaration = ExportDeclaration = (function(superClass1) {\n    extend1(ExportDeclaration, superClass1);\n\n    function ExportDeclaration() {\n      return ExportDeclaration.__super__.constructor.apply(this, arguments);\n    }\n\n    ExportDeclaration.prototype.compileNode = function(o) {\n      var code, ref3;\n      this.checkScope(o, 'export');\n      code = [];\n      code.push(this.makeCode(this.tab + \"export \"));\n      if (this instanceof ExportDefaultDeclaration) {\n        code.push(this.makeCode('default '));\n      }\n      if (!(this instanceof ExportDefaultDeclaration) && (this.clause instanceof Assign || this.clause instanceof Class)) {\n        if (this.clause instanceof Class && !this.clause.variable) {\n          this.clause.error('anonymous classes cannot be exported');\n        }\n        code.push(this.makeCode('var '));\n        this.clause.moduleDeclaration = 'export';\n      }\n      if ((this.clause.body != null) && this.clause.body instanceof Block) {\n        code = code.concat(this.clause.compileToFragments(o, LEVEL_TOP));\n      } else {\n        code = code.concat(this.clause.compileNode(o));\n      }\n      if (((ref3 = this.source) != null ? ref3.value : void 0) != null) {\n        code.push(this.makeCode(\" from \" + this.source.value));\n      }\n      code.push(this.makeCode(';'));\n      return code;\n    };\n\n    return ExportDeclaration;\n\n  })(ModuleDeclaration);\n\n  exports.ExportNamedDeclaration = ExportNamedDeclaration = (function(superClass1) {\n    extend1(ExportNamedDeclaration, superClass1);\n\n    function ExportNamedDeclaration() {\n      return ExportNamedDeclaration.__super__.constructor.apply(this, arguments);\n    }\n\n    return ExportNamedDeclaration;\n\n  })(ExportDeclaration);\n\n  exports.ExportDefaultDeclaration = ExportDefaultDeclaration = (function(superClass1) {\n    extend1(ExportDefaultDeclaration, superClass1);\n\n    function ExportDefaultDeclaration() {\n      return ExportDefaultDeclaration.__super__.constructor.apply(this, arguments);\n    }\n\n    return ExportDefaultDeclaration;\n\n  })(ExportDeclaration);\n\n  exports.ExportAllDeclaration = ExportAllDeclaration = (function(superClass1) {\n    extend1(ExportAllDeclaration, superClass1);\n\n    function ExportAllDeclaration() {\n      return ExportAllDeclaration.__super__.constructor.apply(this, arguments);\n    }\n\n    return ExportAllDeclaration;\n\n  })(ExportDeclaration);\n\n  exports.ModuleSpecifierList = ModuleSpecifierList = (function(superClass1) {\n    extend1(ModuleSpecifierList, superClass1);\n\n    function ModuleSpecifierList(specifiers) {\n      this.specifiers = specifiers;\n    }\n\n    ModuleSpecifierList.prototype.children = ['specifiers'];\n\n    ModuleSpecifierList.prototype.compileNode = function(o) {\n      var code, compiledList, fragments, index, j, len1, specifier;\n      code = [];\n      o.indent += TAB;\n      compiledList = (function() {\n        var j, len1, ref3, results;\n        ref3 = this.specifiers;\n        results = [];\n        for (j = 0, len1 = ref3.length; j < len1; j++) {\n          specifier = ref3[j];\n          results.push(specifier.compileToFragments(o, LEVEL_LIST));\n        }\n        return results;\n      }).call(this);\n      if (this.specifiers.length !== 0) {\n        code.push(this.makeCode(\"{\\n\" + o.indent));\n        for (index = j = 0, len1 = compiledList.length; j < len1; index = ++j) {\n          fragments = compiledList[index];\n          if (index) {\n            code.push(this.makeCode(\",\\n\" + o.indent));\n          }\n          code.push.apply(code, fragments);\n        }\n        code.push(this.makeCode(\"\\n}\"));\n      } else {\n        code.push(this.makeCode('{}'));\n      }\n      return code;\n    };\n\n    return ModuleSpecifierList;\n\n  })(Base);\n\n  exports.ImportSpecifierList = ImportSpecifierList = (function(superClass1) {\n    extend1(ImportSpecifierList, superClass1);\n\n    function ImportSpecifierList() {\n      return ImportSpecifierList.__super__.constructor.apply(this, arguments);\n    }\n\n    return ImportSpecifierList;\n\n  })(ModuleSpecifierList);\n\n  exports.ExportSpecifierList = ExportSpecifierList = (function(superClass1) {\n    extend1(ExportSpecifierList, superClass1);\n\n    function ExportSpecifierList() {\n      return ExportSpecifierList.__super__.constructor.apply(this, arguments);\n    }\n\n    return ExportSpecifierList;\n\n  })(ModuleSpecifierList);\n\n  exports.ModuleSpecifier = ModuleSpecifier = (function(superClass1) {\n    extend1(ModuleSpecifier, superClass1);\n\n    function ModuleSpecifier(original, alias, moduleDeclarationType1) {\n      this.original = original;\n      this.alias = alias;\n      this.moduleDeclarationType = moduleDeclarationType1;\n      this.identifier = this.alias != null ? this.alias.value : this.original.value;\n    }\n\n    ModuleSpecifier.prototype.children = ['original', 'alias'];\n\n    ModuleSpecifier.prototype.compileNode = function(o) {\n      var code;\n      o.scope.find(this.identifier, this.moduleDeclarationType);\n      code = [];\n      code.push(this.makeCode(this.original.value));\n      if (this.alias != null) {\n        code.push(this.makeCode(\" as \" + this.alias.value));\n      }\n      return code;\n    };\n\n    return ModuleSpecifier;\n\n  })(Base);\n\n  exports.ImportSpecifier = ImportSpecifier = (function(superClass1) {\n    extend1(ImportSpecifier, superClass1);\n\n    function ImportSpecifier(imported, local) {\n      ImportSpecifier.__super__.constructor.call(this, imported, local, 'import');\n    }\n\n    ImportSpecifier.prototype.compileNode = function(o) {\n      var ref3;\n      if ((ref3 = this.identifier, indexOf.call(o.importedSymbols, ref3) >= 0) || o.scope.check(this.identifier)) {\n        this.error(\"'\" + this.identifier + \"' has already been declared\");\n      } else {\n        o.importedSymbols.push(this.identifier);\n      }\n      return ImportSpecifier.__super__.compileNode.call(this, o);\n    };\n\n    return ImportSpecifier;\n\n  })(ModuleSpecifier);\n\n  exports.ImportDefaultSpecifier = ImportDefaultSpecifier = (function(superClass1) {\n    extend1(ImportDefaultSpecifier, superClass1);\n\n    function ImportDefaultSpecifier() {\n      return ImportDefaultSpecifier.__super__.constructor.apply(this, arguments);\n    }\n\n    return ImportDefaultSpecifier;\n\n  })(ImportSpecifier);\n\n  exports.ImportNamespaceSpecifier = ImportNamespaceSpecifier = (function(superClass1) {\n    extend1(ImportNamespaceSpecifier, superClass1);\n\n    function ImportNamespaceSpecifier() {\n      return ImportNamespaceSpecifier.__super__.constructor.apply(this, arguments);\n    }\n\n    return ImportNamespaceSpecifier;\n\n  })(ImportSpecifier);\n\n  exports.ExportSpecifier = ExportSpecifier = (function(superClass1) {\n    extend1(ExportSpecifier, superClass1);\n\n    function ExportSpecifier(local, exported) {\n      ExportSpecifier.__super__.constructor.call(this, local, exported, 'export');\n    }\n\n    return ExportSpecifier;\n\n  })(ModuleSpecifier);\n\n  exports.Assign = Assign = (function(superClass1) {\n    extend1(Assign, superClass1);\n\n    function Assign(variable1, value1, context, options) {\n      this.variable = variable1;\n      this.value = value1;\n      this.context = context;\n      if (options == null) {\n        options = {};\n      }\n      this.param = options.param, this.subpattern = options.subpattern, this.operatorToken = options.operatorToken, this.moduleDeclaration = options.moduleDeclaration;\n    }\n\n    Assign.prototype.children = ['variable', 'value'];\n\n    Assign.prototype.isStatement = function(o) {\n      return (o != null ? o.level : void 0) === LEVEL_TOP && (this.context != null) && (this.moduleDeclaration || indexOf.call(this.context, \"?\") >= 0);\n    };\n\n    Assign.prototype.checkAssignability = function(o, varBase) {\n      if (Object.prototype.hasOwnProperty.call(o.scope.positions, varBase.value) && o.scope.variables[o.scope.positions[varBase.value]].type === 'import') {\n        return varBase.error(\"'\" + varBase.value + \"' is read-only\");\n      }\n    };\n\n    Assign.prototype.assigns = function(name) {\n      return this[this.context === 'object' ? 'value' : 'variable'].assigns(name);\n    };\n\n    Assign.prototype.unfoldSoak = function(o) {\n      return unfoldSoak(o, this, 'variable');\n    };\n\n    Assign.prototype.compileNode = function(o) {\n      var answer, compiledName, isValue, j, name, properties, prototype, ref3, ref4, ref5, ref6, ref7, ref8, val, varBase;\n      if (isValue = this.variable instanceof Value) {\n        if (this.variable.isArray() || this.variable.isObject()) {\n          return this.compilePatternMatch(o);\n        }\n        if (this.variable.isSplice()) {\n          return this.compileSplice(o);\n        }\n        if ((ref3 = this.context) === '||=' || ref3 === '&&=' || ref3 === '?=') {\n          return this.compileConditional(o);\n        }\n        if ((ref4 = this.context) === '**=' || ref4 === '//=' || ref4 === '%%=') {\n          return this.compileSpecialMath(o);\n        }\n      }\n      if (this.value instanceof Code) {\n        if (this.value[\"static\"]) {\n          this.value.klass = this.variable.base;\n          this.value.name = this.variable.properties[0];\n          this.value.variable = this.variable;\n        } else if (((ref5 = this.variable.properties) != null ? ref5.length : void 0) >= 2) {\n          ref6 = this.variable.properties, properties = 3 <= ref6.length ? slice.call(ref6, 0, j = ref6.length - 2) : (j = 0, []), prototype = ref6[j++], name = ref6[j++];\n          if (((ref7 = prototype.name) != null ? ref7.value : void 0) === 'prototype') {\n            this.value.klass = new Value(this.variable.base, properties);\n            this.value.name = name;\n            this.value.variable = this.variable;\n          }\n        }\n      }\n      if (!this.context) {\n        varBase = this.variable.unwrapAll();\n        if (!varBase.isAssignable()) {\n          this.variable.error(\"'\" + (this.variable.compile(o)) + \"' can't be assigned\");\n        }\n        if (!(typeof varBase.hasProperties === \"function\" ? varBase.hasProperties() : void 0)) {\n          if (this.moduleDeclaration) {\n            this.checkAssignability(o, varBase);\n            o.scope.add(varBase.value, this.moduleDeclaration);\n          } else if (this.param) {\n            o.scope.add(varBase.value, 'var');\n          } else {\n            this.checkAssignability(o, varBase);\n            o.scope.find(varBase.value);\n          }\n        }\n      }\n      val = this.value.compileToFragments(o, LEVEL_LIST);\n      if (isValue && this.variable.base instanceof Obj) {\n        this.variable.front = true;\n      }\n      compiledName = this.variable.compileToFragments(o, LEVEL_LIST);\n      if (this.context === 'object') {\n        if (ref8 = fragmentsToText(compiledName), indexOf.call(JS_FORBIDDEN, ref8) >= 0) {\n          compiledName.unshift(this.makeCode('\"'));\n          compiledName.push(this.makeCode('\"'));\n        }\n        return compiledName.concat(this.makeCode(\": \"), val);\n      }\n      answer = compiledName.concat(this.makeCode(\" \" + (this.context || '=') + \" \"), val);\n      if (o.level <= LEVEL_LIST) {\n        return answer;\n      } else {\n        return this.wrapInBraces(answer);\n      }\n    };\n\n    Assign.prototype.compilePatternMatch = function(o) {\n      var acc, assigns, code, defaultValue, expandedIdx, fragments, i, idx, isObject, ivar, j, len1, message, name, obj, objects, olen, ref, ref3, ref4, ref5, ref6, rest, top, val, value, vvar, vvarText;\n      top = o.level === LEVEL_TOP;\n      value = this.value;\n      objects = this.variable.base.objects;\n      if (!(olen = objects.length)) {\n        code = value.compileToFragments(o);\n        if (o.level >= LEVEL_OP) {\n          return this.wrapInBraces(code);\n        } else {\n          return code;\n        }\n      }\n      obj = objects[0];\n      if (olen === 1 && obj instanceof Expansion) {\n        obj.error('Destructuring assignment has no target');\n      }\n      isObject = this.variable.isObject();\n      if (top && olen === 1 && !(obj instanceof Splat)) {\n        defaultValue = null;\n        if (obj instanceof Assign && obj.context === 'object') {\n          ref3 = obj, (ref4 = ref3.variable, idx = ref4.base), obj = ref3.value;\n          if (obj instanceof Assign) {\n            defaultValue = obj.value;\n            obj = obj.variable;\n          }\n        } else {\n          if (obj instanceof Assign) {\n            defaultValue = obj.value;\n            obj = obj.variable;\n          }\n          idx = isObject ? obj[\"this\"] ? obj.properties[0].name : new PropertyName(obj.unwrap().value) : new NumberLiteral(0);\n        }\n        acc = idx.unwrap() instanceof PropertyName;\n        value = new Value(value);\n        value.properties.push(new (acc ? Access : Index)(idx));\n        message = isUnassignable(obj.unwrap().value);\n        if (message) {\n          obj.error(message);\n        }\n        if (defaultValue) {\n          value = new Op('?', value, defaultValue);\n        }\n        return new Assign(obj, value, null, {\n          param: this.param\n        }).compileToFragments(o, LEVEL_TOP);\n      }\n      vvar = value.compileToFragments(o, LEVEL_LIST);\n      vvarText = fragmentsToText(vvar);\n      assigns = [];\n      expandedIdx = false;\n      if (!(value.unwrap() instanceof IdentifierLiteral) || this.variable.assigns(vvarText)) {\n        assigns.push([this.makeCode((ref = o.scope.freeVariable('ref')) + \" = \")].concat(slice.call(vvar)));\n        vvar = [this.makeCode(ref)];\n        vvarText = ref;\n      }\n      for (i = j = 0, len1 = objects.length; j < len1; i = ++j) {\n        obj = objects[i];\n        idx = i;\n        if (!expandedIdx && obj instanceof Splat) {\n          name = obj.name.unwrap().value;\n          obj = obj.unwrap();\n          val = olen + \" <= \" + vvarText + \".length ? \" + (utility('slice', o)) + \".call(\" + vvarText + \", \" + i;\n          if (rest = olen - i - 1) {\n            ivar = o.scope.freeVariable('i', {\n              single: true\n            });\n            val += \", \" + ivar + \" = \" + vvarText + \".length - \" + rest + \") : (\" + ivar + \" = \" + i + \", [])\";\n          } else {\n            val += \") : []\";\n          }\n          val = new Literal(val);\n          expandedIdx = ivar + \"++\";\n        } else if (!expandedIdx && obj instanceof Expansion) {\n          if (rest = olen - i - 1) {\n            if (rest === 1) {\n              expandedIdx = vvarText + \".length - 1\";\n            } else {\n              ivar = o.scope.freeVariable('i', {\n                single: true\n              });\n              val = new Literal(ivar + \" = \" + vvarText + \".length - \" + rest);\n              expandedIdx = ivar + \"++\";\n              assigns.push(val.compileToFragments(o, LEVEL_LIST));\n            }\n          }\n          continue;\n        } else {\n          if (obj instanceof Splat || obj instanceof Expansion) {\n            obj.error(\"multiple splats/expansions are disallowed in an assignment\");\n          }\n          defaultValue = null;\n          if (obj instanceof Assign && obj.context === 'object') {\n            ref5 = obj, (ref6 = ref5.variable, idx = ref6.base), obj = ref5.value;\n            if (obj instanceof Assign) {\n              defaultValue = obj.value;\n              obj = obj.variable;\n            }\n          } else {\n            if (obj instanceof Assign) {\n              defaultValue = obj.value;\n              obj = obj.variable;\n            }\n            idx = isObject ? obj[\"this\"] ? obj.properties[0].name : new PropertyName(obj.unwrap().value) : new Literal(expandedIdx || idx);\n          }\n          name = obj.unwrap().value;\n          acc = idx.unwrap() instanceof PropertyName;\n          val = new Value(new Literal(vvarText), [new (acc ? Access : Index)(idx)]);\n          if (defaultValue) {\n            val = new Op('?', val, defaultValue);\n          }\n        }\n        if (name != null) {\n          message = isUnassignable(name);\n          if (message) {\n            obj.error(message);\n          }\n        }\n        assigns.push(new Assign(obj, val, null, {\n          param: this.param,\n          subpattern: true\n        }).compileToFragments(o, LEVEL_LIST));\n      }\n      if (!(top || this.subpattern)) {\n        assigns.push(vvar);\n      }\n      fragments = this.joinFragmentArrays(assigns, ', ');\n      if (o.level < LEVEL_LIST) {\n        return fragments;\n      } else {\n        return this.wrapInBraces(fragments);\n      }\n    };\n\n    Assign.prototype.compileConditional = function(o) {\n      var fragments, left, ref3, right;\n      ref3 = this.variable.cacheReference(o), left = ref3[0], right = ref3[1];\n      if (!left.properties.length && left.base instanceof Literal && !(left.base instanceof ThisLiteral) && !o.scope.check(left.base.value)) {\n        this.variable.error(\"the variable \\\"\" + left.base.value + \"\\\" can't be assigned with \" + this.context + \" because it has not been declared before\");\n      }\n      if (indexOf.call(this.context, \"?\") >= 0) {\n        o.isExistentialEquals = true;\n        return new If(new Existence(left), right, {\n          type: 'if'\n        }).addElse(new Assign(right, this.value, '=')).compileToFragments(o);\n      } else {\n        fragments = new Op(this.context.slice(0, -1), left, new Assign(right, this.value, '=')).compileToFragments(o);\n        if (o.level <= LEVEL_LIST) {\n          return fragments;\n        } else {\n          return this.wrapInBraces(fragments);\n        }\n      }\n    };\n\n    Assign.prototype.compileSpecialMath = function(o) {\n      var left, ref3, right;\n      ref3 = this.variable.cacheReference(o), left = ref3[0], right = ref3[1];\n      return new Assign(left, new Op(this.context.slice(0, -1), right, this.value)).compileToFragments(o);\n    };\n\n    Assign.prototype.compileSplice = function(o) {\n      var answer, exclusive, from, fromDecl, fromRef, name, ref3, ref4, ref5, to, valDef, valRef;\n      ref3 = this.variable.properties.pop().range, from = ref3.from, to = ref3.to, exclusive = ref3.exclusive;\n      name = this.variable.compile(o);\n      if (from) {\n        ref4 = this.cacheToCodeFragments(from.cache(o, LEVEL_OP)), fromDecl = ref4[0], fromRef = ref4[1];\n      } else {\n        fromDecl = fromRef = '0';\n      }\n      if (to) {\n        if ((from != null ? from.isNumber() : void 0) && to.isNumber()) {\n          to = to.compile(o) - fromRef;\n          if (!exclusive) {\n            to += 1;\n          }\n        } else {\n          to = to.compile(o, LEVEL_ACCESS) + ' - ' + fromRef;\n          if (!exclusive) {\n            to += ' + 1';\n          }\n        }\n      } else {\n        to = \"9e9\";\n      }\n      ref5 = this.value.cache(o, LEVEL_LIST), valDef = ref5[0], valRef = ref5[1];\n      answer = [].concat(this.makeCode(\"[].splice.apply(\" + name + \", [\" + fromDecl + \", \" + to + \"].concat(\"), valDef, this.makeCode(\")), \"), valRef);\n      if (o.level > LEVEL_TOP) {\n        return this.wrapInBraces(answer);\n      } else {\n        return answer;\n      }\n    };\n\n    return Assign;\n\n  })(Base);\n\n  exports.Code = Code = (function(superClass1) {\n    extend1(Code, superClass1);\n\n    function Code(params, body, tag) {\n      this.params = params || [];\n      this.body = body || new Block;\n      this.bound = tag === 'boundfunc';\n      this.isGenerator = !!this.body.contains(function(node) {\n        return (node instanceof Op && node.isYield()) || node instanceof YieldReturn;\n      });\n    }\n\n    Code.prototype.children = ['params', 'body'];\n\n    Code.prototype.isStatement = function() {\n      return !!this.ctor;\n    };\n\n    Code.prototype.jumps = NO;\n\n    Code.prototype.makeScope = function(parentScope) {\n      return new Scope(parentScope, this.body, this);\n    };\n\n    Code.prototype.compileNode = function(o) {\n      var answer, boundfunc, code, exprs, i, j, k, l, len1, len2, len3, len4, len5, len6, lit, m, p, param, params, q, r, ref, ref3, ref4, ref5, ref6, ref7, ref8, splats, uniqs, val, wasEmpty, wrapper;\n      if (this.bound && ((ref3 = o.scope.method) != null ? ref3.bound : void 0)) {\n        this.context = o.scope.method.context;\n      }\n      if (this.bound && !this.context) {\n        this.context = '_this';\n        wrapper = new Code([new Param(new IdentifierLiteral(this.context))], new Block([this]));\n        boundfunc = new Call(wrapper, [new ThisLiteral]);\n        boundfunc.updateLocationDataIfMissing(this.locationData);\n        return boundfunc.compileNode(o);\n      }\n      o.scope = del(o, 'classScope') || this.makeScope(o.scope);\n      o.scope.shared = del(o, 'sharedScope');\n      o.indent += TAB;\n      delete o.bare;\n      delete o.isExistentialEquals;\n      params = [];\n      exprs = [];\n      ref4 = this.params;\n      for (j = 0, len1 = ref4.length; j < len1; j++) {\n        param = ref4[j];\n        if (!(param instanceof Expansion)) {\n          o.scope.parameter(param.asReference(o));\n        }\n      }\n      ref5 = this.params;\n      for (k = 0, len2 = ref5.length; k < len2; k++) {\n        param = ref5[k];\n        if (!(param.splat || param instanceof Expansion)) {\n          continue;\n        }\n        ref6 = this.params;\n        for (l = 0, len3 = ref6.length; l < len3; l++) {\n          p = ref6[l];\n          if (!(p instanceof Expansion) && p.name.value) {\n            o.scope.add(p.name.value, 'var', true);\n          }\n        }\n        splats = new Assign(new Value(new Arr((function() {\n          var len4, m, ref7, results;\n          ref7 = this.params;\n          results = [];\n          for (m = 0, len4 = ref7.length; m < len4; m++) {\n            p = ref7[m];\n            results.push(p.asReference(o));\n          }\n          return results;\n        }).call(this))), new Value(new IdentifierLiteral('arguments')));\n        break;\n      }\n      ref7 = this.params;\n      for (m = 0, len4 = ref7.length; m < len4; m++) {\n        param = ref7[m];\n        if (param.isComplex()) {\n          val = ref = param.asReference(o);\n          if (param.value) {\n            val = new Op('?', ref, param.value);\n          }\n          exprs.push(new Assign(new Value(param.name), val, '=', {\n            param: true\n          }));\n        } else {\n          ref = param;\n          if (param.value) {\n            lit = new Literal(ref.name.value + ' == null');\n            val = new Assign(new Value(param.name), param.value, '=');\n            exprs.push(new If(lit, val));\n          }\n        }\n        if (!splats) {\n          params.push(ref);\n        }\n      }\n      wasEmpty = this.body.isEmpty();\n      if (splats) {\n        exprs.unshift(splats);\n      }\n      if (exprs.length) {\n        (ref8 = this.body.expressions).unshift.apply(ref8, exprs);\n      }\n      for (i = q = 0, len5 = params.length; q < len5; i = ++q) {\n        p = params[i];\n        params[i] = p.compileToFragments(o);\n        o.scope.parameter(fragmentsToText(params[i]));\n      }\n      uniqs = [];\n      this.eachParamName(function(name, node) {\n        if (indexOf.call(uniqs, name) >= 0) {\n          node.error(\"multiple parameters named \" + name);\n        }\n        return uniqs.push(name);\n      });\n      if (!(wasEmpty || this.noReturn)) {\n        this.body.makeReturn();\n      }\n      code = 'function';\n      if (this.isGenerator) {\n        code += '*';\n      }\n      if (this.ctor) {\n        code += ' ' + this.name;\n      }\n      code += '(';\n      answer = [this.makeCode(code)];\n      for (i = r = 0, len6 = params.length; r < len6; i = ++r) {\n        p = params[i];\n        if (i) {\n          answer.push(this.makeCode(\", \"));\n        }\n        answer.push.apply(answer, p);\n      }\n      answer.push(this.makeCode(') {'));\n      if (!this.body.isEmpty()) {\n        answer = answer.concat(this.makeCode(\"\\n\"), this.body.compileWithDeclarations(o), this.makeCode(\"\\n\" + this.tab));\n      }\n      answer.push(this.makeCode('}'));\n      if (this.ctor) {\n        return [this.makeCode(this.tab)].concat(slice.call(answer));\n      }\n      if (this.front || (o.level >= LEVEL_ACCESS)) {\n        return this.wrapInBraces(answer);\n      } else {\n        return answer;\n      }\n    };\n\n    Code.prototype.eachParamName = function(iterator) {\n      var j, len1, param, ref3, results;\n      ref3 = this.params;\n      results = [];\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        param = ref3[j];\n        results.push(param.eachName(iterator));\n      }\n      return results;\n    };\n\n    Code.prototype.traverseChildren = function(crossScope, func) {\n      if (crossScope) {\n        return Code.__super__.traverseChildren.call(this, crossScope, func);\n      }\n    };\n\n    return Code;\n\n  })(Base);\n\n  exports.Param = Param = (function(superClass1) {\n    extend1(Param, superClass1);\n\n    function Param(name1, value1, splat) {\n      var message, token;\n      this.name = name1;\n      this.value = value1;\n      this.splat = splat;\n      message = isUnassignable(this.name.unwrapAll().value);\n      if (message) {\n        this.name.error(message);\n      }\n      if (this.name instanceof Obj && this.name.generated) {\n        token = this.name.objects[0].operatorToken;\n        token.error(\"unexpected \" + token.value);\n      }\n    }\n\n    Param.prototype.children = ['name', 'value'];\n\n    Param.prototype.compileToFragments = function(o) {\n      return this.name.compileToFragments(o, LEVEL_LIST);\n    };\n\n    Param.prototype.asReference = function(o) {\n      var name, node;\n      if (this.reference) {\n        return this.reference;\n      }\n      node = this.name;\n      if (node[\"this\"]) {\n        name = node.properties[0].name.value;\n        if (indexOf.call(JS_FORBIDDEN, name) >= 0) {\n          name = \"_\" + name;\n        }\n        node = new IdentifierLiteral(o.scope.freeVariable(name));\n      } else if (node.isComplex()) {\n        node = new IdentifierLiteral(o.scope.freeVariable('arg'));\n      }\n      node = new Value(node);\n      if (this.splat) {\n        node = new Splat(node);\n      }\n      node.updateLocationDataIfMissing(this.locationData);\n      return this.reference = node;\n    };\n\n    Param.prototype.isComplex = function() {\n      return this.name.isComplex();\n    };\n\n    Param.prototype.eachName = function(iterator, name) {\n      var atParam, j, len1, node, obj, ref3, ref4;\n      if (name == null) {\n        name = this.name;\n      }\n      atParam = function(obj) {\n        return iterator(\"@\" + obj.properties[0].name.value, obj);\n      };\n      if (name instanceof Literal) {\n        return iterator(name.value, name);\n      }\n      if (name instanceof Value) {\n        return atParam(name);\n      }\n      ref4 = (ref3 = name.objects) != null ? ref3 : [];\n      for (j = 0, len1 = ref4.length; j < len1; j++) {\n        obj = ref4[j];\n        if (obj instanceof Assign && (obj.context == null)) {\n          obj = obj.variable;\n        }\n        if (obj instanceof Assign) {\n          if (obj.value instanceof Assign) {\n            obj = obj.value;\n          }\n          this.eachName(iterator, obj.value.unwrap());\n        } else if (obj instanceof Splat) {\n          node = obj.name.unwrap();\n          iterator(node.value, node);\n        } else if (obj instanceof Value) {\n          if (obj.isArray() || obj.isObject()) {\n            this.eachName(iterator, obj.base);\n          } else if (obj[\"this\"]) {\n            atParam(obj);\n          } else {\n            iterator(obj.base.value, obj.base);\n          }\n        } else if (!(obj instanceof Expansion)) {\n          obj.error(\"illegal parameter \" + (obj.compile()));\n        }\n      }\n    };\n\n    return Param;\n\n  })(Base);\n\n  exports.Splat = Splat = (function(superClass1) {\n    extend1(Splat, superClass1);\n\n    Splat.prototype.children = ['name'];\n\n    Splat.prototype.isAssignable = YES;\n\n    function Splat(name) {\n      this.name = name.compile ? name : new Literal(name);\n    }\n\n    Splat.prototype.assigns = function(name) {\n      return this.name.assigns(name);\n    };\n\n    Splat.prototype.compileToFragments = function(o) {\n      return this.name.compileToFragments(o);\n    };\n\n    Splat.prototype.unwrap = function() {\n      return this.name;\n    };\n\n    Splat.compileSplattedArray = function(o, list, apply) {\n      var args, base, compiledNode, concatPart, fragments, i, index, j, last, len1, node;\n      index = -1;\n      while ((node = list[++index]) && !(node instanceof Splat)) {\n        continue;\n      }\n      if (index >= list.length) {\n        return [];\n      }\n      if (list.length === 1) {\n        node = list[0];\n        fragments = node.compileToFragments(o, LEVEL_LIST);\n        if (apply) {\n          return fragments;\n        }\n        return [].concat(node.makeCode((utility('slice', o)) + \".call(\"), fragments, node.makeCode(\")\"));\n      }\n      args = list.slice(index);\n      for (i = j = 0, len1 = args.length; j < len1; i = ++j) {\n        node = args[i];\n        compiledNode = node.compileToFragments(o, LEVEL_LIST);\n        args[i] = node instanceof Splat ? [].concat(node.makeCode((utility('slice', o)) + \".call(\"), compiledNode, node.makeCode(\")\")) : [].concat(node.makeCode(\"[\"), compiledNode, node.makeCode(\"]\"));\n      }\n      if (index === 0) {\n        node = list[0];\n        concatPart = node.joinFragmentArrays(args.slice(1), ', ');\n        return args[0].concat(node.makeCode(\".concat(\"), concatPart, node.makeCode(\")\"));\n      }\n      base = (function() {\n        var k, len2, ref3, results;\n        ref3 = list.slice(0, index);\n        results = [];\n        for (k = 0, len2 = ref3.length; k < len2; k++) {\n          node = ref3[k];\n          results.push(node.compileToFragments(o, LEVEL_LIST));\n        }\n        return results;\n      })();\n      base = list[0].joinFragmentArrays(base, ', ');\n      concatPart = list[index].joinFragmentArrays(args, ', ');\n      last = list[list.length - 1];\n      return [].concat(list[0].makeCode(\"[\"), base, list[index].makeCode(\"].concat(\"), concatPart, last.makeCode(\")\"));\n    };\n\n    return Splat;\n\n  })(Base);\n\n  exports.Expansion = Expansion = (function(superClass1) {\n    extend1(Expansion, superClass1);\n\n    function Expansion() {\n      return Expansion.__super__.constructor.apply(this, arguments);\n    }\n\n    Expansion.prototype.isComplex = NO;\n\n    Expansion.prototype.compileNode = function(o) {\n      return this.error('Expansion must be used inside a destructuring assignment or parameter list');\n    };\n\n    Expansion.prototype.asReference = function(o) {\n      return this;\n    };\n\n    Expansion.prototype.eachName = function(iterator) {};\n\n    return Expansion;\n\n  })(Base);\n\n  exports.While = While = (function(superClass1) {\n    extend1(While, superClass1);\n\n    function While(condition, options) {\n      this.condition = (options != null ? options.invert : void 0) ? condition.invert() : condition;\n      this.guard = options != null ? options.guard : void 0;\n    }\n\n    While.prototype.children = ['condition', 'guard', 'body'];\n\n    While.prototype.isStatement = YES;\n\n    While.prototype.makeReturn = function(res) {\n      if (res) {\n        return While.__super__.makeReturn.apply(this, arguments);\n      } else {\n        this.returns = !this.jumps({\n          loop: true\n        });\n        return this;\n      }\n    };\n\n    While.prototype.addBody = function(body1) {\n      this.body = body1;\n      return this;\n    };\n\n    While.prototype.jumps = function() {\n      var expressions, j, jumpNode, len1, node;\n      expressions = this.body.expressions;\n      if (!expressions.length) {\n        return false;\n      }\n      for (j = 0, len1 = expressions.length; j < len1; j++) {\n        node = expressions[j];\n        if (jumpNode = node.jumps({\n          loop: true\n        })) {\n          return jumpNode;\n        }\n      }\n      return false;\n    };\n\n    While.prototype.compileNode = function(o) {\n      var answer, body, rvar, set;\n      o.indent += TAB;\n      set = '';\n      body = this.body;\n      if (body.isEmpty()) {\n        body = this.makeCode('');\n      } else {\n        if (this.returns) {\n          body.makeReturn(rvar = o.scope.freeVariable('results'));\n          set = \"\" + this.tab + rvar + \" = [];\\n\";\n        }\n        if (this.guard) {\n          if (body.expressions.length > 1) {\n            body.expressions.unshift(new If((new Parens(this.guard)).invert(), new StatementLiteral(\"continue\")));\n          } else {\n            if (this.guard) {\n              body = Block.wrap([new If(this.guard, body)]);\n            }\n          }\n        }\n        body = [].concat(this.makeCode(\"\\n\"), body.compileToFragments(o, LEVEL_TOP), this.makeCode(\"\\n\" + this.tab));\n      }\n      answer = [].concat(this.makeCode(set + this.tab + \"while (\"), this.condition.compileToFragments(o, LEVEL_PAREN), this.makeCode(\") {\"), body, this.makeCode(\"}\"));\n      if (this.returns) {\n        answer.push(this.makeCode(\"\\n\" + this.tab + \"return \" + rvar + \";\"));\n      }\n      return answer;\n    };\n\n    return While;\n\n  })(Base);\n\n  exports.Op = Op = (function(superClass1) {\n    var CONVERSIONS, INVERSIONS;\n\n    extend1(Op, superClass1);\n\n    function Op(op, first, second, flip) {\n      if (op === 'in') {\n        return new In(first, second);\n      }\n      if (op === 'do') {\n        return this.generateDo(first);\n      }\n      if (op === 'new') {\n        if (first instanceof Call && !first[\"do\"] && !first.isNew) {\n          return first.newInstance();\n        }\n        if (first instanceof Code && first.bound || first[\"do\"]) {\n          first = new Parens(first);\n        }\n      }\n      this.operator = CONVERSIONS[op] || op;\n      this.first = first;\n      this.second = second;\n      this.flip = !!flip;\n      return this;\n    }\n\n    CONVERSIONS = {\n      '==': '===',\n      '!=': '!==',\n      'of': 'in',\n      'yieldfrom': 'yield*'\n    };\n\n    INVERSIONS = {\n      '!==': '===',\n      '===': '!=='\n    };\n\n    Op.prototype.children = ['first', 'second'];\n\n    Op.prototype.isNumber = function() {\n      var ref3;\n      return this.isUnary() && ((ref3 = this.operator) === '+' || ref3 === '-') && this.first instanceof Value && this.first.isNumber();\n    };\n\n    Op.prototype.isYield = function() {\n      var ref3;\n      return (ref3 = this.operator) === 'yield' || ref3 === 'yield*';\n    };\n\n    Op.prototype.isUnary = function() {\n      return !this.second;\n    };\n\n    Op.prototype.isComplex = function() {\n      return !this.isNumber();\n    };\n\n    Op.prototype.isChainable = function() {\n      var ref3;\n      return (ref3 = this.operator) === '<' || ref3 === '>' || ref3 === '>=' || ref3 === '<=' || ref3 === '===' || ref3 === '!==';\n    };\n\n    Op.prototype.invert = function() {\n      var allInvertable, curr, fst, op, ref3;\n      if (this.isChainable() && this.first.isChainable()) {\n        allInvertable = true;\n        curr = this;\n        while (curr && curr.operator) {\n          allInvertable && (allInvertable = curr.operator in INVERSIONS);\n          curr = curr.first;\n        }\n        if (!allInvertable) {\n          return new Parens(this).invert();\n        }\n        curr = this;\n        while (curr && curr.operator) {\n          curr.invert = !curr.invert;\n          curr.operator = INVERSIONS[curr.operator];\n          curr = curr.first;\n        }\n        return this;\n      } else if (op = INVERSIONS[this.operator]) {\n        this.operator = op;\n        if (this.first.unwrap() instanceof Op) {\n          this.first.invert();\n        }\n        return this;\n      } else if (this.second) {\n        return new Parens(this).invert();\n      } else if (this.operator === '!' && (fst = this.first.unwrap()) instanceof Op && ((ref3 = fst.operator) === '!' || ref3 === 'in' || ref3 === 'instanceof')) {\n        return fst;\n      } else {\n        return new Op('!', this);\n      }\n    };\n\n    Op.prototype.unfoldSoak = function(o) {\n      var ref3;\n      return ((ref3 = this.operator) === '++' || ref3 === '--' || ref3 === 'delete') && unfoldSoak(o, this, 'first');\n    };\n\n    Op.prototype.generateDo = function(exp) {\n      var call, func, j, len1, param, passedParams, ref, ref3;\n      passedParams = [];\n      func = exp instanceof Assign && (ref = exp.value.unwrap()) instanceof Code ? ref : exp;\n      ref3 = func.params || [];\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        param = ref3[j];\n        if (param.value) {\n          passedParams.push(param.value);\n          delete param.value;\n        } else {\n          passedParams.push(param);\n        }\n      }\n      call = new Call(exp, passedParams);\n      call[\"do\"] = true;\n      return call;\n    };\n\n    Op.prototype.compileNode = function(o) {\n      var answer, isChain, lhs, message, ref3, rhs;\n      isChain = this.isChainable() && this.first.isChainable();\n      if (!isChain) {\n        this.first.front = this.front;\n      }\n      if (this.operator === 'delete' && o.scope.check(this.first.unwrapAll().value)) {\n        this.error('delete operand may not be argument or var');\n      }\n      if ((ref3 = this.operator) === '--' || ref3 === '++') {\n        message = isUnassignable(this.first.unwrapAll().value);\n        if (message) {\n          this.first.error(message);\n        }\n      }\n      if (this.isYield()) {\n        return this.compileYield(o);\n      }\n      if (this.isUnary()) {\n        return this.compileUnary(o);\n      }\n      if (isChain) {\n        return this.compileChain(o);\n      }\n      switch (this.operator) {\n        case '?':\n          return this.compileExistence(o);\n        case '**':\n          return this.compilePower(o);\n        case '//':\n          return this.compileFloorDivision(o);\n        case '%%':\n          return this.compileModulo(o);\n        default:\n          lhs = this.first.compileToFragments(o, LEVEL_OP);\n          rhs = this.second.compileToFragments(o, LEVEL_OP);\n          answer = [].concat(lhs, this.makeCode(\" \" + this.operator + \" \"), rhs);\n          if (o.level <= LEVEL_OP) {\n            return answer;\n          } else {\n            return this.wrapInBraces(answer);\n          }\n      }\n    };\n\n    Op.prototype.compileChain = function(o) {\n      var fragments, fst, ref3, shared;\n      ref3 = this.first.second.cache(o), this.first.second = ref3[0], shared = ref3[1];\n      fst = this.first.compileToFragments(o, LEVEL_OP);\n      fragments = fst.concat(this.makeCode(\" \" + (this.invert ? '&&' : '||') + \" \"), shared.compileToFragments(o), this.makeCode(\" \" + this.operator + \" \"), this.second.compileToFragments(o, LEVEL_OP));\n      return this.wrapInBraces(fragments);\n    };\n\n    Op.prototype.compileExistence = function(o) {\n      var fst, ref;\n      if (this.first.isComplex()) {\n        ref = new IdentifierLiteral(o.scope.freeVariable('ref'));\n        fst = new Parens(new Assign(ref, this.first));\n      } else {\n        fst = this.first;\n        ref = fst;\n      }\n      return new If(new Existence(fst), ref, {\n        type: 'if'\n      }).addElse(this.second).compileToFragments(o);\n    };\n\n    Op.prototype.compileUnary = function(o) {\n      var op, parts, plusMinus;\n      parts = [];\n      op = this.operator;\n      parts.push([this.makeCode(op)]);\n      if (op === '!' && this.first instanceof Existence) {\n        this.first.negated = !this.first.negated;\n        return this.first.compileToFragments(o);\n      }\n      if (o.level >= LEVEL_ACCESS) {\n        return (new Parens(this)).compileToFragments(o);\n      }\n      plusMinus = op === '+' || op === '-';\n      if ((op === 'new' || op === 'typeof' || op === 'delete') || plusMinus && this.first instanceof Op && this.first.operator === op) {\n        parts.push([this.makeCode(' ')]);\n      }\n      if ((plusMinus && this.first instanceof Op) || (op === 'new' && this.first.isStatement(o))) {\n        this.first = new Parens(this.first);\n      }\n      parts.push(this.first.compileToFragments(o, LEVEL_OP));\n      if (this.flip) {\n        parts.reverse();\n      }\n      return this.joinFragmentArrays(parts, '');\n    };\n\n    Op.prototype.compileYield = function(o) {\n      var op, parts, ref3;\n      parts = [];\n      op = this.operator;\n      if (o.scope.parent == null) {\n        this.error('yield can only occur inside functions');\n      }\n      if (indexOf.call(Object.keys(this.first), 'expression') >= 0 && !(this.first instanceof Throw)) {\n        if (this.first.expression != null) {\n          parts.push(this.first.expression.compileToFragments(o, LEVEL_OP));\n        }\n      } else {\n        if (o.level >= LEVEL_PAREN) {\n          parts.push([this.makeCode(\"(\")]);\n        }\n        parts.push([this.makeCode(op)]);\n        if (((ref3 = this.first.base) != null ? ref3.value : void 0) !== '') {\n          parts.push([this.makeCode(\" \")]);\n        }\n        parts.push(this.first.compileToFragments(o, LEVEL_OP));\n        if (o.level >= LEVEL_PAREN) {\n          parts.push([this.makeCode(\")\")]);\n        }\n      }\n      return this.joinFragmentArrays(parts, '');\n    };\n\n    Op.prototype.compilePower = function(o) {\n      var pow;\n      pow = new Value(new IdentifierLiteral('Math'), [new Access(new PropertyName('pow'))]);\n      return new Call(pow, [this.first, this.second]).compileToFragments(o);\n    };\n\n    Op.prototype.compileFloorDivision = function(o) {\n      var div, floor, second;\n      floor = new Value(new IdentifierLiteral('Math'), [new Access(new PropertyName('floor'))]);\n      second = this.second.isComplex() ? new Parens(this.second) : this.second;\n      div = new Op('/', this.first, second);\n      return new Call(floor, [div]).compileToFragments(o);\n    };\n\n    Op.prototype.compileModulo = function(o) {\n      var mod;\n      mod = new Value(new Literal(utility('modulo', o)));\n      return new Call(mod, [this.first, this.second]).compileToFragments(o);\n    };\n\n    Op.prototype.toString = function(idt) {\n      return Op.__super__.toString.call(this, idt, this.constructor.name + ' ' + this.operator);\n    };\n\n    return Op;\n\n  })(Base);\n\n  exports.In = In = (function(superClass1) {\n    extend1(In, superClass1);\n\n    function In(object, array) {\n      this.object = object;\n      this.array = array;\n    }\n\n    In.prototype.children = ['object', 'array'];\n\n    In.prototype.invert = NEGATE;\n\n    In.prototype.compileNode = function(o) {\n      var hasSplat, j, len1, obj, ref3;\n      if (this.array instanceof Value && this.array.isArray() && this.array.base.objects.length) {\n        ref3 = this.array.base.objects;\n        for (j = 0, len1 = ref3.length; j < len1; j++) {\n          obj = ref3[j];\n          if (!(obj instanceof Splat)) {\n            continue;\n          }\n          hasSplat = true;\n          break;\n        }\n        if (!hasSplat) {\n          return this.compileOrTest(o);\n        }\n      }\n      return this.compileLoopTest(o);\n    };\n\n    In.prototype.compileOrTest = function(o) {\n      var cmp, cnj, i, item, j, len1, ref, ref3, ref4, ref5, sub, tests;\n      ref3 = this.object.cache(o, LEVEL_OP), sub = ref3[0], ref = ref3[1];\n      ref4 = this.negated ? [' !== ', ' && '] : [' === ', ' || '], cmp = ref4[0], cnj = ref4[1];\n      tests = [];\n      ref5 = this.array.base.objects;\n      for (i = j = 0, len1 = ref5.length; j < len1; i = ++j) {\n        item = ref5[i];\n        if (i) {\n          tests.push(this.makeCode(cnj));\n        }\n        tests = tests.concat((i ? ref : sub), this.makeCode(cmp), item.compileToFragments(o, LEVEL_ACCESS));\n      }\n      if (o.level < LEVEL_OP) {\n        return tests;\n      } else {\n        return this.wrapInBraces(tests);\n      }\n    };\n\n    In.prototype.compileLoopTest = function(o) {\n      var fragments, ref, ref3, sub;\n      ref3 = this.object.cache(o, LEVEL_LIST), sub = ref3[0], ref = ref3[1];\n      fragments = [].concat(this.makeCode(utility('indexOf', o) + \".call(\"), this.array.compileToFragments(o, LEVEL_LIST), this.makeCode(\", \"), ref, this.makeCode(\") \" + (this.negated ? '< 0' : '>= 0')));\n      if (fragmentsToText(sub) === fragmentsToText(ref)) {\n        return fragments;\n      }\n      fragments = sub.concat(this.makeCode(', '), fragments);\n      if (o.level < LEVEL_LIST) {\n        return fragments;\n      } else {\n        return this.wrapInBraces(fragments);\n      }\n    };\n\n    In.prototype.toString = function(idt) {\n      return In.__super__.toString.call(this, idt, this.constructor.name + (this.negated ? '!' : ''));\n    };\n\n    return In;\n\n  })(Base);\n\n  exports.Try = Try = (function(superClass1) {\n    extend1(Try, superClass1);\n\n    function Try(attempt, errorVariable, recovery, ensure) {\n      this.attempt = attempt;\n      this.errorVariable = errorVariable;\n      this.recovery = recovery;\n      this.ensure = ensure;\n    }\n\n    Try.prototype.children = ['attempt', 'recovery', 'ensure'];\n\n    Try.prototype.isStatement = YES;\n\n    Try.prototype.jumps = function(o) {\n      var ref3;\n      return this.attempt.jumps(o) || ((ref3 = this.recovery) != null ? ref3.jumps(o) : void 0);\n    };\n\n    Try.prototype.makeReturn = function(res) {\n      if (this.attempt) {\n        this.attempt = this.attempt.makeReturn(res);\n      }\n      if (this.recovery) {\n        this.recovery = this.recovery.makeReturn(res);\n      }\n      return this;\n    };\n\n    Try.prototype.compileNode = function(o) {\n      var catchPart, ensurePart, generatedErrorVariableName, message, placeholder, tryPart;\n      o.indent += TAB;\n      tryPart = this.attempt.compileToFragments(o, LEVEL_TOP);\n      catchPart = this.recovery ? (generatedErrorVariableName = o.scope.freeVariable('error', {\n        reserve: false\n      }), placeholder = new IdentifierLiteral(generatedErrorVariableName), this.errorVariable ? (message = isUnassignable(this.errorVariable.unwrapAll().value), message ? this.errorVariable.error(message) : void 0, this.recovery.unshift(new Assign(this.errorVariable, placeholder))) : void 0, [].concat(this.makeCode(\" catch (\"), placeholder.compileToFragments(o), this.makeCode(\") {\\n\"), this.recovery.compileToFragments(o, LEVEL_TOP), this.makeCode(\"\\n\" + this.tab + \"}\"))) : !(this.ensure || this.recovery) ? (generatedErrorVariableName = o.scope.freeVariable('error', {\n        reserve: false\n      }), [this.makeCode(\" catch (\" + generatedErrorVariableName + \") {}\")]) : [];\n      ensurePart = this.ensure ? [].concat(this.makeCode(\" finally {\\n\"), this.ensure.compileToFragments(o, LEVEL_TOP), this.makeCode(\"\\n\" + this.tab + \"}\")) : [];\n      return [].concat(this.makeCode(this.tab + \"try {\\n\"), tryPart, this.makeCode(\"\\n\" + this.tab + \"}\"), catchPart, ensurePart);\n    };\n\n    return Try;\n\n  })(Base);\n\n  exports.Throw = Throw = (function(superClass1) {\n    extend1(Throw, superClass1);\n\n    function Throw(expression) {\n      this.expression = expression;\n    }\n\n    Throw.prototype.children = ['expression'];\n\n    Throw.prototype.isStatement = YES;\n\n    Throw.prototype.jumps = NO;\n\n    Throw.prototype.makeReturn = THIS;\n\n    Throw.prototype.compileNode = function(o) {\n      return [].concat(this.makeCode(this.tab + \"throw \"), this.expression.compileToFragments(o), this.makeCode(\";\"));\n    };\n\n    return Throw;\n\n  })(Base);\n\n  exports.Existence = Existence = (function(superClass1) {\n    extend1(Existence, superClass1);\n\n    function Existence(expression) {\n      this.expression = expression;\n    }\n\n    Existence.prototype.children = ['expression'];\n\n    Existence.prototype.invert = NEGATE;\n\n    Existence.prototype.compileNode = function(o) {\n      var cmp, cnj, code, ref3;\n      this.expression.front = this.front;\n      code = this.expression.compile(o, LEVEL_OP);\n      if (this.expression.unwrap() instanceof IdentifierLiteral && !o.scope.check(code)) {\n        ref3 = this.negated ? ['===', '||'] : ['!==', '&&'], cmp = ref3[0], cnj = ref3[1];\n        code = \"typeof \" + code + \" \" + cmp + \" \\\"undefined\\\" \" + cnj + \" \" + code + \" \" + cmp + \" null\";\n      } else {\n        code = code + \" \" + (this.negated ? '==' : '!=') + \" null\";\n      }\n      return [this.makeCode(o.level <= LEVEL_COND ? code : \"(\" + code + \")\")];\n    };\n\n    return Existence;\n\n  })(Base);\n\n  exports.Parens = Parens = (function(superClass1) {\n    extend1(Parens, superClass1);\n\n    function Parens(body1) {\n      this.body = body1;\n    }\n\n    Parens.prototype.children = ['body'];\n\n    Parens.prototype.unwrap = function() {\n      return this.body;\n    };\n\n    Parens.prototype.isComplex = function() {\n      return this.body.isComplex();\n    };\n\n    Parens.prototype.compileNode = function(o) {\n      var bare, expr, fragments;\n      expr = this.body.unwrap();\n      if (expr instanceof Value && expr.isAtomic()) {\n        expr.front = this.front;\n        return expr.compileToFragments(o);\n      }\n      fragments = expr.compileToFragments(o, LEVEL_PAREN);\n      bare = o.level < LEVEL_OP && (expr instanceof Op || expr instanceof Call || (expr instanceof For && expr.returns)) && (o.level < LEVEL_COND || fragments.length <= 3);\n      if (bare) {\n        return fragments;\n      } else {\n        return this.wrapInBraces(fragments);\n      }\n    };\n\n    return Parens;\n\n  })(Base);\n\n  exports.StringWithInterpolations = StringWithInterpolations = (function(superClass1) {\n    extend1(StringWithInterpolations, superClass1);\n\n    function StringWithInterpolations() {\n      return StringWithInterpolations.__super__.constructor.apply(this, arguments);\n    }\n\n    StringWithInterpolations.prototype.compileNode = function(o) {\n      var element, elements, expr, fragments, j, len1, value;\n      if (!o.inTaggedTemplateCall) {\n        return StringWithInterpolations.__super__.compileNode.apply(this, arguments);\n      }\n      expr = this.body.unwrap();\n      elements = [];\n      expr.traverseChildren(false, function(node) {\n        if (node instanceof StringLiteral) {\n          elements.push(node);\n          return true;\n        } else if (node instanceof Parens) {\n          elements.push(node);\n          return false;\n        }\n        return true;\n      });\n      fragments = [];\n      fragments.push(this.makeCode('`'));\n      for (j = 0, len1 = elements.length; j < len1; j++) {\n        element = elements[j];\n        if (element instanceof StringLiteral) {\n          value = element.value.slice(1, -1);\n          value = value.replace(/(\\\\*)(`|\\$\\{)/g, function(match, backslashes, toBeEscaped) {\n            if (backslashes.length % 2 === 0) {\n              return backslashes + \"\\\\\" + toBeEscaped;\n            } else {\n              return match;\n            }\n          });\n          fragments.push(this.makeCode(value));\n        } else {\n          fragments.push(this.makeCode('${'));\n          fragments.push.apply(fragments, element.compileToFragments(o, LEVEL_PAREN));\n          fragments.push(this.makeCode('}'));\n        }\n      }\n      fragments.push(this.makeCode('`'));\n      return fragments;\n    };\n\n    return StringWithInterpolations;\n\n  })(Parens);\n\n  exports.For = For = (function(superClass1) {\n    extend1(For, superClass1);\n\n    function For(body, source) {\n      var ref3;\n      this.source = source.source, this.guard = source.guard, this.step = source.step, this.name = source.name, this.index = source.index;\n      this.body = Block.wrap([body]);\n      this.own = !!source.own;\n      this.object = !!source.object;\n      this.from = !!source.from;\n      if (this.from && this.index) {\n        this.index.error('cannot use index with for-from');\n      }\n      if (this.own && !this.object) {\n        source.ownTag.error(\"cannot use own with for-\" + (this.from ? 'from' : 'in'));\n      }\n      if (this.object) {\n        ref3 = [this.index, this.name], this.name = ref3[0], this.index = ref3[1];\n      }\n      if (this.index instanceof Value && !this.index.isAssignable()) {\n        this.index.error('index cannot be a pattern matching expression');\n      }\n      this.range = this.source instanceof Value && this.source.base instanceof Range && !this.source.properties.length && !this.from;\n      this.pattern = this.name instanceof Value;\n      if (this.range && this.index) {\n        this.index.error('indexes do not apply to range loops');\n      }\n      if (this.range && this.pattern) {\n        this.name.error('cannot pattern match over range loops');\n      }\n      this.returns = false;\n    }\n\n    For.prototype.children = ['body', 'source', 'guard', 'step'];\n\n    For.prototype.compileNode = function(o) {\n      var body, bodyFragments, compare, compareDown, declare, declareDown, defPart, defPartFragments, down, forPartFragments, guardPart, idt1, increment, index, ivar, kvar, kvarAssign, last, lvar, name, namePart, ref, ref3, ref4, resultPart, returnResult, rvar, scope, source, step, stepNum, stepVar, svar, varPart;\n      body = Block.wrap([this.body]);\n      ref3 = body.expressions, last = ref3[ref3.length - 1];\n      if ((last != null ? last.jumps() : void 0) instanceof Return) {\n        this.returns = false;\n      }\n      source = this.range ? this.source.base : this.source;\n      scope = o.scope;\n      if (!this.pattern) {\n        name = this.name && (this.name.compile(o, LEVEL_LIST));\n      }\n      index = this.index && (this.index.compile(o, LEVEL_LIST));\n      if (name && !this.pattern) {\n        scope.find(name);\n      }\n      if (index && !(this.index instanceof Value)) {\n        scope.find(index);\n      }\n      if (this.returns) {\n        rvar = scope.freeVariable('results');\n      }\n      if (this.from) {\n        if (this.pattern) {\n          ivar = scope.freeVariable('x', {\n            single: true\n          });\n        }\n      } else {\n        ivar = (this.object && index) || scope.freeVariable('i', {\n          single: true\n        });\n      }\n      kvar = ((this.range || this.from) && name) || index || ivar;\n      kvarAssign = kvar !== ivar ? kvar + \" = \" : \"\";\n      if (this.step && !this.range) {\n        ref4 = this.cacheToCodeFragments(this.step.cache(o, LEVEL_LIST, isComplexOrAssignable)), step = ref4[0], stepVar = ref4[1];\n        if (this.step.isNumber()) {\n          stepNum = Number(stepVar);\n        }\n      }\n      if (this.pattern) {\n        name = ivar;\n      }\n      varPart = '';\n      guardPart = '';\n      defPart = '';\n      idt1 = this.tab + TAB;\n      if (this.range) {\n        forPartFragments = source.compileToFragments(merge(o, {\n          index: ivar,\n          name: name,\n          step: this.step,\n          isComplex: isComplexOrAssignable\n        }));\n      } else {\n        svar = this.source.compile(o, LEVEL_LIST);\n        if ((name || this.own) && !(this.source.unwrap() instanceof IdentifierLiteral)) {\n          defPart += \"\" + this.tab + (ref = scope.freeVariable('ref')) + \" = \" + svar + \";\\n\";\n          svar = ref;\n        }\n        if (name && !this.pattern && !this.from) {\n          namePart = name + \" = \" + svar + \"[\" + kvar + \"]\";\n        }\n        if (!this.object && !this.from) {\n          if (step !== stepVar) {\n            defPart += \"\" + this.tab + step + \";\\n\";\n          }\n          down = stepNum < 0;\n          if (!(this.step && (stepNum != null) && down)) {\n            lvar = scope.freeVariable('len');\n          }\n          declare = \"\" + kvarAssign + ivar + \" = 0, \" + lvar + \" = \" + svar + \".length\";\n          declareDown = \"\" + kvarAssign + ivar + \" = \" + svar + \".length - 1\";\n          compare = ivar + \" < \" + lvar;\n          compareDown = ivar + \" >= 0\";\n          if (this.step) {\n            if (stepNum != null) {\n              if (down) {\n                compare = compareDown;\n                declare = declareDown;\n              }\n            } else {\n              compare = stepVar + \" > 0 ? \" + compare + \" : \" + compareDown;\n              declare = \"(\" + stepVar + \" > 0 ? (\" + declare + \") : \" + declareDown + \")\";\n            }\n            increment = ivar + \" += \" + stepVar;\n          } else {\n            increment = \"\" + (kvar !== ivar ? \"++\" + ivar : ivar + \"++\");\n          }\n          forPartFragments = [this.makeCode(declare + \"; \" + compare + \"; \" + kvarAssign + increment)];\n        }\n      }\n      if (this.returns) {\n        resultPart = \"\" + this.tab + rvar + \" = [];\\n\";\n        returnResult = \"\\n\" + this.tab + \"return \" + rvar + \";\";\n        body.makeReturn(rvar);\n      }\n      if (this.guard) {\n        if (body.expressions.length > 1) {\n          body.expressions.unshift(new If((new Parens(this.guard)).invert(), new StatementLiteral(\"continue\")));\n        } else {\n          if (this.guard) {\n            body = Block.wrap([new If(this.guard, body)]);\n          }\n        }\n      }\n      if (this.pattern) {\n        body.expressions.unshift(new Assign(this.name, this.from ? new IdentifierLiteral(kvar) : new Literal(svar + \"[\" + kvar + \"]\")));\n      }\n      defPartFragments = [].concat(this.makeCode(defPart), this.pluckDirectCall(o, body));\n      if (namePart) {\n        varPart = \"\\n\" + idt1 + namePart + \";\";\n      }\n      if (this.object) {\n        forPartFragments = [this.makeCode(kvar + \" in \" + svar)];\n        if (this.own) {\n          guardPart = \"\\n\" + idt1 + \"if (!\" + (utility('hasProp', o)) + \".call(\" + svar + \", \" + kvar + \")) continue;\";\n        }\n      } else if (this.from) {\n        forPartFragments = [this.makeCode(kvar + \" of \" + svar)];\n      }\n      bodyFragments = body.compileToFragments(merge(o, {\n        indent: idt1\n      }), LEVEL_TOP);\n      if (bodyFragments && bodyFragments.length > 0) {\n        bodyFragments = [].concat(this.makeCode(\"\\n\"), bodyFragments, this.makeCode(\"\\n\"));\n      }\n      return [].concat(defPartFragments, this.makeCode(\"\" + (resultPart || '') + this.tab + \"for (\"), forPartFragments, this.makeCode(\") {\" + guardPart + varPart), bodyFragments, this.makeCode(this.tab + \"}\" + (returnResult || '')));\n    };\n\n    For.prototype.pluckDirectCall = function(o, body) {\n      var base, defs, expr, fn, idx, j, len1, ref, ref3, ref4, ref5, ref6, ref7, ref8, ref9, val;\n      defs = [];\n      ref3 = body.expressions;\n      for (idx = j = 0, len1 = ref3.length; j < len1; idx = ++j) {\n        expr = ref3[idx];\n        expr = expr.unwrapAll();\n        if (!(expr instanceof Call)) {\n          continue;\n        }\n        val = (ref4 = expr.variable) != null ? ref4.unwrapAll() : void 0;\n        if (!((val instanceof Code) || (val instanceof Value && ((ref5 = val.base) != null ? ref5.unwrapAll() : void 0) instanceof Code && val.properties.length === 1 && ((ref6 = (ref7 = val.properties[0].name) != null ? ref7.value : void 0) === 'call' || ref6 === 'apply')))) {\n          continue;\n        }\n        fn = ((ref8 = val.base) != null ? ref8.unwrapAll() : void 0) || val;\n        ref = new IdentifierLiteral(o.scope.freeVariable('fn'));\n        base = new Value(ref);\n        if (val.base) {\n          ref9 = [base, val], val.base = ref9[0], base = ref9[1];\n        }\n        body.expressions[idx] = new Call(base, expr.args);\n        defs = defs.concat(this.makeCode(this.tab), new Assign(ref, fn).compileToFragments(o, LEVEL_TOP), this.makeCode(';\\n'));\n      }\n      return defs;\n    };\n\n    return For;\n\n  })(While);\n\n  exports.Switch = Switch = (function(superClass1) {\n    extend1(Switch, superClass1);\n\n    function Switch(subject, cases, otherwise) {\n      this.subject = subject;\n      this.cases = cases;\n      this.otherwise = otherwise;\n    }\n\n    Switch.prototype.children = ['subject', 'cases', 'otherwise'];\n\n    Switch.prototype.isStatement = YES;\n\n    Switch.prototype.jumps = function(o) {\n      var block, conds, j, jumpNode, len1, ref3, ref4, ref5;\n      if (o == null) {\n        o = {\n          block: true\n        };\n      }\n      ref3 = this.cases;\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        ref4 = ref3[j], conds = ref4[0], block = ref4[1];\n        if (jumpNode = block.jumps(o)) {\n          return jumpNode;\n        }\n      }\n      return (ref5 = this.otherwise) != null ? ref5.jumps(o) : void 0;\n    };\n\n    Switch.prototype.makeReturn = function(res) {\n      var j, len1, pair, ref3, ref4;\n      ref3 = this.cases;\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        pair = ref3[j];\n        pair[1].makeReturn(res);\n      }\n      if (res) {\n        this.otherwise || (this.otherwise = new Block([new Literal('void 0')]));\n      }\n      if ((ref4 = this.otherwise) != null) {\n        ref4.makeReturn(res);\n      }\n      return this;\n    };\n\n    Switch.prototype.compileNode = function(o) {\n      var block, body, cond, conditions, expr, fragments, i, idt1, idt2, j, k, len1, len2, ref3, ref4, ref5;\n      idt1 = o.indent + TAB;\n      idt2 = o.indent = idt1 + TAB;\n      fragments = [].concat(this.makeCode(this.tab + \"switch (\"), (this.subject ? this.subject.compileToFragments(o, LEVEL_PAREN) : this.makeCode(\"false\")), this.makeCode(\") {\\n\"));\n      ref3 = this.cases;\n      for (i = j = 0, len1 = ref3.length; j < len1; i = ++j) {\n        ref4 = ref3[i], conditions = ref4[0], block = ref4[1];\n        ref5 = flatten([conditions]);\n        for (k = 0, len2 = ref5.length; k < len2; k++) {\n          cond = ref5[k];\n          if (!this.subject) {\n            cond = cond.invert();\n          }\n          fragments = fragments.concat(this.makeCode(idt1 + \"case \"), cond.compileToFragments(o, LEVEL_PAREN), this.makeCode(\":\\n\"));\n        }\n        if ((body = block.compileToFragments(o, LEVEL_TOP)).length > 0) {\n          fragments = fragments.concat(body, this.makeCode('\\n'));\n        }\n        if (i === this.cases.length - 1 && !this.otherwise) {\n          break;\n        }\n        expr = this.lastNonComment(block.expressions);\n        if (expr instanceof Return || (expr instanceof Literal && expr.jumps() && expr.value !== 'debugger')) {\n          continue;\n        }\n        fragments.push(cond.makeCode(idt2 + 'break;\\n'));\n      }\n      if (this.otherwise && this.otherwise.expressions.length) {\n        fragments.push.apply(fragments, [this.makeCode(idt1 + \"default:\\n\")].concat(slice.call(this.otherwise.compileToFragments(o, LEVEL_TOP)), [this.makeCode(\"\\n\")]));\n      }\n      fragments.push(this.makeCode(this.tab + '}'));\n      return fragments;\n    };\n\n    return Switch;\n\n  })(Base);\n\n  exports.If = If = (function(superClass1) {\n    extend1(If, superClass1);\n\n    function If(condition, body1, options) {\n      this.body = body1;\n      if (options == null) {\n        options = {};\n      }\n      this.condition = options.type === 'unless' ? condition.invert() : condition;\n      this.elseBody = null;\n      this.isChain = false;\n      this.soak = options.soak;\n    }\n\n    If.prototype.children = ['condition', 'body', 'elseBody'];\n\n    If.prototype.bodyNode = function() {\n      var ref3;\n      return (ref3 = this.body) != null ? ref3.unwrap() : void 0;\n    };\n\n    If.prototype.elseBodyNode = function() {\n      var ref3;\n      return (ref3 = this.elseBody) != null ? ref3.unwrap() : void 0;\n    };\n\n    If.prototype.addElse = function(elseBody) {\n      if (this.isChain) {\n        this.elseBodyNode().addElse(elseBody);\n      } else {\n        this.isChain = elseBody instanceof If;\n        this.elseBody = this.ensureBlock(elseBody);\n        this.elseBody.updateLocationDataIfMissing(elseBody.locationData);\n      }\n      return this;\n    };\n\n    If.prototype.isStatement = function(o) {\n      var ref3;\n      return (o != null ? o.level : void 0) === LEVEL_TOP || this.bodyNode().isStatement(o) || ((ref3 = this.elseBodyNode()) != null ? ref3.isStatement(o) : void 0);\n    };\n\n    If.prototype.jumps = function(o) {\n      var ref3;\n      return this.body.jumps(o) || ((ref3 = this.elseBody) != null ? ref3.jumps(o) : void 0);\n    };\n\n    If.prototype.compileNode = function(o) {\n      if (this.isStatement(o)) {\n        return this.compileStatement(o);\n      } else {\n        return this.compileExpression(o);\n      }\n    };\n\n    If.prototype.makeReturn = function(res) {\n      if (res) {\n        this.elseBody || (this.elseBody = new Block([new Literal('void 0')]));\n      }\n      this.body && (this.body = new Block([this.body.makeReturn(res)]));\n      this.elseBody && (this.elseBody = new Block([this.elseBody.makeReturn(res)]));\n      return this;\n    };\n\n    If.prototype.ensureBlock = function(node) {\n      if (node instanceof Block) {\n        return node;\n      } else {\n        return new Block([node]);\n      }\n    };\n\n    If.prototype.compileStatement = function(o) {\n      var answer, body, child, cond, exeq, ifPart, indent;\n      child = del(o, 'chainChild');\n      exeq = del(o, 'isExistentialEquals');\n      if (exeq) {\n        return new If(this.condition.invert(), this.elseBodyNode(), {\n          type: 'if'\n        }).compileToFragments(o);\n      }\n      indent = o.indent + TAB;\n      cond = this.condition.compileToFragments(o, LEVEL_PAREN);\n      body = this.ensureBlock(this.body).compileToFragments(merge(o, {\n        indent: indent\n      }));\n      ifPart = [].concat(this.makeCode(\"if (\"), cond, this.makeCode(\") {\\n\"), body, this.makeCode(\"\\n\" + this.tab + \"}\"));\n      if (!child) {\n        ifPart.unshift(this.makeCode(this.tab));\n      }\n      if (!this.elseBody) {\n        return ifPart;\n      }\n      answer = ifPart.concat(this.makeCode(' else '));\n      if (this.isChain) {\n        o.chainChild = true;\n        answer = answer.concat(this.elseBody.unwrap().compileToFragments(o, LEVEL_TOP));\n      } else {\n        answer = answer.concat(this.makeCode(\"{\\n\"), this.elseBody.compileToFragments(merge(o, {\n          indent: indent\n        }), LEVEL_TOP), this.makeCode(\"\\n\" + this.tab + \"}\"));\n      }\n      return answer;\n    };\n\n    If.prototype.compileExpression = function(o) {\n      var alt, body, cond, fragments;\n      cond = this.condition.compileToFragments(o, LEVEL_COND);\n      body = this.bodyNode().compileToFragments(o, LEVEL_LIST);\n      alt = this.elseBodyNode() ? this.elseBodyNode().compileToFragments(o, LEVEL_LIST) : [this.makeCode('void 0')];\n      fragments = cond.concat(this.makeCode(\" ? \"), body, this.makeCode(\" : \"), alt);\n      if (o.level >= LEVEL_COND) {\n        return this.wrapInBraces(fragments);\n      } else {\n        return fragments;\n      }\n    };\n\n    If.prototype.unfoldSoak = function() {\n      return this.soak && this;\n    };\n\n    return If;\n\n  })(Base);\n\n  UTILITIES = {\n    extend: function(o) {\n      return \"function(child, parent) { for (var key in parent) { if (\" + (utility('hasProp', o)) + \".call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; }\";\n    },\n    bind: function() {\n      return 'function(fn, me){ return function(){ return fn.apply(me, arguments); }; }';\n    },\n    indexOf: function() {\n      return \"[].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; }\";\n    },\n    modulo: function() {\n      return \"function(a, b) { return (+a % (b = +b) + b) % b; }\";\n    },\n    hasProp: function() {\n      return '{}.hasOwnProperty';\n    },\n    slice: function() {\n      return '[].slice';\n    }\n  };\n\n  LEVEL_TOP = 1;\n\n  LEVEL_PAREN = 2;\n\n  LEVEL_LIST = 3;\n\n  LEVEL_COND = 4;\n\n  LEVEL_OP = 5;\n\n  LEVEL_ACCESS = 6;\n\n  TAB = '  ';\n\n  SIMPLENUM = /^[+-]?\\d+$/;\n\n  utility = function(name, o) {\n    var ref, root;\n    root = o.scope.root;\n    if (name in root.utilities) {\n      return root.utilities[name];\n    } else {\n      ref = root.freeVariable(name);\n      root.assign(ref, UTILITIES[name](o));\n      return root.utilities[name] = ref;\n    }\n  };\n\n  multident = function(code, tab) {\n    code = code.replace(/\\n/g, '$&' + tab);\n    return code.replace(/\\s+$/, '');\n  };\n\n  isLiteralArguments = function(node) {\n    return node instanceof IdentifierLiteral && node.value === 'arguments';\n  };\n\n  isLiteralThis = function(node) {\n    return node instanceof ThisLiteral || (node instanceof Code && node.bound) || node instanceof SuperCall;\n  };\n\n  isComplexOrAssignable = function(node) {\n    return node.isComplex() || (typeof node.isAssignable === \"function\" ? node.isAssignable() : void 0);\n  };\n\n  unfoldSoak = function(o, parent, name) {\n    var ifn;\n    if (!(ifn = parent[name].unfoldSoak(o))) {\n      return;\n    }\n    parent[name] = ifn.body;\n    ifn.body = new Value(parent);\n    return ifn;\n  };\n\n}).call(this);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}