{"ast":null,"code":"var _jsxFileName = \"/home/kali/Desktop/c++/proshop/src/screens/UserEditScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, redirect, useNavigate } from 'react-router-dom';\nimport { Form, Row, Col, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport FormContainer from '../components/FormContainer';\nimport { getUserDetails } from '../actions/userActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserEditScreen = _ref => {\n  _s();\n  let {} = _ref;\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  console.log(id);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [admin, setIsAdmin] = useState(false);\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  useEffect(() => {\n    if (!user.name || user._id !== id) {\n      dispatch(getUserDetails(id));\n    } else {\n      setName(user.name);\n      setEmail(user.email);\n      setIsAdmin(user.isAdmin);\n    }\n  }, [dispatch, id, user]);\n  const submitHandler = e => {\n    e.preventDefault();\n  };\n  const setPassword = () => {\n    console.log('set password');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/userlist\",\n      className: \"btn btn-light my-3\",\n      children: \"Go back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 16\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 32\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"Enter name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"isAdmin\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"checkbox\",\n            label: \"isAdmin\",\n            checked: setIsAdmin,\n            onChange: e => setIsAdmin(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Regiter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(UserEditScreen, \"NVEDx0f+vVkVyMzg5m90UUaTaeg=\", false, function () {\n  return [useNavigate, useDispatch, useParams, useSelector];\n});\n_c = UserEditScreen;\nexport default UserEditScreen;\nvar _c;\n$RefreshReg$(_c, \"UserEditScreen\");","map":{"version":3,"names":["React","useState","useEffect","Link","redirect","useNavigate","Form","Row","Col","Button","useDispatch","useSelector","useParams","Loader","Message","FormContainer","getUserDetails","UserEditScreen","navigate","dispatch","id","console","log","name","setName","email","setEmail","admin","setIsAdmin","userDetails","state","loading","error","user","_id","isAdmin","submitHandler","e","preventDefault","setPassword","target","value","checked"],"sources":["/home/kali/Desktop/c++/proshop/src/screens/UserEditScreen.js"],"sourcesContent":["import React,{useState,useEffect} from 'react'\nimport {Link, redirect,useNavigate} from 'react-router-dom'\nimport {Form,Row,Col,Button} from 'react-bootstrap'\nimport {useDispatch,useSelector} from 'react-redux'\nimport { useParams} from 'react-router'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails } from '../actions/userActions'\nconst UserEditScreen = ({}) => {\n    const navigate=useNavigate()\n    const dispatch=useDispatch()\n    const {id}=useParams()\n    console.log(id)\n    const [name,setName]=useState('')\n    const [email,setEmail]=useState('')\n    const [admin,setIsAdmin]=useState(false)\n    \n    \n    const userDetails=useSelector(state=>state.userDetails)\n    const {loading,error,user}=userDetails\n\n    useEffect(()=>{\n    if(!user.name || user._id!==id){\n      dispatch(getUserDetails(id))\n    }else{\n      setName(user.name)\n      setEmail(user.email)\n      setIsAdmin(user.isAdmin)\n    }\n    },[dispatch,id,user])\n    \n    \n    const submitHandler =(e)=>{\n      e.preventDefault()\n\n    }\n    const setPassword=()=>{\n      console.log('set password')\n    }\n\n  return (\n    <>\n    <Link to='/admin/userlist' className='btn btn-light my-3'>Go back</Link>\n    \n    <FormContainer>\n      <h1>Edit user</h1>\n\n      {loading?<Loader/>:error?<Message variant='danger'>{error}</Message>:\n      (\n        <Form onSubmit={submitHandler}>\n\n      <Form.Group controlId='name'>\n            <Form.Label>Name</Form.Label>\n            <Form.Control type='name' placeholder='Enter name'\n            value={name}\n            onChange={(e)=>setName(e.target.value)}\n            \n            ></Form.Control>\n        </Form.Group>\n\n        \n        <Form.Group controlId='email'>\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control type='email' placeholder='Enter email'\n            value={email}\n            onChange={(e)=>setEmail(e.target.value)}\n            \n            ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='isAdmin'>\n            <Form.Label>Password </Form.Label>\n            <Form.Control type='checkbox'label='isAdmin'\n            checked={setIsAdmin}\n            onChange={(e)=>setIsAdmin(e.target.checked)}\n            \n            ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n            Regiter\n        </Button>\n      </Form>\n\n\n      )}\n      \n      \n    </FormContainer>\n    </>\n  )\n}\n\nexport default UserEditScreen\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}