{"ast":null,"code":"var _jsxFileName = \"/home/kali/Desktop/c++/proshop/src/screens/ProfileScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, redirect, useNavigate } from 'react-router-dom';\nimport { ReactLocation, Router } from 'react-location';\nimport { Form, Row, Col, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\nimport { listMyOrders } from '../actions/orderActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileScreen = _ref => {\n  _s();\n  let {} = _ref;\n  const navigate = useNavigate();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setpassword] = useState('');\n  const [confirmpassword, setConfirmpassword] = useState('');\n  const [message, setMessage] = useState(null);\n  const userLogin = useSelector(state => state.userLogin);\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success\n  } = userUpdateProfile;\n  const orderListMy = useSelector(state => state.orderListMy);\n  const {\n    loading: loadingOrders,\n    error: errorOrders,\n    orders\n  } = orderListMy;\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const {\n    userInfo\n  } = userLogin;\n  const dispatch = useDispatch();\n  const location = new ReactLocation();\n  useEffect(() => {\n    if (!userInfo) {\n      navigate('/login');\n    } else {\n      if (!user.name) {\n        dispatch(getUserDetails('profile'));\n        dispatch(listMyOrders());\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, location, userInfo]);\n  const submitHandler = e => {\n    e.preventDefault();\n    if (password !== confirmpassword) {\n      setMessage('Password do not match');\n    } else {\n      dispatch(updateUserProfile({\n        id: user._id,\n        name,\n        email,\n        password\n      }));\n    }\n    // dispatch(register(name,email,password))\n  };\n\n  const setPassword = () => {\n    console.log('set password');\n  };\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 3,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 16\n      }, this), success && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"success\",\n        children: \"Profile Updated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 18\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"Enter name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Enter password\",\n            value: password,\n            onChange: e => setpassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"confirmpassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Enter password\",\n            value: confirmpassword,\n            onChange: e => setConfirmpassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 9,\n      children: \"My Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 10\n  }, this);\n};\n_s(ProfileScreen, \"JDMF6F6+mzbqbt0cLph8P7yPy2M=\", false, function () {\n  return [useNavigate, useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n_c = ProfileScreen;\nexport default ProfileScreen;\nvar _c;\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"names":["React","useState","useEffect","Link","redirect","useNavigate","ReactLocation","Router","Form","Row","Col","Button","useDispatch","useSelector","Loader","Message","getUserDetails","updateUserProfile","listMyOrders","ProfileScreen","navigate","name","setName","email","setEmail","password","setpassword","confirmpassword","setConfirmpassword","message","setMessage","userLogin","state","userUpdateProfile","success","orderListMy","loading","loadingOrders","error","errorOrders","orders","userDetails","user","userInfo","dispatch","location","submitHandler","e","preventDefault","id","_id","setPassword","console","log","target","value"],"sources":["/home/kali/Desktop/c++/proshop/src/screens/ProfileScreen.js"],"sourcesContent":["import React,{useState,useEffect} from 'react'\nimport {Link, redirect,useNavigate} from 'react-router-dom'\nimport { ReactLocation, Router } from 'react-location'\nimport {Form,Row,Col,Button} from 'react-bootstrap'\nimport {useDispatch,useSelector} from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { getUserDetails,updateUserProfile} from '../actions/userActions'\nimport { listMyOrders } from '../actions/orderActions'\nconst ProfileScreen = ({}) => {\n    const navigate=useNavigate()\n    const [name,setName]=useState('')\n    const [email,setEmail]=useState('')\n    const [password,setpassword]=useState('')\n    const [confirmpassword,setConfirmpassword]=useState('')\n    const [message,setMessage]=useState(null)\n     \n\n    const userLogin=useSelector(state=>state.userLogin)\n    \n    const userUpdateProfile=useSelector(state=>state.userUpdateProfile)\n    const {success}=userUpdateProfile\n\n\n    const orderListMy=useSelector(state=>state.orderListMy)\n    const {loading:loadingOrders,error:errorOrders,orders}=orderListMy\n\n    const userDetails=useSelector(state=>state.userDetails)\n    const {loading,error,user}=userDetails\n    const {userInfo}=userLogin\n    const dispatch=useDispatch()\n\n    \n\n    const location = new ReactLocation()\n    useEffect(()=>{\n      if(!userInfo){\n        navigate('/login')\n      }else{\n        if(!user.name){\n            dispatch(getUserDetails('profile'))\n            dispatch(listMyOrders())\n        }else{\n            setName(user.name)\n            setEmail(user.email)\n\n        }\n      }\n    },[dispatch,location,userInfo])\n  \n    \n    const submitHandler =(e)=>{\n      e.preventDefault()\n        if(password!==confirmpassword){\n            setMessage('Password do not match')\n        }else {\n            dispatch(updateUserProfile({id:user._id,name,email,password}))\n        }\n        // dispatch(register(name,email,password))\n    }\n    const setPassword=()=>{\n      console.log('set password')\n    }\n\n  return <Row>\n        <Col md={3}>\n        \n      <h2>User Profile</h2>\n      {message && <Message variant='danger'>{message}</Message>}\n      {error &&<Message variant='danger'>{error}</Message>}\n      {success &&<Message variant='success'>Profile Updated</Message>}\n      {loading &&<Loader/>}\n      <Form onSubmit={submitHandler}>\n\n      <Form.Group controlId='name'>\n            <Form.Label>Name</Form.Label>\n            <Form.Control type='name' placeholder='Enter name'\n            value={name}\n            onChange={(e)=>setName(e.target.value)}\n            \n            ></Form.Control>\n        </Form.Group>\n\n        \n        <Form.Group controlId='email'>\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control type='email' placeholder='Enter email'\n            value={email}\n            onChange={(e)=>setEmail(e.target.value)}\n            \n            ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n            <Form.Label>Password </Form.Label>\n            <Form.Control type='password' placeholder='Enter password'\n            value={password}\n            onChange={(e)=>setpassword(e.target.value)}\n            \n            ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='confirmpassword'>\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control type='password' placeholder='Enter password'\n            value={confirmpassword}\n            onChange={(e)=>setConfirmpassword(e.target.value)}\n            \n            ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n            Update\n        </Button>\n      </Form>\n\n        </Col>\n        <Col md={9}>\n            My Orders\n        </Col>\n  </Row>\n}\n\nexport default ProfileScreen\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}