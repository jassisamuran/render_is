{"ast":null,"code":"import{ORDER_CREATE_FAIL,ORDER_CREATE_REQUEST,ORDER_CREATE_SUCCESS,ORDER_DELIVERED_FAIL,ORDER_DELIVERED_REQUEST,ORDER_DELIVERED_SUCCESS,ORDER_DETAILS_FAIL,ORDER_DETAILS_REQUEST,ORDER_DETAILS_SUCCESS,ORDER_LIST_FAIL,ORDER_LIST_MY_FAIL,ORDER_LIST_MY_REQUEST,ORDER_LIST_MY_SUCCESS,ORDER_LIST_REQUEST,ORDER_LIST_SUCCESS,ORDER_PAY_FAIL,ORDER_PAY_REQUEST,ORDER_PAY_SUCCESS}from\"../constants/orderConstansts\";import axios from\"axios\";export const createOrder=order=>async(dispatch,getState)=>{try{dispatch({type:ORDER_CREATE_REQUEST});const{userLogin:{userInfo}}=getState();const config={headers:{\"Content-type\":\"application/json\",Authorization:\"Bearer \".concat(userInfo.token)}};const{data}=await axios.post(\"/api/orders\",order,config);dispatch({type:ORDER_CREATE_SUCCESS,payload:data});}catch(error){dispatch({type:ORDER_CREATE_FAIL,payload:error.response&&error.response.data.message?error.response.data.message:error.message});}};export const getOrderDetails=id=>async(dispatch,getState)=>{console.log(\"is\");try{dispatch({type:ORDER_DETAILS_REQUEST});const{userLogin:{userInfo}}=getState();const config={headers:{Authorization:\"Bearer \".concat(userInfo.token)}};const{data}=await axios.get(\"/api/orders/\".concat(id),config);console.log(\"this is data \");console.log(data);dispatch({type:ORDER_DETAILS_SUCCESS,payload:data});}catch(error){dispatch({type:ORDER_DETAILS_FAIL,payload:error.response&&error.response.data.message?error.response.data.message:error.message});}};// export const getOrderDetails = (orderId) => async (dispatch, getState) => {\n//     try {\n//       dispatch({ type: ORDER_DETAILS_REQUEST });\n//       const { userLogin: { userInfo },} = getState();\n//       const {data} = await axios.get(`/api/orders/${orderId}`, {\n//         headers:\n//           { Authorization: 'Bearer ' + userInfo.token }\n//       });\n//       dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data })\n//     } catch (error) {\n//       dispatch({ type: ORDER_DETAILS_FAIL, payload: error.message });\n//     }\n//   }\nexport const payOrder=(orderId,paymentResult)=>async(dispatch,getState)=>{console.log(\"is\");try{dispatch({type:ORDER_PAY_REQUEST});const{userLogin:{userInfo}}=getState();const config={headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(userInfo.token)}};const{data}=await axios.put(\"/api/orders/\".concat(orderId,\"/pay\"),paymentResult,config);console.log(\"this is data \");console.log(data);dispatch({type:ORDER_PAY_SUCCESS,payload:data});}catch(error){dispatch({type:ORDER_PAY_FAIL,payload:error.response&&error.response.data.message?error.response.data.message:error.message});}};export const listMyOrders=()=>async(dispatch,getState)=>{// console.log('is')\ntry{dispatch({type:ORDER_LIST_MY_REQUEST});const{userLogin:{userInfo}}=getState();const config={headers:{Authorization:\"Bearer \".concat(userInfo.token)}};const{data}=await axios.get(\"/api/orders/myorders\",config);console.log(\"this is data \");console.log(data);dispatch({type:ORDER_LIST_MY_SUCCESS,payload:data});}catch(error){dispatch({type:ORDER_LIST_MY_FAIL,payload:error.response&&error.response.data.message?error.response.data.message:error.message});}};export const listOrders=()=>async(dispatch,getState)=>{// console.log('is')\ntry{dispatch({type:ORDER_LIST_REQUEST});const{userLogin:{userInfo}}=getState();const config={headers:{Authorization:\"Bearer \".concat(userInfo.token)}};const{data}=await axios.get(\"/api/orders\",config);console.log(\"this is data \");console.log(data);dispatch({type:ORDER_LIST_SUCCESS,payload:data});}catch(error){dispatch({type:ORDER_LIST_FAIL,payload:error.response&&error.response.data.message?error.response.data.message:error.message});}};export const deliverOrder=order=>async(dispatch,getState)=>{console.log(\"after actions\");console.log(order._id);try{dispatch({type:ORDER_DELIVERED_REQUEST});const{userLogin:{userInfo}}=getState();const config={headers:{Authorization:\"Bearer \".concat(userInfo.token)}};const{data}=await axios.put(\"/api/orders/\".concat(order._id,\"/deliver\"),{},config);console.log(\"this is data \");console.log(data);dispatch({type:ORDER_DELIVERED_SUCCESS,payload:data});}catch(error){dispatch({type:ORDER_DELIVERED_FAIL,payload:error.response&&error.response.data.message?error.response.data.message:error.message});}};","map":{"version":3,"names":["ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_DELIVERED_FAIL","ORDER_DELIVERED_REQUEST","ORDER_DELIVERED_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_LIST_FAIL","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","axios","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","error","response","message","getOrderDetails","id","console","log","get","payOrder","orderId","paymentResult","put","listMyOrders","listOrders","deliverOrder","_id"],"sources":["/home/kali/Desktop/c++/proshop/src/actions/orderActions.js"],"sourcesContent":["import {\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_DELIVERED_FAIL,\n  ORDER_DELIVERED_REQUEST,\n  ORDER_DELIVERED_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n} from \"../constants/orderConstansts\";\nimport axios from \"axios\";\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.post(`/api/orders`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  console.log(\"is\");\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.get(`/api/orders/${id}`, config);\n    console.log(\"this is data \");\n    console.log(data);\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// export const getOrderDetails = (orderId) => async (dispatch, getState) => {\n//     try {\n//       dispatch({ type: ORDER_DETAILS_REQUEST });\n//       const { userLogin: { userInfo },} = getState();\n//       const {data} = await axios.get(`/api/orders/${orderId}`, {\n//         headers:\n//           { Authorization: 'Bearer ' + userInfo.token }\n//       });\n//       dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data })\n//     } catch (error) {\n//       dispatch({ type: ORDER_DETAILS_FAIL, payload: error.message });\n//     }\n//   }\n\nexport const payOrder =\n  (orderId, paymentResult) => async (dispatch, getState) => {\n    console.log(\"is\");\n    try {\n      dispatch({\n        type: ORDER_PAY_REQUEST,\n      });\n      const {\n        userLogin: { userInfo },\n      } = getState();\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/orders/${orderId}/pay`,\n        paymentResult,\n        config\n      );\n      console.log(\"this is data \");\n      console.log(data);\n\n      dispatch({\n        type: ORDER_PAY_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: ORDER_PAY_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  // console.log('is')\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.get(`/api/orders/myorders`, config);\n    console.log(\"this is data \");\n    console.log(data);\n\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listOrders = () => async (dispatch, getState) => {\n  // console.log('is')\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.get(`/api/orders`, config);\n    console.log(\"this is data \");\n    console.log(data);\n\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n  console.log(\"after actions\");\n  console.log(order._id);\n  try {\n    dispatch({\n      type: ORDER_DELIVERED_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.put(\n      `/api/orders/${order._id}/deliver`,\n      {},\n      config\n    );\n    console.log(\"this is data \");\n    console.log(data);\n\n    dispatch({\n      type: ORDER_DELIVERED_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DELIVERED_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}