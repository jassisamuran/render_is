{"ast":null,"code":"// Generated by CoffeeScript 1.12.7\n(function () {\n  var CoffeeScript, Module, binary, child_process, ext, findExtension, fork, helpers, i, len, loadFile, path, ref;\n  CoffeeScript = require('./coffee-script');\n  child_process = require('child_process');\n  helpers = require('./helpers');\n  path = require('path');\n  loadFile = function (module, filename) {\n    var answer;\n    answer = CoffeeScript._compileFile(filename, false, true);\n    return module._compile(answer, filename);\n  };\n  if (require.extensions) {\n    ref = CoffeeScript.FILE_EXTENSIONS;\n    for (i = 0, len = ref.length; i < len; i++) {\n      ext = ref[i];\n      require.extensions[ext] = loadFile;\n    }\n    Module = require('module');\n    findExtension = function (filename) {\n      var curExtension, extensions;\n      extensions = path.basename(filename).split('.');\n      if (extensions[0] === '') {\n        extensions.shift();\n      }\n      while (extensions.shift()) {\n        curExtension = '.' + extensions.join('.');\n        if (Module._extensions[curExtension]) {\n          return curExtension;\n        }\n      }\n      return '.js';\n    };\n    Module.prototype.load = function (filename) {\n      var extension;\n      this.filename = filename;\n      this.paths = Module._nodeModulePaths(path.dirname(filename));\n      extension = findExtension(filename);\n      Module._extensions[extension](this, filename);\n      return this.loaded = true;\n    };\n  }\n  if (child_process) {\n    fork = child_process.fork;\n    binary = require.resolve('../../bin/coffee');\n    child_process.fork = function (path, args, options) {\n      if (helpers.isCoffee(path)) {\n        if (!Array.isArray(args)) {\n          options = args || {};\n          args = [];\n        }\n        args = [path].concat(args);\n        path = binary;\n      }\n      return fork(path, args, options);\n    };\n  }\n}).call(this);","map":{"version":3,"names":["CoffeeScript","Module","binary","child_process","ext","findExtension","fork","helpers","i","len","loadFile","path","ref","require","module","filename","answer","_compileFile","_compile","extensions","FILE_EXTENSIONS","length","curExtension","basename","split","shift","join","_extensions","prototype","load","extension","paths","_nodeModulePaths","dirname","loaded","resolve","args","options","isCoffee","Array","isArray","concat","call"],"sources":["/home/kali/Desktop/c++/proshop/node_modules/coffee-script/lib/coffee-script/register.js"],"sourcesContent":["// Generated by CoffeeScript 1.12.7\n(function() {\n  var CoffeeScript, Module, binary, child_process, ext, findExtension, fork, helpers, i, len, loadFile, path, ref;\n\n  CoffeeScript = require('./coffee-script');\n\n  child_process = require('child_process');\n\n  helpers = require('./helpers');\n\n  path = require('path');\n\n  loadFile = function(module, filename) {\n    var answer;\n    answer = CoffeeScript._compileFile(filename, false, true);\n    return module._compile(answer, filename);\n  };\n\n  if (require.extensions) {\n    ref = CoffeeScript.FILE_EXTENSIONS;\n    for (i = 0, len = ref.length; i < len; i++) {\n      ext = ref[i];\n      require.extensions[ext] = loadFile;\n    }\n    Module = require('module');\n    findExtension = function(filename) {\n      var curExtension, extensions;\n      extensions = path.basename(filename).split('.');\n      if (extensions[0] === '') {\n        extensions.shift();\n      }\n      while (extensions.shift()) {\n        curExtension = '.' + extensions.join('.');\n        if (Module._extensions[curExtension]) {\n          return curExtension;\n        }\n      }\n      return '.js';\n    };\n    Module.prototype.load = function(filename) {\n      var extension;\n      this.filename = filename;\n      this.paths = Module._nodeModulePaths(path.dirname(filename));\n      extension = findExtension(filename);\n      Module._extensions[extension](this, filename);\n      return this.loaded = true;\n    };\n  }\n\n  if (child_process) {\n    fork = child_process.fork;\n    binary = require.resolve('../../bin/coffee');\n    child_process.fork = function(path, args, options) {\n      if (helpers.isCoffee(path)) {\n        if (!Array.isArray(args)) {\n          options = args || {};\n          args = [];\n        }\n        args = [path].concat(args);\n        path = binary;\n      }\n      return fork(path, args, options);\n    };\n  }\n\n}).call(this);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}